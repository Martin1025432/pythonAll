<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<COMMAND><TEMPLATE><RSV_NAME>C_Com</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>C_Com(&lt;communication line number&gt;) = &quot;ETH:&lt;server side IP address&gt;&quot;</FORMAT>
<FORMAT>C_Com(&lt;communication line number&gt;) = &quot;ETH:&lt;server side IP address&gt;, &lt;port number&gt;&quot;</FORMAT>
<SAMPLE>C_Com = &quot;ETH:192.168.0.10&quot;</SAMPLE>
<SAMPLE>C_Com = &quot;ETH:192.168.0.10,10010&quot;</SAMPLE>
<COMMENT>Sets the parameters for the line to be opened by the Open instruction.</COMMENT>
<COMMENT>This is used when the communication destination is changed frequently.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>C_Date</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Character String Variable&gt; = C_Date</FORMAT>
<SAMPLE>C1$=C_Date</SAMPLE>
<COMMENT>This variable returns the current date in the format of year/month/date.</COMMENT>
<COMMENT>For instance, C1$ becomes &quot;2007/04/01&quot;.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>C_Maker</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Character String Variable&gt; = C_Maker</FORMAT>
<SAMPLE>C1$=C_Maker</SAMPLE>
<COMMENT>This variable returns information on the manufacturer of the robot controller.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>C_Mecha</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Character String Variable&gt; = C_Mecha</FORMAT>
<FORMAT>&lt;Character String Variable&gt; = C_Mecha(&lt;Slot number&gt;)</FORMAT>
<SAMPLE>C1$=C_Mecha</SAMPLE>
<SAMPLE>C1$=C_Mecha(1)</SAMPLE>
<COMMENT>This variable returns the name of the mechanism that is acquiring the control right.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>C_NvS1</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Character String Variable&gt; = C_NvS1(&lt;Line number&gt;,&lt;Column number&gt;)</FORMAT>
<SAMPLE>C1$ = C_NvS1(1,1)</SAMPLE>
<COMMENT>Stores the data recognized by the vision sensor in text string data format.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>C_NvS2</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Character String Variable&gt; = C_NvS2(&lt;Line number&gt;,&lt;Column number&gt;)</FORMAT>
<SAMPLE>C1$ = C_NvS2(1,1)</SAMPLE>
<COMMENT>Stores the data recognized by the vision sensor in text string data format.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>C_NvS3</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Character String Variable&gt; = C_NvS3(&lt;Line number&gt;,&lt;Column number&gt;)</FORMAT>
<SAMPLE>C1$ = C_NvS3(1,1)</SAMPLE>
<COMMENT>Stores the data recognized by the vision sensor in text string data format.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>C_NvS4</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Character String Variable&gt; = C_NvS4(&lt;Line number&gt;,&lt;Column number&gt;)</FORMAT>
<SAMPLE>C1$ = C_NvS4(1,1)</SAMPLE>
<COMMENT>Stores the data recognized by the vision sensor in text string data format.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>C_NvS5</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Character String Variable&gt; = C_NvS5(&lt;Line number&gt;,&lt;Column number&gt;)</FORMAT>
<SAMPLE>C1$ = C_NvS5(1,1)</SAMPLE>
<COMMENT>Stores the data recognized by the vision sensor in text string data format.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>C_NvS6</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Character String Variable&gt; = C_NvS6(&lt;Line number&gt;,&lt;Column number&gt;)</FORMAT>
<SAMPLE>C1$ = C_NvS6(1,1)</SAMPLE>
<COMMENT>Stores the data recognized by the vision sensor in text string data format.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>C_NvS7</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Character String Variable&gt; = C_NvS7(&lt;Line number&gt;,&lt;Column number&gt;)</FORMAT>
<SAMPLE>C1$ = C_NvS7(1,1)</SAMPLE>
<COMMENT>Stores the data recognized by the vision sensor in text string data format.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>C_NvS8</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Character String Variable&gt; = C_NvS8(&lt;Line number&gt;,&lt;Column number&gt;)</FORMAT>
<SAMPLE>C1$ = C_NvS8(1,1)</SAMPLE>
<COMMENT>Stores the data recognized by the vision sensor in text string data format.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>C_Prg</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Character String Variable&gt; = C_Prg</FORMAT>
<FORMAT>&lt;Character String Variable&gt; = C_Prg(&lt;Slot number&gt;)</FORMAT>
<SAMPLE>C1$=C_Prg</SAMPLE>
<SAMPLE>C1$=C_Prg(1)</SAMPLE>
<COMMENT>This variable returns the selected program number (name).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>C_Time</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Character String Variable&gt; = C_Time</FORMAT>
<SAMPLE>C1$=C_Time</SAMPLE>
<COMMENT>This variable returns the current time in the format of time:minute:second (24 hours notation).</COMMENT>
<COMMENT>For instance, C1$ becomes &quot;13/01/30&quot;.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>C_User</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Character String Variable&gt; = C_User</FORMAT>
<SAMPLE>C1$=C_User</SAMPLE>
<COMMENT>This variable returns the data registered in the &quot;USERMSG&quot; parameter.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>J_Curr</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Joint Type Variable&gt; = J_Curr</FORMAT>
<FORMAT>&lt;Joint Type Variable&gt; = J_Curr(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>J1=J_Curr</SAMPLE>
<SAMPLE>J1=J_Curr(1)</SAMPLE>
<COMMENT>Returns the joint type data at the current position.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>J_ColMxl</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Joint Type Variable&gt; = J_ColMxl</FORMAT>
<FORMAT>&lt;Joint Type Variable&gt; = J_ColMxl(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>M1=J_ColMxl.J1+10</SAMPLE>
<SAMPLE>M1=J_ColMxl(1).J1+10</SAMPLE>
<COMMENT>Return the maximum value of the differences between the estimated torque and actual torque while the impact detection function is being enabled.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>J_ECurr</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Joint Type Variable&gt; = J_ECurr</FORMAT>
<FORMAT>&lt;Joint Type Variable&gt; = J_ECurr(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>JA=J_ECurr</SAMPLE>
<SAMPLE>JA=J_ECurr(1)</SAMPLE>
<COMMENT>Returns the current encoder pulse value.(Unit: pulse)</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>J_Fbc</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Joint Type Variable&gt; = J_Fbc</FORMAT>
<FORMAT>&lt;Joint Type Variable&gt; = J_Fbc(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>J1=J_Fbc</SAMPLE>
<SAMPLE>J1=J_Fbc(1)</SAMPLE>
<COMMENT>Returns the current position of the joint type that has been generated by encoder feedback.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>J_AmpFbc</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Joint Type Variable&gt; = J_AmpFbc(&lt;Mechanism Number&gt;)</FORMAT>
<FORMAT>&lt;Joint Type Variable&gt; = J_AmpFbc(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>J1=J_AmpFbc</SAMPLE>
<SAMPLE>J1=J_AmpFbc(1)</SAMPLE>
<COMMENT>Returns the current feedback value of each axis.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>J_Origin</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Joint Type Variable&gt; = J_Origin</FORMAT>
<FORMAT>&lt;Joint Type Variable&gt; = J_Origin(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>J1=J_Origin</SAMPLE>
<SAMPLE>J1=J_Origin(1)</SAMPLE>
<COMMENT>Returns the joint data when the origin has been set.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Acl</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_Acl</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_Acl(&lt;Slot number&gt;)</FORMAT>
<SAMPLE>M1=M_Acl</SAMPLE>
<SAMPLE>M1_M_ACL(1)</SAMPLE>
<COMMENT>Returns the ratio of current acceleration time. (%)</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_DAcl</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_DAcl</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_DAcl(&lt;Slot number&gt;)</FORMAT>
<SAMPLE>M1=M_DAcl</SAMPLE>
<SAMPLE>M1=M_DAcl(2)</SAMPLE>
<COMMENT>Returns the ratio of current deceleration time. (%)</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_ClientC</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_ClientC</FORMAT>
<SAMPLE>M1=M_ClientC</SAMPLE>
<COMMENT>Returns the number of client&apos;s connection.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_ClientR</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_ClientR</FORMAT>
<SAMPLE>M1=M_ClientR</SAMPLE>
<COMMENT>Returns the existence state of received data from the client.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>C_ClientIP</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = C_ClientIP(&lt;1-4&gt;)</FORMAT>
<SAMPLE>C1$=C_ClientIP(1)</SAMPLE>
<COMMENT>Returns the IP address of the client&apos;s number n.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_FsCod0</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>M_FsCod0 = &lt;Numeric Variables&gt;</FORMAT>
<FORMAT>M_FsCod0(&lt;Numeric Number&gt;) = &lt;Position Variables&gt;</FORMAT>
<FORMAT>&lt;Numeric Variables&gt; = M_FsCod0</FORMAT>
<FORMAT>&lt;Numeric Variables&gt; = M_FsCod0(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>M_FsCod0=M1</SAMPLE>
<SAMPLE>M_FsCod0(1)=0</SAMPLE>
<SAMPLE>M1=M_FsCod0</SAMPLE>
<SAMPLE>M1=M_FsCod0(1)</SAMPLE>
<COMMENT>The coordinate system of the sense of power control is specified.</COMMENT>
<COMMENT>Refer to the coordinate system of the sense of power control.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_FsCod1</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>M_FsCod1 = &lt;Numeric Variables&gt;</FORMAT>
<FORMAT>M_FsCod1(&lt;Numeric Number&gt;) = &lt;Position Variables&gt;</FORMAT>
<FORMAT>&lt;Numeric Variables&gt; = M_FsCod1</FORMAT>
<FORMAT>&lt;Numeric Variables&gt; = M_FsCod1(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>M_FsCod1=M1</SAMPLE>
<SAMPLE>M_FsCod1(1)=0</SAMPLE>
<SAMPLE>M1=M_FsCod1</SAMPLE>
<SAMPLE>M1=M_FsCod1(1)</SAMPLE>
<COMMENT>The coordinate system of the sense of power control is specified.</COMMENT>
<COMMENT>Refer to the coordinate system of the sense of power control.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_FsCSts</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variables&gt; = M_FsCSts</FORMAT>
<FORMAT>&lt;Numeric Variables&gt; = M_FsCSts(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>M1=M_FsCSts</SAMPLE>
<SAMPLE>M1=M_FsCSts(1)</SAMPLE>
<COMMENT>Refer to whether the force control is effective or invalid.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_FsLmtS</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variables&gt; = M_FsLmtS</FORMAT>
<FORMAT>&lt;Numeric Variables&gt; = M_FsLmtS(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>M1=M_FsLmtS</SAMPLE>
<SAMPLE>M1=M_FsLmtS(1)</SAMPLE>
<COMMENT>Refer whether to exceed the force setting value now.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_FsTAlg</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>M_FsTAlg(&lt;Algorithm Number&gt;, &lt;Parameter Number&gt;) = &lt;Numeric Variables&gt;</FORMAT>
<FORMAT>&lt;Numeric Variables&gt; = M_FsTAlg(&lt;Algorithm Number&gt;, &lt;Parameter Number&gt;)</FORMAT>
<SAMPLE>M_FsTAlg(53,3)=50.0</SAMPLE>
<SAMPLE>M1=M_FsTAlg(53,2)</SAMPLE>
<COMMENT>Set the parameter used by the inspection algorithm.</COMMENT>
<COMMENT>Refer to the value of the parameter used by the inspection algorithm.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_FsTest</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variables&gt; = M_FsTest(&lt;Algorithm Number&gt;, &lt;Data Number&gt;)</FORMAT>
<SAMPLE>M1=M_FsTest(53,1)</SAMPLE>
<COMMENT>Refer to the execution result of the force inspection function.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_FsRsltF</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric variable&gt; = M_FsRsltF</FORMAT>
<FORMAT>&lt;Numeric variable&gt; = M_FsRsltF(&lt;Mecha number&gt;)</FORMAT>
<SAMPLE>M10 = M_FsRsltF</SAMPLE>
<SAMPLE>M10 = M_FsRsltF(1)</SAMPLE>
<COMMENT>Returns the resultant force of force sensor.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_FsRsltM</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric variable&gt; = M_FsRsltM</FORMAT>
<FORMAT>&lt;Numeric variable&gt; = M_FsRsltM(&lt;Mecha number&gt;)</FORMAT>
<SAMPLE>M10 = M_FsRsltM</SAMPLE>
<SAMPLE>M10 = M_FsRsltM(1)</SAMPLE>
<COMMENT>Returns the resultant moment of force sensor.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_FsMass0</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>M_FsMass0 = &lt;Numeric variable&gt;</FORMAT>
<FORMAT>M_FsMass0(&lt;Mecha number&gt;) = &lt;Numeric variable&gt;</FORMAT>
<FORMAT>&lt;Numeric variable&gt; = M_FsMass0</FORMAT>
<FORMAT>&lt;Numeric variable&gt; = M_FsMass0(&lt;Mecha number&gt;)</FORMAT>
<SAMPLE>M_FsMass0 = M10</SAMPLE>
<SAMPLE>M_FsMass0(1) = 1.0</SAMPLE>
<SAMPLE>M100 = M_FsMass0</SAMPLE>
<SAMPLE>M100 = M_FsMass0(1)</SAMPLE>
<COMMENT>The mass of the hand load estimation for gravity offset cancel is specified.</COMMENT>
<COMMENT>Refer to the mass of the hand load estimation for gravity offset cancel.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_FsMass1</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>M_FsMass1 = &lt;Numeric variable&gt;</FORMAT>
<FORMAT>M_FsMass1(&lt;Mecha number&gt;) = &lt;Numeric variable&gt;</FORMAT>
<FORMAT>&lt;Numeric variable&gt; = M_FsMass1</FORMAT>
<FORMAT>&lt;Numeric variable&gt; = M_FsMass1(&lt;Mecha number&gt;)</FORMAT>
<SAMPLE>M_FsMass1 = M10</SAMPLE>
<SAMPLE>M_FsMass1(1) = 1.0</SAMPLE>
<SAMPLE>M100 = M_FsMass1</SAMPLE>
<SAMPLE>M100 = M_FsMass1(1)</SAMPLE>
<COMMENT>The mass of the hand load estimation for gravity offset cancel is specified.</COMMENT>
<COMMENT>Refer to the mass of the hand load estimation for gravity offset cancel.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Gps</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variables&gt; = M_Gps</FORMAT>
<FORMAT>&lt;Numeric Variables&gt; = M_Gps(&lt;Watch Number&gt;)</FORMAT>
<SAMPLE>Def Gps 1, 851, ON, 1</SAMPLE>
<SAMPLE>GpsChk On,1</SAMPLE>
<SAMPLE>Mov P1</SAMPLE>
<SAMPLE>GpsChk Off,1</SAMPLE>
<SAMPLE>M1 = M_Gps(1)</SAMPLE>
<COMMENT>Refer to the frequency to which the sensor reacted in the GPS function.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Map1</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variables&gt; = M_Map1(&lt;Step number&gt;)</FORMAT>
<SAMPLE>Def Map 1, 851, ON, 1, PC1, PC2, 20, 10</SAMPLE>
<SAMPLE>Mov PM1</SAMPLE>
<SAMPLE>GpsChk On,1</SAMPLE>
<SAMPLE>Mov PM2</SAMPLE>
<SAMPLE>GpsChk Off,1</SAMPLE>
<SAMPLE>M_Out(6011) = M_Map1(1)</SAMPLE>
<COMMENT>Refer to the presence of the work of the specified number of steps in the GPS function.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Map2</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variables&gt; = M_Map2(&lt;Step number&gt;)</FORMAT>
<SAMPLE>Def Map 2, 851, ON, 1, PC1, PC2, 20, 10</SAMPLE>
<SAMPLE>Mov PM1</SAMPLE>
<SAMPLE>GpsChk On,2</SAMPLE>
<SAMPLE>Mov PM2</SAMPLE>
<SAMPLE>GpsChk Off,2</SAMPLE>
<SAMPLE>M_Out(6011) = M_Map2(1)</SAMPLE>
<COMMENT>Refer to the presence of the work of the specified number of steps in the GPS function.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Map3</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variables&gt; = M_Map3(&lt;Step number&gt;)</FORMAT>
<SAMPLE>Def Map 3, 851, ON, 1, PC1, PC2, 20, 10</SAMPLE>
<SAMPLE>Mov PM1</SAMPLE>
<SAMPLE>GpsChk On,3</SAMPLE>
<SAMPLE>Mov PM2</SAMPLE>
<SAMPLE>GpsChk Off,3</SAMPLE>
<SAMPLE>M_Out(6011) = M_Map3(1)</SAMPLE>
<COMMENT>Refer to the presence of the work of the specified number of steps in the GPS function.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Map4</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variables&gt; = M_Map4(&lt;Step number&gt;)</FORMAT>
<SAMPLE>Def Map 4, 851, ON, 1, PC1, PC2, 20, 10</SAMPLE>
<SAMPLE>Mov PM1</SAMPLE>
<SAMPLE>GpsChk On,4</SAMPLE>
<SAMPLE>Mov PM2</SAMPLE>
<SAMPLE>GpsChk Off,4</SAMPLE>
<SAMPLE>M_Out(6011) = M_Map4(1)</SAMPLE>
<COMMENT>Refer to the presence of the work of the specified number of steps in the GPS function.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Map5</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variables&gt; = M_Map5(&lt;Step number&gt;)</FORMAT>
<SAMPLE>Def Map 5, 851, ON, 1, PC1, PC2, 20, 10</SAMPLE>
<SAMPLE>Mov PM1</SAMPLE>
<SAMPLE>GpsChk On,5</SAMPLE>
<SAMPLE>Mov PM2</SAMPLE>
<SAMPLE>GpsChk Off,5</SAMPLE>
<SAMPLE>M_Out(6011) = M_Map5(1)</SAMPLE>
<COMMENT>Refer to the presence of the work of the specified number of steps in the GPS function.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Map6</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variables&gt; = M_Map6(&lt;Step number&gt;)</FORMAT>
<SAMPLE>Def Map 6, 851, ON, 1, PC1, PC2, 20, 10</SAMPLE>
<SAMPLE>Mov PM1</SAMPLE>
<SAMPLE>GpsChk On,6</SAMPLE>
<SAMPLE>Mov PM2</SAMPLE>
<SAMPLE>GpsChk Off,6</SAMPLE>
<SAMPLE>M_Out(6011) = M_Map6(1)</SAMPLE>
<COMMENT>Refer to the presence of the work of the specified number of steps in the GPS function.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Map7</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variables&gt; = M_Map7(&lt;Step number&gt;)</FORMAT>
<SAMPLE>Def Map 7, 851, ON, 1, PC1, PC2, 20, 10</SAMPLE>
<SAMPLE>Mov PM1</SAMPLE>
<SAMPLE>GpsChk On,7</SAMPLE>
<SAMPLE>Mov PM2</SAMPLE>
<SAMPLE>GpsChk Off,7</SAMPLE>
<SAMPLE>M_Out(6011) = M_Map7(1)</SAMPLE>
<COMMENT>Refer to the presence of the work of the specified number of steps in the GPS function.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Map8</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variables&gt; = M_Map8(&lt;Step number&gt;)</FORMAT>
<SAMPLE>Def Map 8, 851, ON, 1, PC1, PC2, 20, 10</SAMPLE>
<SAMPLE>Mov PM1</SAMPLE>
<SAMPLE>GpsChk On,8</SAMPLE>
<SAMPLE>Mov PM2</SAMPLE>
<SAMPLE>GpsChk Off,8</SAMPLE>
<SAMPLE>M_Out(6011) = M_Map8(1)</SAMPLE>
<COMMENT>Refer to the presence of the work of the specified number of steps in the GPS function.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_MoTrg</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variables&gt; = M_MoTrg(&lt;Mo-Trigger number&gt;)</FORMAT>
<SAMPLE>M1=M_MoTrg(1)</SAMPLE>
<SAMPLE>If M_MoTrg(2)=1 Then Goto *TRGON</SAMPLE>
<COMMENT>Refer to a present state of the specified Mo-Trigger.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_NAcl</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_NAcl</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_NAcl(&lt;Slot number&gt;)</FORMAT>
<SAMPLE>M1=M_NAcl</SAMPLE>
<SAMPLE>M1=M_NAcl(3)</SAMPLE>
<COMMENT>Returns the initial acceleration time value. (100%)</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_NDAcl</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_NDAcl</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_NDAcl(&lt;Slot number&gt;)</FORMAT>
<SAMPLE>M1=M_NDAcl</SAMPLE>
<SAMPLE>M1=M_NDAcl(4)</SAMPLE>
<COMMENT>Returns the initial deceleration time value. (100%)</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_AclSts</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_AclSts</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_AclSts(&lt;Slot number&gt;)</FORMAT>
<SAMPLE>M1=M_AclSts</SAMPLE>
<SAMPLE>M1=M_AclSts(5)</SAMPLE>
<COMMENT>Returns the current acceleration/deceleration status. </COMMENT>
<COMMENT>(Current status: 0 = Stopped, 1 = Accelerating, 2 = Constant speed, 3 = Decelerating)</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_BrkCq</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_BrkCq</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_BrkCq(&lt;Slot number&gt;)</FORMAT>
<SAMPLE>If M_BrkCq=1 Then Hlt</SAMPLE>
<SAMPLE>If M_BrkCq(1)=1 Then Hlt</SAMPLE>
<COMMENT>Returns the result of executing a line containing a Break command that was executed last.</COMMENT>
<COMMENT>(Return value: 1:Break was executed, 0:Break was not executed)</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_BsNo</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_BsNo</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_BsNo(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>M1=M_BsNo</SAMPLE>
<COMMENT>Return the present base coordinate number</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_BTime</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_BTime</FORMAT>
<SAMPLE>M1=M_BTime</SAMPLE>
<COMMENT>Returns the remaining hour of battery left. (Unit: hour)</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_CavSts</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>Def Act 1, M_CavSts &gt; 0 GoTo *LCAV, S</FORMAT>
<FORMAT>Def Act 1, M_CavSts(&lt;Mechanism Number&gt;) &gt; 0 GoTo *LCAV, S</FORMAT>
<FORMAT>M_CavSts(&lt;Mechanism Number&gt;) = &lt;Numeric Variable&gt;</FORMAT>
<SAMPLE>Def Act 1, M_CavSts &gt; 0 GoTo *LCAV, S</SAMPLE>
<SAMPLE>M_CavSts = 0</SAMPLE>
<COMMENT>Return the collision avoidance status.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_CmpDst</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_CmpDst</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_CmpDst(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>M1=M_CmpDst</SAMPLE>
<SAMPLE>M1=M_CmpDst(1)</SAMPLE>
<COMMENT>Returns the amount of difference (in mm) between the command value and the actual value from the robot when executing the compliance function.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_CmpLmt</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>Def Act 1, M_CmpLmt = 1 GoTo *LMT</FORMAT>
<FORMAT>Def Act 1, M_CmpLmt(&lt;Mechanism Number&gt;) = 1 GoTo *LMT</FORMAT>
<SAMPLE>Def Act 1, M_CmpLmt = 1 GoTo *LMT</SAMPLE>
<SAMPLE>Def Act 1, M_CmpLmt(1) = 1 GoTo *LMT</SAMPLE>
<COMMENT>Returns whether or not the command value when the compliance function is being executed is about to exceed various limits.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_ColSts</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>Def Act 1, M_ColSts = 1 GoTo *LCOL,S</FORMAT>
<FORMAT>Def Act 1, M_ColSts(&lt;Mechanism Number&gt;) = 1 GoTo *LCOL,S</FORMAT>
<SAMPLE>Def Act 1, M_ColSts = 1 GoTo *HOME, S</SAMPLE>
<SAMPLE>Def Act 1, M_ColSts(1) = 1 GoTo *HOME, S</SAMPLE>
<COMMENT>Return the impact detection status.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Cstp</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_Cstp</FORMAT>
<SAMPLE>M1=M_Cstp</SAMPLE>
<COMMENT>Returns the status of whether or not a program is on cycle stop.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Cys</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numerical variable&gt; = M_Cys</FORMAT>
<SAMPLE>M1=M_Cys</SAMPLE>
<COMMENT>Returns the status of whether or not a program is on cycle operation.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_DIn</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_DIn(&lt;Input register number&gt;)</FORMAT>
<SAMPLE>M1=M_DIn(6000)</SAMPLE>
<SAMPLE>If M_DIn(6000)=100 Then</SAMPLE>
<SAMPLE>EndIf</SAMPLE>
<COMMENT>References the input register of CC-Link (optional).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_DIn32</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable(Long precision integer)&gt; = M_DIn32(&lt;Input register number&gt;)</FORMAT>
<SAMPLE>M1&amp;=M_DIn32(6000)</SAMPLE>
<SAMPLE>If M_DIn32(6000)=&amp;H12345678 Then</SAMPLE>
<SAMPLE>EndIf</SAMPLE>
<COMMENT>References the input register of CC-Link (option) to 32bit data.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_DOut</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>M_DOut(&lt;Output register number&gt;) = &lt;Numeric Variable&gt;</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_DOut(&lt;Output register number&gt;)</FORMAT>
<SAMPLE>M_DOut(6000)=100</SAMPLE>
<SAMPLE>If M_DOut(6000)=100 Then</SAMPLE>
<SAMPLE>EndIf</SAMPLE>
<COMMENT>Write or reference the output register of CC-Link (optional).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_DOut32</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>M_DOut32(&lt;Output register number&gt;) = &lt;Numeric Variable&gt;</FORMAT>
<FORMAT>&lt;Numeric Variable((Long precision integer)) &gt; = M_DOut32(&lt;Output register number&gt;)</FORMAT>
<SAMPLE>M_DOut32(6000)=&amp;H12345678</SAMPLE>
<SAMPLE>If M_DOut32(6000) = &amp;H12345678 Then</SAMPLE>
<SAMPLE>EndIf</SAMPLE>
<COMMENT>References the output register of CC-Link (option) to 32bit data.</COMMENT>
<COMMENT>Write 32bit data in the output register of CC-Link (option).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Enc</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_Enc</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_Enc(&lt;Encoder number&gt;)</FORMAT>
<SAMPLE>M1 = M_Enc</SAMPLE>
<SAMPLE>M1 = M_Enc(1)</SAMPLE>
<COMMENT>Write or reference the external encoder value of the specified encoder number.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_EHPos1</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_EHPos1(&lt;Point No.&gt;)</FORMAT>
<FORMAT>M_EHPos1(&lt;Point No.&gt;) = &lt;Numeric Data&gt;</FORMAT>
<SAMPLE>M1 = M_EHPos1(1)</SAMPLE>
<SAMPLE>M_EHPos1(1) = 5.0</SAMPLE>
<COMMENT>References or sets the point data of Electric Hand 1.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_EHPos2</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_EHPos2(&lt;Point No.&gt;)</FORMAT>
<FORMAT>M_EHPos2(&lt;Point No.&gt;) = &lt;Numeric Data&gt;</FORMAT>
<SAMPLE>M2 = M_EHPos2(1)</SAMPLE>
<SAMPLE>M_EHPos2(1) = 5.0</SAMPLE>
<COMMENT>References or sets the point data of Electric Hand 2.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_EHPos3</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_EHPos3(&lt;Point No.&gt;)</FORMAT>
<FORMAT>M_EHPos3(&lt;Point No.&gt;) = &lt;Numeric Data&gt;</FORMAT>
<SAMPLE>M3 = M_EHPos3(1)</SAMPLE>
<SAMPLE>M_EHPos3(1) = 5.0</SAMPLE>
<COMMENT>References or sets the point data of Electric Hand 3.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_EHCur</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_EHCur</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_EHCur(&lt;Hand No.&gt;)</FORMAT>
<SAMPLE>M1 = M_EHCur</SAMPLE>
<SAMPLE>M1 = M_EHCur(1)</SAMPLE>
<COMMENT>Returns the current position of Electric Hand.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_EHBusy</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_EHBusy</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_EHBusy(&lt;Hand No.&gt;)</FORMAT>
<SAMPLE>M1 = M_EHBusy</SAMPLE>
<SAMPLE>M1 = M_EHBusy(1)</SAMPLE>
<COMMENT>Returns the state of operation of Electric Hand.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_EHInPs</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_EHInPs</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_EHInPs(&lt;Hand No.&gt;)</FORMAT>
<SAMPLE>M1 = M_EHInPs</SAMPLE>
<SAMPLE>M1 = M_EHInPs(1)</SAMPLE>
<COMMENT>Returns the state of target position attainment of Electric Hand.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_EHHold</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_EHHold</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_EHHold(&lt;Hand No.&gt;)</FORMAT>
<SAMPLE>M1 = M_EHHold</SAMPLE>
<SAMPLE>M1 = M_EHHold(1)</SAMPLE>
<COMMENT>Returns the state of holding of Electric Hand.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_EHZone</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_EHZone</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_EHZone(&lt;Hand No.&gt;)</FORMAT>
<SAMPLE>M1 = M_EHZone</SAMPLE>
<SAMPLE>M1 = M_EHZone(1)</SAMPLE>
<COMMENT>Returns the state of stop in specified area of Electric Hand.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_EHOrg</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_EHOrg</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_EHOrg(&lt;Hand No.&gt;)</FORMAT>
<SAMPLE>M1 = M_EHOrg</SAMPLE>
<SAMPLE>M1 = M_EHOrg(1)</SAMPLE>
<COMMENT>Returns the state of original position return of Electric Hand.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_EHOPos</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_EHOPos</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_EHOPos(&lt;Hand No.&gt;)</FORMAT>
<SAMPLE>M1 = M_EHOPos</SAMPLE>
<SAMPLE>M1 = M_EHOPos(1)</SAMPLE>
<COMMENT>Returns the movement completion point number of Electric Hand.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_EHTMd1</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_EHTMd1(&lt;Table No.&gt;)</FORMAT>
<SAMPLE>M1 = M_EHTMd1(1)</SAMPLE>
<COMMENT>References the operate mode in table data of Electric Hand 1.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_EHTMd2</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_EHTMd2(&lt;Table No.&gt;)</FORMAT>
<SAMPLE>M1 = M_EHTMd2(1)</SAMPLE>
<COMMENT>References the operate mode in table data of Electric Hand 2.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_EHTMd3</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_EHTMd3(&lt;Table No.&gt;)</FORMAT>
<SAMPLE>M1 = M_EHTMd3(1)</SAMPLE>
<COMMENT>References the operate mode in table data of Electric Hand 3.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_EncL</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_EncL(&lt;Encoder number&gt;)</FORMAT>
<FORMAT>M_EncL(&lt;Encoder number&gt;) = &lt;Constant&gt;</FORMAT>
<SAMPLE>M1 = M_EncL(1)</SAMPLE>
<SAMPLE>M_EncL(1) = 0</SAMPLE>
<COMMENT>Write or reference the external encoder value when the TREN signal of the specified encoder number.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_EncMax</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_EncMax</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_EncMax(&lt;Encoder number&gt;)</FORMAT>
<SAMPLE>M1 = M_EncMax</SAMPLE>
<SAMPLE>M1 = M_EncMax(1)</SAMPLE>
<COMMENT>Returns the external encoder maximum value of the specified encoder number.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_EncMin</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_EncMin</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_EncMin(&lt;Encoder number&gt;)</FORMAT>
<SAMPLE>M1 = M_EncMin</SAMPLE>
<SAMPLE>M1 = M_EncMin(1)</SAMPLE>
<COMMENT>Returns the external encoder minimum value of the specified encoder number.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_EncSpd</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_EncSpd</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_EncSpd(&lt;Encoder number&gt;)</FORMAT>
<SAMPLE>M1 = M_EncSpd</SAMPLE>
<SAMPLE>M1 = M_EncSpd(1)</SAMPLE>
<COMMENT>Returns the external encoder speed of the specified encoder number.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Err</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_Err</FORMAT>
<SAMPLE>If M_Err=0 Then *LABEL</SAMPLE>
<COMMENT>Returns whether an error has been generated.</COMMENT>
<COMMENT>(1: Error has been generated, 0: No error)</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_ErrLvl</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_ErrLvl</FORMAT>
<SAMPLE>M1=M_ErrLvl</SAMPLE>
<SAMPLE>If M_ErrLvl=1 Then *LABEL</SAMPLE>
<COMMENT>Returns the level of the generated error.</COMMENT>
<COMMENT>(Caution/Low/High1/High2 = 1/2/3/4)</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_ErrNo</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_ErrNo</FORMAT>
<SAMPLE>M1=M_ErrNo</SAMPLE>
<SAMPLE>If M_ErrNo=0 Then *LABEL</SAMPLE>
<COMMENT></COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_ESpd</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_ESpd</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_ESpd(&lt;Slot Number&gt;)</FORMAT>
<SAMPLE>M1 = M_ESpd</SAMPLE>
<SAMPLE>M2 = M_ESpd(2)</SAMPLE>
<COMMENT>Returns the transit speed of the Ex-T coordinate during the Ex-T control and the Ex-T spline interpolation.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Exp</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_Exp</FORMAT>
<SAMPLE>M1=M_Exp</SAMPLE>
<COMMENT>Returns the base of natural logarithm (2.718281828459045).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Fbd</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_Fbd</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_Fbd(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>Def Act 1, M_Fbd &gt; 10 GOTO *SUB1, S</SAMPLE>
<SAMPLE>Def Act 1, M_Fbd(1) &gt; 10 GOTO *SUB1, S</SAMPLE>
<COMMENT>Returns the difference between the command position and the feedback position.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_G</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_G</FORMAT>
<SAMPLE>M1 = M_G</SAMPLE>
<COMMENT>Returns gravitational constant (9.80665).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Hnd</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_Hnd(&lt;Hand Number&gt;)</FORMAT>
<FORMAT>M_Hnd(&lt;Hand Number&gt;) = &lt;Equation&gt;</FORMAT>
<SAMPLE>M1=M_Hnd(1)</SAMPLE>
<SAMPLE>M_Hnd(1)=0</SAMPLE>
<COMMENT>The hand opening and shutting can be directed with WthIf.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_HndCq</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_HndCq(&lt;Equation&gt;)</FORMAT>
<SAMPLE>M1=M_HndCq(1)</SAMPLE>
<COMMENT>Returns the hand check input signal(1 - 8) value.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_In</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_In(&lt;Input signal number&gt;)</FORMAT>
<SAMPLE>M1=M_In(0)</SAMPLE>
<SAMPLE>If M_In(0)=M_On Then *LABEL</SAMPLE>
<COMMENT>The value of the input signal is returned by the bit signal expression. </COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Inb</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_Inb(&lt;Input signal number&gt;)</FORMAT>
<SAMPLE>M1=M_Inb(3) AND &amp;H7</SAMPLE>
<COMMENT>The value of the input signal is returned by byte unit (8 bits) expression.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Inw</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_Inw(&lt;Input signal number&gt;)</FORMAT>
<SAMPLE>M1=M_Inw(5) And &amp;H3FF</SAMPLE>
<COMMENT>The value of the input signal is returned by word unit (16 bits) expression.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_In8</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_In8(&lt;Input signal number&gt;)</FORMAT>
<SAMPLE>M1=M_In8(3) AND &amp;H7</SAMPLE>
<COMMENT>The value of the input signal is returned by byte unit (8 bits) expression.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_In16</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_In16(&lt;Input signal number&gt;)</FORMAT>
<SAMPLE>M1=M_In16(5) And &amp;H3FF</SAMPLE>
<COMMENT>The value of the input signal is returned by word unit (16 bits) expression.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_In32</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_In32(&lt;Input signal number&gt;)</FORMAT>
<SAMPLE>M1=M_In32(5) And &amp;H7FFFFF</SAMPLE>
<COMMENT>The value of the input signal is returned by double word unit (32 bits) expression.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_JOvrd</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_JOvrd</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_JOvrd(&lt;Slot number&gt;)</FORMAT>
<SAMPLE>M1=M_JOvrd</SAMPLE>
<SAMPLE>M1=M_JOvrd(1)</SAMPLE>
<COMMENT>Returns value specified by the override JOvrd instruction for joint interpolation.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_NJOvrd</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_NJOvrd</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_NJOvrd(&lt;Slot number&gt;)</FORMAT>
<SAMPLE>M1=M_NJOvrd</SAMPLE>
<SAMPLE>M1=M_NJOvrd(1)</SAMPLE>
<COMMENT>Returns initial override value (100%) for joint interpolation.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_OPovrd</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_OPovrd</FORMAT>
<SAMPLE>M1=M_OPovrd</SAMPLE>
<COMMENT>Returns override value of the operation panel.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Ovrd</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_Ovrd</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_Ovrd(&lt;Slot number&gt;)</FORMAT>
<SAMPLE>M1=M_Ovrd</SAMPLE>
<SAMPLE>M1=M_Ovrd(1)</SAMPLE>
<COMMENT>Returns current override value, value specified by the Ovrd instruction.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_NOvrd</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_NOvrd</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_NOvrd(&lt;Slot number&gt;)</FORMAT>
<SAMPLE>M1=M_NOvrd</SAMPLE>
<SAMPLE>M1=M_NOvrd(1)</SAMPLE>
<COMMENT>Returns initial override value (100%).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_LdFact</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_LdFact(&lt;Axis Number&gt;)</FORMAT>
<SAMPLE>IF M_LdFact(2)&gt;90 THEN</SAMPLE>
<COMMENT>The load ratio for each joint axis can be referenced.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_LdFMax</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_LdFMax(&lt;Axis Number&gt;)</FORMAT>
<SAMPLE>IF M_LdFMax(2) &gt; 90 THEN</SAMPLE>
<COMMENT>The maximum load factor of the specified axis can be referred.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Line</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_Line</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_Line(&lt;Slot number&gt;)</FORMAT>
<SAMPLE>M1=M_Line</SAMPLE>
<SAMPLE>M1=M_Line(2)</SAMPLE>
<COMMENT>Returns the line number that is being executed.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Mode</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_Mode</FORMAT>
<SAMPLE>M1=M_Mode</SAMPLE>
<COMMENT>Returns the key switch mode of the operation panel.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_NvNum</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_NvNum</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_NvNum(&lt;Vision sensor number&gt;)</FORMAT>
<SAMPLE>M1 = M_NvNum</SAMPLE>
<SAMPLE>M1 = M_NvNum(1)</SAMPLE>
<COMMENT>Indicates the number of pieces of work detected by the vision sensor.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_NvOpen</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_NvOpen</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_NvOpen(&lt;Vision sensor number&gt;)</FORMAT>
<SAMPLE>M1 = M_NvOpen</SAMPLE>
<SAMPLE>M1 = M_NvOpen(1)</SAMPLE>
<COMMENT>Indicates the vision sensor line connection status.</COMMENT>
<COMMENT>0: Line connecting (logon not complete)</COMMENT>
<COMMENT>1: Logon complete</COMMENT>
<COMMENT>-1: Not connected</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_NvS1</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_NvS1(&lt;Line number&gt;,&lt;Column number&gt;)</FORMAT>
<SAMPLE>M1 = M_NvS1(1,1)</SAMPLE>
<COMMENT>Stores the data recognized by the vision sensor in numeric data format.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_NvS2</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_NvS2(&lt;Line number&gt;,&lt;Column number&gt;)</FORMAT>
<SAMPLE>M1 = M_NvS2(1,1)</SAMPLE>
<COMMENT>Stores the data recognized by the vision sensor in numeric data format.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_NvS3</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_NvS3(&lt;Line number&gt;,&lt;Column number&gt;)</FORMAT>
<SAMPLE>M1 = M_NvS3(1,1)</SAMPLE>
<COMMENT>Stores the data recognized by the vision sensor in numeric data format.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_NvS4</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_NvS4(&lt;Line number&gt;,&lt;Column number&gt;)</FORMAT>
<SAMPLE>M1 = M_NvS4(1,1)</SAMPLE>
<COMMENT>Stores the data recognized by the vision sensor in numeric data format.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_NvS5</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_NvS5(&lt;Line number&gt;,&lt;Column number&gt;)</FORMAT>
<SAMPLE>M1 = M_NvS5(1,1)</SAMPLE>
<COMMENT>Stores the data recognized by the vision sensor in numeric data format.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_NvS6</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_NvS6(&lt;Line number&gt;,&lt;Column number&gt;)</FORMAT>
<SAMPLE>M1 = M_NvS6(1,1)</SAMPLE>
<COMMENT>Stores the data recognized by the vision sensor in numeric data format.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_NvS7</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_NvS7(&lt;Line number&gt;,&lt;Column number&gt;)</FORMAT>
<SAMPLE>M1 = M_NvS7(1,1)</SAMPLE>
<COMMENT>Stores the data recognized by the vision sensor in numeric data format.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_NvS8</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_NvS8(&lt;Line number&gt;,&lt;Column number&gt;)</FORMAT>
<SAMPLE>M1 = M_NvS8(1,1)</SAMPLE>
<COMMENT>Stores the data recognized by the vision sensor in numeric data format.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_On</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_On</FORMAT>
<SAMPLE>M1=M_On</SAMPLE>
<COMMENT>Always returns 1 (M_On).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Off</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_Off</FORMAT>
<SAMPLE>M2=M_Off</SAMPLE>
<COMMENT>Always returns 0 (M_Off).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Open</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>Numerical variable&gt; = M_Open</FORMAT>
<FORMAT>Numerical variable&gt; = M_Open&lt;File number&gt;</FORMAT>
<SAMPLE>If M_Open&lt;&gt;1 Then GoTo *SUB1</SAMPLE>
<SAMPLE>If M_Open(1)&lt;&gt;1 Then GoTo *SUB1</SAMPLE>
<COMMENT>RetReturns the status indicating whether or not a file is opened.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Out</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>M_Out(&lt;Output signal number&gt;) = &lt;Numeric Variable&gt;</FORMAT>
<FORMAT>M_Out(&lt;Output signal number&gt;) = &lt;Numeric Variable&gt; Dly &lt;Time&gt;</FORMAT>
<SAMPLE>M_Out(2)=1</SAMPLE>
<SAMPLE>M_Out(2)=1 DLY 5</SAMPLE>
<COMMENT>Writes or references external output signal.</COMMENT>
<COMMENT>M_Out : Output signal bit.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Outb</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>M_Outb(&lt;Output signal number&gt;) = &lt;Numeric Variable&gt;</FORMAT>
<FORMAT>M_Outb(&lt;Output signal number&gt;) = &lt;Numeric Variable&gt; Dly &lt;Time&gt;</FORMAT>
<SAMPLE>M_Outb(2)=&amp;HFF</SAMPLE>
<SAMPLE>M_Outb(2)=&amp;HFF DLY 5</SAMPLE>
<COMMENT>Writes or references external output signal.</COMMENT>
<COMMENT>M_Outb : Output signal byte (8 bits).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Outw</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>M_Outw(&lt;Output signal number&gt;) = &lt;Numeric Variable&gt;</FORMAT>
<FORMAT>M_Outw(&lt;Output signal number&gt;) = &lt;Numeric Variable&gt; Dly &lt;Time&gt;</FORMAT>
<SAMPLE>M_Outw(2)=&amp;HFFFF</SAMPLE>
<SAMPLE>M_Outw(2)=&amp;HFFFF DLY 5</SAMPLE>
<COMMENT>Writes or references external output signal.</COMMENT>
<COMMENT>M_Outw : Output signal word (16 bits).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Out8</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>M_Out8(&lt;Output signal number&gt;) = &lt;Numeric Variable&gt;</FORMAT>
<FORMAT>M_Out8(&lt;Output signal number&gt;) = &lt;Numeric Variable&gt; Dly &lt;Time&gt;</FORMAT>
<SAMPLE>M_Out8(2)=&amp;HFF</SAMPLE>
<SAMPLE>M_Out8(2)=&amp;HFF DLY 5</SAMPLE>
<COMMENT>Writes or references external output signal.</COMMENT>
<COMMENT>M_Out8 : Output signal byte (8 bits).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Out16</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>M_Out16(&lt;Output signal number&gt;) = &lt;Numeric Variable&gt;</FORMAT>
<FORMAT>M_Out16(&lt;Output signal number&gt;) = &lt;Numeric Variable&gt; Dly &lt;Time&gt;</FORMAT>
<SAMPLE>M_Out16(2)=&amp;HFFFF</SAMPLE>
<SAMPLE>M_Out16(2)=&amp;HFFFF DLY 5</SAMPLE>
<COMMENT>Writes or references external output signal.</COMMENT>
<COMMENT>M_Out16 : Output signal word (16 bits).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Out32</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>M_Out32(&lt;Output signal number&gt;) = &lt;Numeric Variable&gt;</FORMAT>
<FORMAT>M_Out32(&lt;Output signal number&gt;) = &lt;Numeric Variable&gt; Dly &lt;Time&gt;</FORMAT>
<SAMPLE>M_Out32(2)=&amp;HFFFFFFFF</SAMPLE>
<SAMPLE>M_Out32(2)=&amp;HFFFFFFFF DLY 5</SAMPLE>
<COMMENT>Writes or references external output signal.</COMMENT>
<COMMENT>M_Out32 : Output signal double word (32 bits).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_PbNum</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_PbNum</FORMAT>
<SAMPLE>M1=M_PbNum</SAMPLE>
<COMMENT>The number of the station currently in operation</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_PbFnum</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_PbFnum</FORMAT>
<SAMPLE>M1=M_PbFnum</SAMPLE>
<COMMENT>The station number which saved in the flash ROM</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_PI</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_PI</FORMAT>
<SAMPLE>M1=M_PI</SAMPLE>
<COMMENT>Returns pi (3.14159265358979).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Psa</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_Psa</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_Psa(&lt;Slot number&gt;)</FORMAT>
<SAMPLE>M1=M_Psa</SAMPLE>
<SAMPLE>M1=M_Psa(2)</SAMPLE>
<COMMENT>Returns whether the program is selectable by the specified task slot.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Ratio</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_Ratio</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_Ratio(&lt;Slot number&gt;)</FORMAT>
<SAMPLE>Mov P1 WthIf M_Ratio&gt;80, M_Out(1)=1</SAMPLE>
<SAMPLE>Mov P1 WthIf M_Ratio(2)&gt;80, M_Out(1)=1</SAMPLE>
<COMMENT>Returns how much the robot has approached the target position (0 to 100%) while the robot is moving.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_RCInfo</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_RCInfo(&lt;Information ID No.&gt;,&lt;Element No.&gt;)</FORMAT>
<SAMPLE>MENCTmpJ1=M_RCInfo(1,1)</SAMPLE>
<SAMPLE>MENCTmpJ1Max=M_RCInfo(2,1)</SAMPLE>
<SAMPLE>MRCTmp=M_RCInfo(3,1)</SAMPLE>
<COMMENT>Robot controller&apos;s various information is read.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_RDst</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_RDst</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_RDst(&lt;Slot number&gt;)</FORMAT>
<SAMPLE>Mov P1 WthIf M_RDst&lt;10, M_Out(10)=1</SAMPLE>
<SAMPLE>Mov P1 WthIf M_RDst(2)&lt;10, M_Out(10)=1</SAMPLE>
<COMMENT>Returns the remaining distance to the target position (in mm) while the robot is moving.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Run</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_Run</FORMAT>
<FORMAT>Numeric Variable&gt; = M_Run(&lt;Slot number&gt;)</FORMAT>
<SAMPLE>M1=M_Run</SAMPLE>
<SAMPLE>M1=M_Run(2)</SAMPLE>
<COMMENT>Returns whether the program for the specified task slot is being executed.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_SetAdl</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>M_SetAdl(&lt;Axis Number&gt;) = &lt;Numeric Variable&gt;</FORMAT>
<SAMPLE>M_SetAdl(2)=70</SAMPLE>
<COMMENT>Set the acceleration/deceleration time distribution rate of the specified axis when optimum acceleration/deceleration control is enabled (Oadl On).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_SfMode</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variables&gt; = M_SfMode</FORMAT>
<SAMPLE>M1=M_SfMode</SAMPLE>
<SAMPLE>M_Outb(100)=M_SfMode</SAMPLE>
<COMMENT>Returns the monitor mode status of the functional safety.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_SimLdf</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_SimLdf(&lt;Axis Number&gt;)</FORMAT>
<SAMPLE>M1=M_SimLdf(2)</SAMPLE>
<COMMENT>Return the calculation result of the load factor simulation. (unit: %)</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_SimSet</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>M_SimSet = &lt;Numeric Variable&gt;</FORMAT>
<SAMPLE>M_SimSet=1</SAMPLE>
<SAMPLE>M_SimSet=0</SAMPLE>
<COMMENT>Beginning/end of the load factor simulation is specified.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_SkipCq</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_SkipCq</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_SkipCq(&lt;Slot number&gt;)</FORMAT>
<SAMPLE>If M_SkipCq=1 Then GoTo *SUB1</SAMPLE>
<SAMPLE>If M_SkipCq(2)=1 Then GoTo *SUB1</SAMPLE>
<COMMENT>Returns the result of executing the line containing the last executed Skip command.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Spd</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_Spd</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_Spd(&lt;Slot number&gt;)</FORMAT>
<SAMPLE>M1=M_Spd</SAMPLE>
<SAMPLE>M1=M_Spd(2)</SAMPLE>
<COMMENT>Returns the currently set speed during XYZ and JOINT interpolation.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_NSpd</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_NSpd</FORMAT>
<SAMPLE>M1=M_NSpd</SAMPLE>
<COMMENT>Returns the initial value at the speed during XYZ and JOINT interpolation.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_RSpd</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_RSpd</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_RSpd(&lt;Slot number&gt;)</FORMAT>
<SAMPLE>M1=M_RSpd</SAMPLE>
<SAMPLE>M1=M_RSpd(2)</SAMPLE>
<COMMENT>Returns the directive speed information during XYZ and JOINT interpolation.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_SplPno</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_SplPno</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_SplPno(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>M1=M_SplPno</SAMPLE>
<SAMPLE>M1=M_SplPno(1)</SAMPLE>
<COMMENT>Returns the number of the newest passing path point of the spline interpolation.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_SplVar</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_SplVar</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_SplVar(&lt;Mechanism Number&gt;)</FORMAT>
<FORMAT>M_SplVar = &lt;Integer number&gt;</FORMAT>
<FORMAT>M_SplVar(&lt;Mechanism Number&gt;) = &lt;Numeric Variable&gt;</FORMAT>
<FORMAT>M_SplVar = &lt;Integer number&gt;</FORMAT>
<FORMAT>M_SplVar(&lt;Mechanism Number&gt;) = &lt;Numeric Variable&gt;</FORMAT>
<SAMPLE>M1=M_SplVar</SAMPLE>
<SAMPLE>M1=M_SplVar(1)</SAMPLE>
<SAMPLE>M_SplVar=0</SAMPLE>
<SAMPLE>M_SplVar(1)=0</SAMPLE>
<SAMPLE>M_SplVar=M2</SAMPLE>
<SAMPLE>M_SplVar(1)=M2</SAMPLE>
<COMMENT>Returns the latest numerical value set to the path point of the spline file.</COMMENT>
<COMMENT>The value of this state variable is changed to the specified integral value.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Svo</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_Svo(&lt;Mechanism Number&gt;)</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_Svo(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>M1=M_Svo</SAMPLE>
<SAMPLE>M1=M_Svo(1)</SAMPLE>
<COMMENT>Returns the current status of the servo power supply.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Timer</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_Timer(&lt;Equation&gt;)</FORMAT>
<SAMPLE>M1=M_Timer(1)</SAMPLE>
<COMMENT>Time is measured in milliseconds.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Tool</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_Tool</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_Tool(&lt;Mechanism Number&gt;)</FORMAT>
<FORMAT>M_Tool = (&lt;Equation&gt;)</FORMAT>
<FORMAT>M_Tool(&lt;Mechanism Number&gt;) = (&lt;Equation&gt;)</FORMAT>
<SAMPLE>M1=M_Tool</SAMPLE>
<SAMPLE>M1=M_Tool(1)</SAMPLE>
<SAMPLE>M_Tool=2</SAMPLE>
<SAMPLE>M_Tool(1)=2</SAMPLE>
<COMMENT>In addition to using the tool data (MEXTL1 to 4) of the specified number as the current tool data, it is also set in the MEXTL parameter.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Trbfct</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_Trbfct</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_Trbfct(&lt;Buffer Number&gt;)</FORMAT>
<SAMPLE>If M_Trbfct &gt; 0 Then Goto *TRACK</SAMPLE>
<SAMPLE>If M_Trbfct(1) &gt; 0 Then Goto *TRACK</SAMPLE>
<COMMENT>Return the number of data stored in the specified tracking buffer.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_TrkCq</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_TrkCq</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_TrkCq(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>M1 = M_TrkCq</SAMPLE>
<SAMPLE>M1 = M_TrkCq(1)</SAMPLE>
<COMMENT>Return the tracking operation of the specified mechanism.</COMMENT>
<COMMENT>1: Tracking</COMMENT>
<COMMENT>0: Not tracking</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_TrkBuf</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_TrkBuf</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_TrkBuf(&lt;Condition Number&gt;)</FORMAT>
<FORMAT>M_TrkBuf = &lt;Equation&gt;</FORMAT>
<FORMAT>M_TrkBuf(&lt;Condition Number&gt;) = &lt;Equation&gt;</FORMAT>
<SAMPLE>M1 = M_TrkBuf</SAMPLE>
<SAMPLE>M1 = M_TrkBuf(1)</SAMPLE>
<SAMPLE>M_TrkBuf = 2</SAMPLE>
<SAMPLE>M_TrkBuf(1) = 2</SAMPLE>
<COMMENT>This state variable specifies the tracking buffer number that reads out data.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_TrkStart</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_TrkStart</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_TrkStart(&lt;Condition Number&gt;)</FORMAT>
<FORMAT>M_TrkStart = &lt;Equation&gt;</FORMAT>
<FORMAT>M_TrkStart(&lt;Condition Number&gt;) = &lt;Equation&gt;</FORMAT>
<SAMPLE>M1 = M_TrkStart</SAMPLE>
<SAMPLE>M1 = M_TrkStart(1)</SAMPLE>
<SAMPLE>M_TrkStart = +200</SAMPLE>
<SAMPLE>M_TrkStart(1) = +200</SAMPLE>
<COMMENT>This state variable specifies coordinates on the starting side of a tracking possible area.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_TrkEnd</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_TrkEnd</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_TrkEnd(&lt;Condition Number&gt;)</FORMAT>
<FORMAT>M_TrkEnd = &lt;Equation&gt;</FORMAT>
<FORMAT>M_TrkEnd(&lt;Condition Number&gt;) = &lt;Equation&gt;</FORMAT>
<SAMPLE>M1 = M_TrkEnd</SAMPLE>
<SAMPLE>M1 = M_TrkEnd(1)</SAMPLE>
<SAMPLE>M_TrkEnd = -200</SAMPLE>
<SAMPLE>M_TrkEnd(1) = -200</SAMPLE>
<COMMENT>This state variable specifies coordinates on the ending side of a tracking possible area.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_TrkStop</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_TrkStop</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_TrkStop(&lt;Condition Number&gt;)</FORMAT>
<FORMAT>M_TrkStop = &lt;Equation&gt;</FORMAT>
<FORMAT>M_TrkStop(&lt;Condition Number&gt;) = &lt;Equation&gt;</FORMAT>
<SAMPLE>M1 = M_TrkStop</SAMPLE>
<SAMPLE>M1 = M_TrkStop(1)</SAMPLE>
<SAMPLE>M_TrkStop = -300</SAMPLE>
<SAMPLE>M_TrkStop(1) = -300</SAMPLE>
<COMMENT>This state variable specifies coordinates in which the tracking is canceled.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_TrkTime</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_TrkTime</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_TrkTime(&lt;Condition Number&gt;)</FORMAT>
<FORMAT>M_TrkTime = &lt;Equation&gt;</FORMAT>
<FORMAT>M_TrkTime(&lt;Condition Number&gt;) = &lt;Equation&gt;</FORMAT>
<SAMPLE>M1 = M_TrkTime</SAMPLE>
<SAMPLE>M1 = M_TrkTime(1)</SAMPLE>
<SAMPLE>M_TrkTime = +60</SAMPLE>
<SAMPLE>M_TrkTime(1) = +60</SAMPLE>
<COMMENT>This state variable specifies the time that can be waited until workpiece enters a tracking possible area.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_TrkChk</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_TrkChk</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_TrkChk(&lt;Condition Number&gt;)</FORMAT>
<SAMPLE>M1 = M_TrkChk</SAMPLE>
<SAMPLE>M1 = M_TrkChk(1)</SAMPLE>
<COMMENT>The execution result of the TrkChk command can be referred to.</COMMENT>
<COMMENT>0: There is no workpiece in the tracking buffer.</COMMENT>
<COMMENT>1: The workpiece has passed from the tracking area.</COMMENT>
<COMMENT>2: The workpiece after a while enters the tracking area.</COMMENT>
<COMMENT>3: The workpiece is in tracking area.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_TrkEnc</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_TrkEnc</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_TrkEnc(&lt;Condition Number&gt;)</FORMAT>
<SAMPLE>M1 = M_TrkEnc</SAMPLE>
<SAMPLE>M1 = M_TrkEnc(1)</SAMPLE>
<COMMENT>The workpiece encoder taken out of the tracking buffer can be referred to.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_TrkKind</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_TrkKind</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_TrkKind(&lt;Condition Number&gt;)</FORMAT>
<SAMPLE>M1 = M_TrkKind</SAMPLE>
<SAMPLE>M1 = M_TrkKind(1)</SAMPLE>
<COMMENT>The kind number taken out of the tracking buffer can be referred to.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_TrkEncNo</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_TrkEncNo</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_TrkEncNo(&lt;Condition Number&gt;)</FORMAT>
<SAMPLE>M1 = M_TrkEncNo</SAMPLE>
<SAMPLE>M1 = M_TrkEncNo(1)</SAMPLE>
<COMMENT>The encoder number taken out of the tracking buffer can be referred to.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_EncSensor</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_EncSensor(&lt;Condition Number&gt;)</FORMAT>
<FORMAT>M_EncSensor(&lt;Condition Number&gt;) = &lt;Equation&gt;</FORMAT>
<SAMPLE>M1 = M_EncSensor(1)</SAMPLE>
<SAMPLE>M_EncSensor(1) = +1234</SAMPLE>
<COMMENT>This state variable specifies encoder data at the position in which the sensor reacts to workpiece.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_EncStart</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_EncStart(&lt;Condition Number&gt;)</FORMAT>
<FORMAT>M_EncStart(&lt;Condition Number&gt;) = &lt;Equation&gt;</FORMAT>
<SAMPLE>M1 = M_EncStart(1)</SAMPLE>
<SAMPLE>M_EncStart(1) = +2345</SAMPLE>
<COMMENT>This state variable specifies encoder data at tracking area starting position.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_EncEnd</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_EncEnd(&lt;Condition Number&gt;)</FORMAT>
<FORMAT>M_EncEnd(&lt;Condition Number&gt;) = &lt;Equation&gt;</FORMAT>
<SAMPLE>M1 = M_EncEnd(1)</SAMPLE>
<SAMPLE>M_EncEnd(1) = +3456</SAMPLE>
<COMMENT>This state variable specifies encoder data at tracking area ending position.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_EncStop</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_EncStop(&lt;Condition Number&gt;)</FORMAT>
<FORMAT>M_EncStop(&lt;Condition Number&gt;) = &lt;Equation&gt;</FORMAT>
<SAMPLE>M1 = M_EncStop(1)</SAMPLE>
<SAMPLE>M_EncStop(1) = +4567</SAMPLE>
<COMMENT>This state variable specifies encoder data at tracking cancellation position.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_TrkArcEnc</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_TrkArcEnc(&lt;Condition Number&gt;)</FORMAT>
<SAMPLE>M1 = M_TrkArcEnc(1)</SAMPLE>
<COMMENT>Return the encoder value which accumulated after a sensor reacts to a workpiece.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_TrkType</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_TrkType(&lt;Condition Number&gt;)</FORMAT>
<FORMAT>M_TrkType(&lt;Condition Number&gt;) = &lt;Equation&gt;</FORMAT>
<SAMPLE>M1 = M_TrkType(1)</SAMPLE>
<SAMPLE>M_TrkType(1) = +1</SAMPLE>
<COMMENT>Return the type of the tracking function.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Uar</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_Uar</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_Uar(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>M1=M_Uar</SAMPLE>
<SAMPLE>M1=M_Uar(1)</SAMPLE>
<COMMENT>Returns whether the robot is in the user-defined area.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Uar32</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_Uar32</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_Uar32(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>Def Long ML1</SAMPLE>
<SAMPLE>ML1&amp;=M_Uar32</SAMPLE>
<SAMPLE>ML1&amp;=M_Uar32(1)</SAMPLE>
<COMMENT>Returns whether the robot is in the user-defined area.</COMMENT>
<COMMENT>Bits 0 through 31 correspond to areas 1 to 8 and each bit displays the following information.</COMMENT>
<COMMENT>1 : Within user-defined area</COMMENT>
<COMMENT>0 : Outside user-defined area</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_UDevW</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_UDevW(&lt;Start I/O number&gt;, &lt;Shared memory address&gt;)</FORMAT>
<FORMAT>M_UDevW(&lt;Start I/O number&gt;, &lt;Shared memory address&gt;)=&lt;Numeric Value&gt;</FORMAT>
<SAMPLE>M1%=&amp;H3E1</SAMPLE>
<SAMPLE>M_UDevW(M1%,11024)=&amp;H1</SAMPLE>
<SAMPLE>M2&amp;=M_UDevW(M1%,11024) And &amp;H7</SAMPLE>
<COMMENT>Writes the data(unit of word) in the shared memory.</COMMENT>
<COMMENT>Refers from the shared memory to the data(unit of word).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_UDevD</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_UDevD(&lt;Start I/O number&gt;, &lt;Shared memory address&gt;)</FORMAT>
<FORMAT>M_UDevD(&lt;Start I/O number&gt;, &lt;Shared memory address&gt;)=&lt;Numeric Value&gt;</FORMAT>
<SAMPLE>M1%=&amp;H3E1</SAMPLE>
<SAMPLE>M_UDevD(M1%,11024)=&amp;HF0F0F0F0</SAMPLE>
<SAMPLE>M2&amp;=M_UDevD(M1%,11024) And &amp;HFFFFF</SAMPLE>
<COMMENT>Writes the data(unit of double word) in the shared memory.</COMMENT>
<COMMENT>Refers from the shared memory to the data(unit of double word).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_V3Dat1</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_V3Dat1(&lt;Storage number&gt;,&lt;Data number&gt;)</FORMAT>
<SAMPLE>M1 = M_V3Dat1(1,1)</SAMPLE>
<COMMENT>Stores the data recognized by MELFA-3D Vision in numeric data format.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_V3Dat2</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_V3Dat2(&lt;Storage number&gt;,&lt;Data number&gt;)</FORMAT>
<SAMPLE>M1 = M_V3Dat2(1,1)</SAMPLE>
<COMMENT>Stores the data recognized by MELFA-3D Vision in numeric data format.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_V3Err</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_V3Err</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_V3Err(&lt;Storage number&gt;)</FORMAT>
<SAMPLE>M1 = M_V3Err</SAMPLE>
<SAMPLE>M1 = M_V3Err(1)</SAMPLE>
<COMMENT>Stores reply value from MELFA-3D Vision in numeric data format.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_V3Num</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_V3Num</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_V3Num(&lt;Storage number&gt;)</FORMAT>
<SAMPLE>M1 = M_V3Num</SAMPLE>
<SAMPLE>M1 = M_V3Num(1)</SAMPLE>
<COMMENT>Stores the number of pieces of work detected by MELFA-3D Vision.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_V3Rslt</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_V3Rslt</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_V3Rslt(&lt;Storage number&gt;)</FORMAT>
<SAMPLE>M1 = M_V3Rslt</SAMPLE>
<SAMPLE>M1 = M_V3Rslt(1)</SAMPLE>
<COMMENT>Stores the recognition result of writing of MELFA-3D Vision in numeric data format.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Wai</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_Wai(&lt;Slot number&gt;)</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_Wai(&lt;Slot number&gt;)</FORMAT>
<SAMPLE>M1=M_Wai</SAMPLE>
<SAMPLE>M1=M_Wai(1)</SAMPLE>
<COMMENT>Returns the standby status of the program for the specified task slot.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Wupov</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_Wupov</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_Wupov(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>M1=M_Wupov</SAMPLE>
<SAMPLE>M1=M_Wupov(1)</SAMPLE>
<COMMENT>Returns the value of an override (warm-up operation override, unit: %) to be applied to the command speed in order to reduce the operation speed when in the warm-up operation status.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Wuprt</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_Wuprt</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_Wuprt(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>M1=M_Wuprt</SAMPLE>
<SAMPLE>M1=M_Wuprt(1)</SAMPLE>
<COMMENT>Returns the time (sec) during which a target axis must operate to cancel the warm-up operation status.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_Wupst</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_Wupst</FORMAT>
<FORMAT>&lt;Numeric Variable&gt; = M_Wupst(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>M1=M_Wupst</SAMPLE>
<SAMPLE>M1=M_Wupst(1)</SAMPLE>
<COMMENT>Returns the time (sec) until the warm-up operation status is set again after it has been canceled.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_XDev</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_XDev(&lt;PC Input number&gt;)</FORMAT>
<SAMPLE>M1%=M_XDev(&amp;H100)</SAMPLE>
<COMMENT>Refers to the value(unit of bit) of the input signal of PC</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_XDevB</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_XDevB(&lt;PC Input number&gt;)</FORMAT>
<SAMPLE>M1%=M_XDevB(&amp;H100) And &amp;H7</SAMPLE>
<COMMENT>Refers to the value(unit of byte) of the input signal of PC</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_XDevW</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_XDevW(&lt;PC Input number&gt;)</FORMAT>
<SAMPLE>M1%=M_XDevW(&amp;H100) And &amp;H7FF</SAMPLE>
<COMMENT>Refers to the value(unit of word) of the input signal of PC</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_XDevD</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_XDevD(&lt;PC Input number&gt;)</FORMAT>
<SAMPLE>M11&amp;=M_XDevD(&amp;H100) And &amp;HFFFFF</SAMPLE>
<COMMENT>Refers to the value(unit of double word) of the input signal of PC</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_YDev</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_YDev(&lt;PC Input number&gt;)</FORMAT>
<FORMAT>M_YDev(&lt;PC Input number&gt;)=&lt;Numeric Value&gt;</FORMAT>
<SAMPLE>M1%=M_YDev(&amp;H100)</SAMPLE>
<SAMPLE>M_YDev(&amp;H100)=&amp;H1</SAMPLE>
<COMMENT>Refers to the value(unit of bit) of the input signal of PC</COMMENT>
<COMMENT>Writes the value(unit of bit) in the output signal of PC</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_YDevB</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_YDevB(&lt;PC Input number&gt;)</FORMAT>
<FORMAT>M_YDevB(&lt;PC Input number&gt;)=&lt;Numeric Value&gt;</FORMAT>
<SAMPLE>M1%=M_YDevB(&amp;H100)</SAMPLE>
<SAMPLE>M_YDevB(&amp;H100)=&amp;H1F</SAMPLE>
<COMMENT>Refers to the value(unit of byte) of the input signal of PC</COMMENT>
<COMMENT>Writes the value(unit of byte) in the output signal of PC</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_YDevW</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_YDevW(&lt;PC Input number&gt;)</FORMAT>
<FORMAT>M_YDevW(&lt;PC Input number&gt;)=&lt;Numeric Value&gt;</FORMAT>
<SAMPLE>M1%=M_YDevW(&amp;H100)</SAMPLE>
<SAMPLE>M_YDevW(&amp;H100)=&amp;H1234</SAMPLE>
<COMMENT>Refers to the value(unit of word) of the input signal of PC</COMMENT>
<COMMENT>Writes the value(unit of word) in the output signal of PC</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_YDevD</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = M_YDevD(&lt;PC Input number&gt;)</FORMAT>
<FORMAT>M_YDevD(&lt;PC Input number&gt;)=&lt;Numeric Value&gt;</FORMAT>
<SAMPLE>M1%=M_YDevD(&amp;H100)</SAMPLE>
<SAMPLE>M_YDevD(&amp;H100)=&amp;H12345678</SAMPLE>
<COMMENT>Refers to the value(unit of double word) of the input signal of PC</COMMENT>
<COMMENT>Writes the value(unit of double word) in the output signal of PC</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_Base</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = P_Base</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_Base(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>P1=P_Base</SAMPLE>
<SAMPLE>P1=P_Base(1)</SAMPLE>
<COMMENT>Returns information related to the base conversion data.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_NBase</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = P_NBase</FORMAT>
<SAMPLE>BASE P_NBase</SAMPLE>
<COMMENT>Returns information related to the base conversion data.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_CavDir</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = P_CavDir</FORMAT>
<SAMPLE>PESC=P_CavDir*(-2)</SAMPLE>
<SAMPLE>PESC=P_CavDir(1)*(-2)</SAMPLE>
<COMMENT>Return the operation direction of the robot when a collision avoidance.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_ColDir</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = P_ColDir</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_ColDir(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>PESC=P_ColDir*(-2)</SAMPLE>
<SAMPLE>PESC=P_ColDir(1)*(-2)</SAMPLE>
<COMMENT>Return the operation direction of the robot when an impact is detected.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_CordR</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = P_CordR</FORMAT>
<SAMPLE>P100=P_CordR</SAMPLE>
<COMMENT>Returns the robot position (X, Y, Z, A, B, C) from common base.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_Curr</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = P_Curr</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_Curr(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>P100=P_Curr</SAMPLE>
<SAMPLE>P100=P_Curr(1)</SAMPLE>
<COMMENT>Returns the current position (X, Y, Z, A, B, C,L1,L2) (FL1, FL2).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_CurrR</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = P_CurrR</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_CurrR(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>P100=P_CurrR</SAMPLE>
<SAMPLE>P100=P_CurrR(1)</SAMPLE>
<COMMENT>Returns the current position (X, Y, Z, A, B, C,L1,L2) (FL1, FL2) from common base.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_CvSpd</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = P_CvSpd</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_CvSpd(&lt;Encoder Number&gt;)</FORMAT>
<SAMPLE>M1 = P_CvSpd.Y</SAMPLE>
<SAMPLE>M1 = P_CvSpd(1).Y</SAMPLE>
<COMMENT>Return the speed of the conveyor of the specified encoder number.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_EncDlt</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = P_EncDlt</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_EncDlt(&lt;Encoder Number&gt;)</FORMAT>
<SAMPLE>M1=P_EncDlt.Y * MENCSUB</SAMPLE>
<SAMPLE>M1=P_EncDlt(1).Y * MENCSUB</SAMPLE>
<COMMENT>Set the amount of the movement of the robot&apos;s hand per an encoder pulse.</COMMENT>
<COMMENT>Return the amount of the movement of the robot&apos;s hand per an encoder pulse.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_ECord</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = P_ECord</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_ECord(&lt;Mecha Number&gt;)</FORMAT>
<SAMPLE>P1 = P_ECord</SAMPLE>
<SAMPLE>P2 = P_ECord(2)</SAMPLE>
<COMMENT>Returns the Ex-T coordinate during the Ex-T control and the Ex-T spline interpolation.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_Fbc</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = P_Fbc</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_Fbc(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>P1=P_Fbc</SAMPLE>
<SAMPLE>P1=P_Fbc(1)</SAMPLE>
<COMMENT>Returns the current position (X, Y, Z, A, B, C, L1, L2)(FL1, FL2) based on the feedback values from the servo.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_FsCurD</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = P_FsCurD</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_FsCurD(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>P100=P_FsCurD</SAMPLE>
<SAMPLE>P100=P_FsCurD(1)</SAMPLE>
<COMMENT>Refer to present force sensor data.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_FsCurP</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = P_FsCurP</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_FsCurP(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>P100=P_FsCurP</SAMPLE>
<SAMPLE>P100=P_FsCurP(1)</SAMPLE>
<COMMENT>Refer to the positional instruction corrected by the force control.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_FsDmp0</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>P_FsDmp0 = &lt;Position Variables&gt;</FORMAT>
<FORMAT>P_FsDmp0(&lt;Mechanism Number&gt;) = &lt;Position Variables&gt;</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_FsDmp0</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_FsDmp0(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>P_FsDmp0=P10</SAMPLE>
<SAMPLE>P_FsDmp0(1)=(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)(0, 0)</SAMPLE>
<SAMPLE>P100=P_FsDmp0</SAMPLE>
<SAMPLE>P100=P_FsDmp0(1)</SAMPLE>
<COMMENT>The damping coefficient of the each axis is specified.</COMMENT>
<COMMENT>Refer to the damping coefficient of the each axis.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_FsDmp1</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>P_FsDmp1 = &lt;Position Variables&gt;</FORMAT>
<FORMAT>P_FsDmp1(&lt;Mechanism Number&gt;) = &lt;Position Variables&gt;</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_FsDmp1</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_FsDmp1(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>P_FsDmp1=P10</SAMPLE>
<SAMPLE>P_FsDmp1(1)=(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)(0, 0)</SAMPLE>
<SAMPLE>P100=P_FsDmp1</SAMPLE>
<SAMPLE>P100=P_FsDmp1(1)</SAMPLE>
<COMMENT>The damping coefficient of the each axis is specified.</COMMENT>
<COMMENT>Refer to the damping coefficient of the each axis.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_FsFCd0</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>P_FsFCd0 = &lt;Position Variables&gt;</FORMAT>
<FORMAT>P_FsFCd0(&lt;Mechanism Number&gt;) = &lt;Position Variables&gt;</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_FsFCd0</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_FsFCd0(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>P_FsFCd0=P10</SAMPLE>
<SAMPLE>P_FsFCd0(1)=(0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0)(0, 0)</SAMPLE>
<SAMPLE>P100=P_FsFCd0</SAMPLE>
<SAMPLE>P100=P_FsFCd0(1)</SAMPLE>
<COMMENT>Refer to the force command value of the force control.</COMMENT>
<COMMENT>The limit value of the stiffness control with limit is specified.</COMMENT>
<COMMENT>Refer to the limit value of the stiffness control with limit.</COMMENT>
<COMMENT></COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_FsFCd1</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>P_FsFCd1 = &lt;Position Variables&gt;</FORMAT>
<FORMAT>P_FsFCd1(&lt;Mechanism Number&gt;) = &lt;Position Variables&gt;</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_FsFCd1</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_FsFCd1(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>P_FsFCd1=P10</SAMPLE>
<SAMPLE>P_FsFCd1(1)=(0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0)(0, 0)</SAMPLE>
<SAMPLE>P100=P_FsFCd1</SAMPLE>
<SAMPLE>P100=P_FsFCd1(1)</SAMPLE>
<COMMENT>The force command value of the force control is specified.</COMMENT>
<COMMENT>Refer to the force command value of the force control.</COMMENT>
<COMMENT>The limit value of the stiffness control with limit is specified.</COMMENT>
<COMMENT>Refer to the limit value of the stiffness control with limit.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_FsFLm0</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>P_FsFLm0 = &lt;Position Variables&gt;</FORMAT>
<FORMAT>P_FsFLm0(&lt;Mechanism Number&gt;) = &lt;Position Variables&gt;</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_FsFLm0</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_FsFLm0(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>P_FsFLm0=P10</SAMPLE>
<SAMPLE>P_FsFLm0(1)=(10.0, 10.0, 10.0, 3.0, 3.0, 3.0, 0.0, 0.0)(0, 0)</SAMPLE>
<SAMPLE>P100=P_FsFLm0</SAMPLE>
<SAMPLE>P100=P_FsFLm0(1)</SAMPLE>
<COMMENT>The force setting value of the force sensor is specified.</COMMENT>
<COMMENT>Refer to the force setting value of the force sensor.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_FsFLm1</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>P_FsFLm1 = &lt;Position Variables&gt;</FORMAT>
<FORMAT>P_FsFLm1(&lt;Mechanism Number&gt;) = &lt;Position Variables&gt;</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_FsFLm1</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_FsFLm1(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>P_FsFLm1=P10</SAMPLE>
<SAMPLE>P_FsFLm1(1)=(10.0, 10.0, 10.0, 3.0, 3.0, 3.0, 0.0, 0.0)(0, 0)</SAMPLE>
<SAMPLE>P100=P_FsFLm1</SAMPLE>
<SAMPLE>P100=P_FsFLm1(1)</SAMPLE>
<COMMENT>The force setting value of the force sensor is specified.</COMMENT>
<COMMENT>Refer to the force setting value of the force sensor.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_FsMod0</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>P_FsMod0 = &lt;Position Variables&gt;</FORMAT>
<FORMAT>P_FsMod0(&lt;Mechanism Number&gt;) = &lt;Position Variables&gt;</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_FsMod0</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_FsMod0(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>P_FsMod0=P10</SAMPLE>
<SAMPLE>P_FsMod0(1)=(0, 0, 2, 0, 0, 0, 0, 0)(0, 0)</SAMPLE>
<SAMPLE>P100=P_FsMod0</SAMPLE>
<SAMPLE>P100=P_FsMod0(1)</SAMPLE>
<COMMENT>The force control mode of the each axis is specified.</COMMENT>
<COMMENT>Refer to the force control mode of the each axis.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_FsMod1</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>P_FsMod1 = &lt;Position Variables&gt;</FORMAT>
<FORMAT>P_FsMod1(&lt;Mechanism Number&gt;) = &lt;Position Variables&gt;</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_FsMod1</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_FsMod1(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>P_FsMod1=P10</SAMPLE>
<SAMPLE>P_FsMod1(1)=(0, 0, 2, 0, 0, 0, 0, 0)(0, 0)</SAMPLE>
<SAMPLE>P100=P_FsMod1</SAMPLE>
<SAMPLE>P100=P_FsMod1(1)</SAMPLE>
<COMMENT>The force control mode of the each axis is specified.</COMMENT>
<COMMENT>Refer to the force control mode of the each axis.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_FsGn0</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>P_FsGn0 = &lt;Position Variables&gt;</FORMAT>
<FORMAT>P_FsGn0(&lt;Mechanism Number&gt;) = &lt;Position Variables&gt;</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_FsGn0</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_FsGn0(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>P_FsGn0=P10</SAMPLE>
<SAMPLE>P_FsGn0(1)=(10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 0.0, 0.0)(0, 0)</SAMPLE>
<SAMPLE>P100=P_FsGn0</SAMPLE>
<SAMPLE>P100=P_FsGn0(1)</SAMPLE>
<COMMENT>The force control gain of the each axis is specified.</COMMENT>
<COMMENT>Refer to the force control gain of the each axis.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_FsGn1</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>P_FsGn1 = &lt;Position Variables&gt;</FORMAT>
<FORMAT>P_FsGn1(&lt;Mechanism Number&gt;) = &lt;Position Variables&gt;</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_FsGn1</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_FsGn1(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>P_FsGn1=P10</SAMPLE>
<SAMPLE>P_FsGn1(1)=(10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 0.0, 0.0)(0, 0)</SAMPLE>
<SAMPLE>P100=P_FsGn1</SAMPLE>
<SAMPLE>P100=P_FsGn1(1)</SAMPLE>
<COMMENT>The force control gain of the each axis is specified.</COMMENT>
<COMMENT>Refer to the force control gain of the each axis.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_FsLmtD</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = P_FsLmtD</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_FsLmtD(&lt;Mechanism Number&gt;)</FORMAT>
<FORMAT>P_FsLmtD = &lt;Position Variables&gt;</FORMAT>
<FORMAT>P_FsLmtD(&lt;Mechanism Number&gt;) = &lt;Position Variables&gt;</FORMAT>
<SAMPLE>P100=P_FsLmtD</SAMPLE>
<SAMPLE>P100=P_FsLmtD(1)</SAMPLE>
<SAMPLE>P_FsLmtD=P10</SAMPLE>
<SAMPLE>P_FsLmtD(1)=P10</SAMPLE>
<COMMENT>Refer to the force sensor data when the force setting value is exceeded.</COMMENT>
<COMMENT>The force sensor data that exceeds the force setting value is reset. P_FsLmtP and P_FsLmtX are reset at the same time.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_FsLmtP</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = P_FsLmtP</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_FsLmtP(&lt;Mechanism Number&gt;)</FORMAT>
<FORMAT>P_FsLmtP = &lt;Position Variables&gt;</FORMAT>
<FORMAT>P_FsLmtP(&lt;Mechanism Number&gt;) = &lt;Position Variables&gt;</FORMAT>
<SAMPLE>P100=P_FsLmtP</SAMPLE>
<SAMPLE>P100=P_FsLmtP(1)</SAMPLE>
<SAMPLE>P_FsLmtP=P10</SAMPLE>
<SAMPLE>P_FsLmtP(1)=P10</SAMPLE>
<COMMENT>Refer to the feedback position when the force setting value is exceeded.</COMMENT>
<COMMENT>The feedback position that exceeds the force setting value is reset. P_FsLmtD and P_FsLmtX are reset at the same time.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_FsLmtR</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = P_FsLmtR</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_FsLmtR(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>P100=P_FsLmtR</SAMPLE>
<SAMPLE>P100=P_FsLmtR(1)</SAMPLE>
<COMMENT>Refer to the state of the force sensor data to the force setting value.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_FsLmtX</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = P_FsLmtX</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_FsLmtX(&lt;Mechanism Number&gt;)</FORMAT>
<FORMAT>P_FsLmtX = &lt;Position Variables&gt;</FORMAT>
<FORMAT>P_FsLmtX(&lt;Mechanism Number&gt;) = &lt;Position Variables&gt;</FORMAT>
<SAMPLE>P100=P_FsLmtX</SAMPLE>
<SAMPLE>P100=P_FsLmtX(1)</SAMPLE>
<SAMPLE>P_FsLmtX=P10</SAMPLE>
<SAMPLE>P_FsLmtX(1)=P10</SAMPLE>
<COMMENT>Refer to the axis that exceeds the force setting value.</COMMENT>
<COMMENT>The axis that exceeds the force setting value is reset. P_FsLmtP and P_FsLmtD are reset at the same time.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_FsMaxD</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = P_FsMaxD</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_FsMaxD(&lt;Mechanism Number&gt;)</FORMAT>
<FORMAT>P_FsMaxD = &lt;Position Variables&gt;</FORMAT>
<FORMAT>P_FsMaxD(&lt;Mechanism Number&gt;) = &lt;Position Variables&gt;</FORMAT>
<SAMPLE>P100=P_FsMaxD</SAMPLE>
<SAMPLE>P100=P_FsMaxD(1)</SAMPLE>
<SAMPLE>P_FsMaxD=P10</SAMPLE>
<SAMPLE>P_FsMaxD(1)=P10</SAMPLE>
<COMMENT>Refer to the maximun value of the force sensor data.</COMMENT>
<COMMENT>The maximun value of the force sensor data is reset.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_FsSpd0</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>P_FsSpd0 = &lt;Position Variables&gt;</FORMAT>
<FORMAT>P_FsSpd0(&lt;Mechanism Number&gt;) = &lt;Position Variables&gt;</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_FsSpd0</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_FsSpd0(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>P_FsSpd0=P10</SAMPLE>
<SAMPLE>P_FsSpd0(1)=(0.0, 0.0, 5.0, 0.0, 0.0, 0.0, 0.0, 0.0)(0, 0)</SAMPLE>
<SAMPLE>P100=P_FsSpd0</SAMPLE>
<SAMPLE>P100=P_FsSpd0(1)</SAMPLE>
<COMMENT>The speed command value of the velocity prioritized mode is specified.</COMMENT>
<COMMENT>Refer to the speed command value of the velocity prioritized mode.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_FsSpd1</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>P_FsSpd1 = &lt;Position Variables&gt;</FORMAT>
<FORMAT>P_FsSpd1(&lt;Mechanism Number&gt;) = &lt;Position Variables&gt;</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_FsSpd1</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_FsSpd1(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>P_FsSpd1=P10</SAMPLE>
<SAMPLE>P_FsSpd1(1)=(0.0, 0.0, 5.0, 0.0, 0.0, 0.0, 0.0, 0.0)(0, 0)</SAMPLE>
<SAMPLE>P100=P_FsSpd1</SAMPLE>
<SAMPLE>P100=P_FsSpd1(1)</SAMPLE>
<COMMENT>The speed command value of the velocity prioritized mode is specified.</COMMENT>
<COMMENT>Refer to the speed command value of the velocity prioritized mode.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_FsStf0</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>P_FsStf0 = &lt;Position Variables&gt;</FORMAT>
<FORMAT>P_FsStf0(&lt;Mechanism Number&gt;) = &lt;Position Variables&gt;</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_FsStf0</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_FsStf0(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>P_FsStf0=P10</SAMPLE>
<SAMPLE>P_FsStf0(1)=(0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.0, 0.0)(0, 0)</SAMPLE>
<SAMPLE>P100=P_FsStf0</SAMPLE>
<SAMPLE>P100=P_FsStf0(1)</SAMPLE>
<COMMENT>The stiffness coefficient of the each axis is specified.</COMMENT>
<COMMENT>Refer to the stiffness coefficient of the each axis.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_FsStf1</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>P_FsStf1 = &lt;Position Variables&gt;</FORMAT>
<FORMAT>P_FsStf1(&lt;Mechanism Number&gt;) = &lt;Position Variables&gt;</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_FsStf1</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_FsStf1(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>P_FsStf1=P10</SAMPLE>
<SAMPLE>P_FsStf1(1)=(0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.0, 0.0)(0, 0)</SAMPLE>
<SAMPLE>P100=P_FsStf1</SAMPLE>
<SAMPLE>P100=P_FsStf1(1)</SAMPLE>
<COMMENT>The stiffness coefficient of the each axis is specified.</COMMENT>
<COMMENT>Refer to the stiffness coefficient of the each axis.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_FsSwF0</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>P_FsSwF0 = &lt;Position Variables&gt;</FORMAT>
<FORMAT>P_FsSwF0(&lt;Mechanism Number&gt;) = &lt;Position Variables&gt;</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_FsSwF0</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_FsSwF0(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>P_FsSwF0=P10</SAMPLE>
<SAMPLE>P_FsSwF0(1)=(0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0)(0, 0)</SAMPLE>
<SAMPLE>P100=P_FsSwF0</SAMPLE>
<SAMPLE>P100=P_FsSwF0(1)</SAMPLE>
<COMMENT>The judgment value of mode switching for the force-velocity prioritized mode is specified.</COMMENT>
<COMMENT>Refer to the judgment value of mode switching for the force-velocity prioritized mode.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_FsSwF1</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>P_FsSwF1 = &lt;Position Variables&gt;</FORMAT>
<FORMAT>P_FsSwF1(&lt;Mechanism Number&gt;) = &lt;Position Variables&gt;</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_FsSwF1</FORMAT>
<FORMAT>&lt;Position Variables&gt; = P_FsSwF1(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>P_FsSwF1=P10</SAMPLE>
<SAMPLE>P_FsSwF1(1)=(0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0)(0, 0)</SAMPLE>
<SAMPLE>P100=P_FsSwF1</SAMPLE>
<SAMPLE>P100=P_FsSwF1(1)</SAMPLE>
<COMMENT>The judgment value of mode switching for the force-velocity prioritized mode is specified.</COMMENT>
<COMMENT>Refer to the judgment value of mode switching for the force-velocity prioritized mode.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_FsBias0</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>P_FsBias0 = &lt;Pos variable&gt;</FORMAT>
<FORMAT>P_FsBias0(&lt;Mecha number&gt;) = &lt;Pos variable&gt;</FORMAT>
<FORMAT>&lt;Pos variable&gt; = P_FsBias0</FORMAT>
<FORMAT>&lt;Pos variable&gt; = P_FsBias0(&lt;Mecha number&gt;)</FORMAT>
<SAMPLE>P_FsBias0 = P10</SAMPLE>
<SAMPLE>P_FsBias0(1) = (10.0, 5.0, 30.0, 0.4, 0.1, 0.9) (0, 0)</SAMPLE>
<SAMPLE>P100 = P_FsBias0</SAMPLE>
<SAMPLE>P100 = P_FsBias0(1)</SAMPLE>
<COMMENT>The bias value of the hand load estimation for gravity offset cancel is specified.</COMMENT>
<COMMENT>Refer to the bias value of the hand load estimation for gravity offset cancel.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_FsBias1</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>P_FsBias1 = &lt;Pos variable&gt;</FORMAT>
<FORMAT>P_FsBias1(&lt;Mecha number&gt;) = &lt;Pos variable&gt;</FORMAT>
<FORMAT>&lt;Pos variable&gt; = P_FsBias1</FORMAT>
<FORMAT>&lt;Pos variable&gt; = P_FsBias1(&lt;Mecha number&gt;)</FORMAT>
<SAMPLE>P_FsBias1 = P10</SAMPLE>
<SAMPLE>P_FsBias1(1) = (10.0, 5.0, 30.0, 0.4, 0.1, 0.9) (0, 0)</SAMPLE>
<SAMPLE>P100 = P_FsBias1</SAMPLE>
<SAMPLE>P100 = P_FsBias1(1)</SAMPLE>
<COMMENT>The bias value of the hand load estimation for gravity offset cancel is specified.</COMMENT>
<COMMENT>Refer to the bias value of the hand load estimation for gravity offset cancel.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_FsGrPos0</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>P_FsGrPos0 = &lt;Pos variable&gt;</FORMAT>
<FORMAT>P_FsGrPos0(&lt;Mecha number&gt;) = &lt;Pos variable&gt;</FORMAT>
<FORMAT>&lt;Pos variable&gt; = P_FsGrPos0</FORMAT>
<FORMAT>&lt;Pos variable&gt; = P_FsGrPos0(&lt;Mecha number&gt;)</FORMAT>
<SAMPLE>P_FsGrPos0 = P10</SAMPLE>
<SAMPLE>P_FsGrPos0(1) = (0.0, 0.0, 0.5, 0.0, 0.0, 0.0) (0, 0)</SAMPLE>
<SAMPLE>P100 = P_FsGrPos0</SAMPLE>
<SAMPLE>P100 = P_FsGrPos0(1)</SAMPLE>
<COMMENT>The center of gravity of the hand load estimation for gravity offset cancel is specified.</COMMENT>
<COMMENT>Refer to the center of gravity of the hand load estimation for gravity offset cancel.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_FsGrPos1</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>P_FsGrPos1 = &lt;Pos variable&gt;</FORMAT>
<FORMAT>P_FsGrPos1(&lt;Mecha number&gt;) = &lt;Pos variable&gt;</FORMAT>
<FORMAT>&lt;Pos variable&gt; = P_FsGrPos1</FORMAT>
<FORMAT>&lt;Pos variable&gt; = P_FsGrPos1(&lt;Mecha number&gt;)</FORMAT>
<SAMPLE>P_FsGrPos1 = P10</SAMPLE>
<SAMPLE>P_FsGrPos1(1) = (0.0, 0.0, 0.5, 0.0, 0.0, 0.0) (0, 0)</SAMPLE>
<SAMPLE>P100 = P_FsGrPos1</SAMPLE>
<SAMPLE>P100 = P_FsGrPos1(1)</SAMPLE>
<COMMENT>The center of gravity of the hand load estimation for gravity offset cancel is specified.</COMMENT>
<COMMENT>Refer to the center of gravity of the hand load estimation for gravity offset cancel.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_Gps1</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = P_Gps1(&lt;Position number&gt;)</FORMAT>
<SAMPLE>Def Gps 1, 851, ON, 1</SAMPLE>
<SAMPLE>Mov PM1</SAMPLE>
<SAMPLE>GpsChk On,1</SAMPLE>
<SAMPLE>Mov PM2</SAMPLE>
<SAMPLE>GpsChk Off,1</SAMPLE>
<SAMPLE>P1 = P_Gps1(1)</SAMPLE>
<COMMENT>Refer to the position that reacted to the sensor in the GPS function.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_Gps2</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = P_Gps2(&lt;Position number&gt;)</FORMAT>
<SAMPLE>Def Gps 2, 851, ON, 1</SAMPLE>
<SAMPLE>Mov PM1</SAMPLE>
<SAMPLE>GpsChk On,2</SAMPLE>
<SAMPLE>Mov PM2</SAMPLE>
<SAMPLE>GpsChk Off,2</SAMPLE>
<SAMPLE>P1 = P_Gps2(1)</SAMPLE>
<COMMENT>Refer to the position that reacted to the sensor in the GPS function.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_Gps3</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = P_Gps3(&lt;Position number&gt;)</FORMAT>
<SAMPLE>Def Gps 3, 851, ON, 1</SAMPLE>
<SAMPLE>Mov PM1</SAMPLE>
<SAMPLE>GpsChk On,3</SAMPLE>
<SAMPLE>Mov PM2</SAMPLE>
<SAMPLE>GpsChk Off,3</SAMPLE>
<SAMPLE>P1 = P_Gps3(1)</SAMPLE>
<COMMENT>Refer to the position that reacted to the sensor in the GPS function.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_Gps4</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = P_Gps4(&lt;Position number&gt;)</FORMAT>
<SAMPLE>Def Gps 4, 851, ON, 1</SAMPLE>
<SAMPLE>Mov PM1</SAMPLE>
<SAMPLE>GpsChk On,4</SAMPLE>
<SAMPLE>Mov PM2</SAMPLE>
<SAMPLE>GpsChk Off,4</SAMPLE>
<SAMPLE>P1 = P_Gps4(1)</SAMPLE>
<COMMENT>Refer to the position that reacted to the sensor in the GPS function.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_Gps5</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = P_Gps5(&lt;Position number&gt;)</FORMAT>
<SAMPLE>Def Gps 5, 851, ON, 1</SAMPLE>
<SAMPLE>Mov PM1</SAMPLE>
<SAMPLE>GpsChk On,5</SAMPLE>
<SAMPLE>Mov PM2</SAMPLE>
<SAMPLE>GpsChk Off,5</SAMPLE>
<SAMPLE>P1 = P_Gps5(1)</SAMPLE>
<COMMENT>Refer to the position that reacted to the sensor in the GPS function.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_Gps6</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = P_Gps6(&lt;Position number&gt;)</FORMAT>
<SAMPLE>Def Gps 6, 851, ON, 1</SAMPLE>
<SAMPLE>Mov PM1</SAMPLE>
<SAMPLE>GpsChk On,6</SAMPLE>
<SAMPLE>Mov PM2</SAMPLE>
<SAMPLE>GpsChk Off,6</SAMPLE>
<SAMPLE>P1 = P_Gps6(1)</SAMPLE>
<COMMENT>Refer to the position that reacted to the sensor in the GPS function.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_Gps7</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = P_Gps7(&lt;Position number&gt;)</FORMAT>
<SAMPLE>Def Gps 7, 851, ON, 1</SAMPLE>
<SAMPLE>Mov PM1</SAMPLE>
<SAMPLE>GpsChk On,7</SAMPLE>
<SAMPLE>Mov PM2</SAMPLE>
<SAMPLE>GpsChk Off,7</SAMPLE>
<SAMPLE>P1 = P_Gps7(1)</SAMPLE>
<COMMENT>Refer to the position that reacted to the sensor in the GPS function.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_Gps8</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = P_Gps8(&lt;Position number&gt;)</FORMAT>
<SAMPLE>Def Gps 8, 851, ON, 1</SAMPLE>
<SAMPLE>Mov PM1</SAMPLE>
<SAMPLE>GpsChk On,8</SAMPLE>
<SAMPLE>Mov PM2</SAMPLE>
<SAMPLE>GpsChk Off,8</SAMPLE>
<SAMPLE>P1 = P_Gps8(1)</SAMPLE>
<COMMENT>Refer to the position that reacted to the sensor in the GPS function.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_NvS1</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = P_NvS1(&lt;Line number&gt;)</FORMAT>
<SAMPLE>P1 = P_NvS1(1)</SAMPLE>
<COMMENT>Stores the data recognized by the vision sensor in position data format.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_NvS2</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = P_NvS2(&lt;Line number&gt;)</FORMAT>
<SAMPLE>P1 = P_NvS2(1)</SAMPLE>
<COMMENT>Stores the data recognized by the vision sensor in position data format.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_NvS3</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = P_NvS3(&lt;Line number&gt;)</FORMAT>
<SAMPLE>P1 = P_NvS3(1)</SAMPLE>
<COMMENT>Stores the data recognized by the vision sensor in position data format.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_NvS4</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = P_NvS4(&lt;Line number&gt;)</FORMAT>
<SAMPLE>P1 = P_NvS4(1)</SAMPLE>
<COMMENT>Stores the data recognized by the vision sensor in position data format.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_NvS5</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = P_NvS5(&lt;Line number&gt;)</FORMAT>
<SAMPLE>P1 = P_NvS5(1)</SAMPLE>
<COMMENT>Stores the data recognized by the vision sensor in position data format.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_NvS6</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = P_NvS6(&lt;Line number&gt;)</FORMAT>
<SAMPLE>P1 = P_NvS6(1)</SAMPLE>
<COMMENT>Stores the data recognized by the vision sensor in position data format.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_NvS7</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = P_NvS7(&lt;Line number&gt;)</FORMAT>
<SAMPLE>P1 = P_NvS7(1)</SAMPLE>
<COMMENT>Stores the data recognized by the vision sensor in position data format.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_NvS8</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = P_NvS8(&lt;Line number&gt;)</FORMAT>
<SAMPLE>P1 = P_NvS8(1)</SAMPLE>
<COMMENT>Stores the data recognized by the vision sensor in position data format.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_Safe</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>Position Variables&gt;= P_Safe</FORMAT>
<FORMAT>Position Variables&gt;= P_Safe(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>P1=P_Safe</SAMPLE>
<SAMPLE>P1=P_Safe(1)</SAMPLE>
<COMMENT>Returns the safe point (XYZ position of the JSAFE parameter).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_Tool</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variables&gt;=P_Tool</FORMAT>
<FORMAT>&lt;Position Variables&gt;=P_Tool(&lt;Mechanism Number&gt;)</FORMAT>
<SAMPLE>P1=P_Tool</SAMPLE>
<SAMPLE>P1=P_Tool(1)</SAMPLE>
<COMMENT>Returns the tool conversion data that is currently being set.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_NTool</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variables&gt;=P_NTool</FORMAT>
<SAMPLE>P2=P_NTool</SAMPLE>
<COMMENT>Returns the initial value (0,0,0,0,0,0,0,0)(0,0).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_TrkBase</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variable&gt; = P_TrkBase</FORMAT>
<FORMAT>&lt;Position Variable&gt; = P_TrkBase(&lt;Condition Number&gt;)</FORMAT>
<FORMAT>P_TrkBase = &lt;Position Variable&gt;</FORMAT>
<FORMAT>P_TrkBase(&lt;Condition Number&gt;) = &lt;Position Variable&gt;</FORMAT>
<SAMPLE>P1 = P_TrkBase</SAMPLE>
<SAMPLE>P1 = P_TrkBase(1)</SAMPLE>
<SAMPLE>P_TrkBase = P1</SAMPLE>
<SAMPLE>P_TrkBase(1) = P1</SAMPLE>
<COMMENT>Specify the starting point of the workpiece when the tracking operates in the coordinate system.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_TrkWork</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variable&gt; = P_TrkWork</FORMAT>
<FORMAT>&lt;Position Variable&gt; = P_TrkWork(&lt;Condition Number&gt;)</FORMAT>
<SAMPLE>P1 = P_TrkWork</SAMPLE>
<SAMPLE>P1 = P_TrkWork(1)</SAMPLE>
<COMMENT>The workpiece position taken out of the tracking buffer can be referred to.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_TrkTarget</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variable&gt; = P_TrkTarget</FORMAT>
<SAMPLE>P1=P_TrkTarget</SAMPLE>
<COMMENT>The position of present workpiece can be referred to.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_TrkPAcl</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variable&gt; = P_TrkPAcl</FORMAT>
<FORMAT>&lt;Position Variable&gt; = P_TrkPAcl(&lt;Condition Number&gt;)</FORMAT>
<FORMAT>P_TrkPAcl = &lt;Position Variable&gt;</FORMAT>
<FORMAT>P_TrkPAcl(&lt;Condition Number&gt;) = &lt;Position Variable&gt;</FORMAT>
<SAMPLE>P1=P_TrkPAcl</SAMPLE>
<SAMPLE>P1=P_TrkPAcl(1)</SAMPLE>
<SAMPLE>P_TrkPAcl=(+0.2,+0.2,+0.2,+1.0,+1.0,+1.0,+1.0,+1.0)</SAMPLE>
<SAMPLE>P_TrkPAcl(1)=(+0.2,+0.2,+0.2,+1.0,+1.0,+1.0,+1.0,+1.0)</SAMPLE>
<COMMENT>Change the coefficient to the acceleration of the conveyor.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_TrkPDcl</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variable&gt; = P_TrkPDcl</FORMAT>
<FORMAT>&lt;Position Variable&gt; = P_TrkPDcl(&lt;Condition Number&gt;)</FORMAT>
<FORMAT>P_TrkPDcl = &lt;Position Variable&gt;</FORMAT>
<FORMAT>P_TrkPDcl(&lt;Condition Number&gt;) = &lt;Position Variable&gt;</FORMAT>
<SAMPLE>P1=P_TrkPDcl</SAMPLE>
<SAMPLE>P1=P_TrkPDcl(1)</SAMPLE>
<SAMPLE>P_TrkPDcl=(+0.2,+0.2,+0.2,+1.0,+1.0,+1.0,+1.0,+1.0)</SAMPLE>
<SAMPLE>P_TrkPDcl(1)=(+0.2,+0.2,+0.2,+1.0,+1.0,+1.0,+1.0,+1.0)</SAMPLE>
<COMMENT>Change the coefficient to the deceleration of the conveyor.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_TrkSensor</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variable&gt; = P_TrkSensor(&lt;Condition Number&gt;)</FORMAT>
<SAMPLE>P1 = P_TrkSensor(1)</SAMPLE>
<COMMENT>Return the location of the workpiece when a sensor reacted.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_UDev</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variable&gt; = P_UDev(&lt;Start I/O number&gt;, &lt;Shared memory address&gt;)</FORMAT>
<FORMAT>P_UDev(&lt;Start I/O number&gt;, &lt;Shared memory address&gt;)=&lt;Position Value&gt;</FORMAT>
<SAMPLE>M1%=&amp;H3E1</SAMPLE>
<SAMPLE>P_UDev(M1%,11024)=P1</SAMPLE>
<SAMPLE>P2=P_UDev(M1%,11024)</SAMPLE>
<COMMENT>Writes the position data in the shared memory.</COMMENT>
<COMMENT>Refers from the shared memory to the position data.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_V3Pos</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = P_V3Pos(&lt;Storage number&gt;,&lt;Data number&gt;)</FORMAT>
<SAMPLE>P1 = P_V3Pos(1,1)</SAMPLE>
<COMMENT>the positional data that MELFA-3D Vision recognized by a positional format. </COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_Zero</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = P_Zero</FORMAT>
<SAMPLE>P1=P_Zero</SAMPLE>
<COMMENT>Always returns (0, 0, 0, 0, 0, 0, 0, 0)(0,0).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>P_WkCord</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = P_WkCord(&lt;Work Coordinate Number&gt;)</FORMAT>
<FORMAT>P_WkCord(&lt;Work Coordinate Number&gt;) = &lt;Work Coordinate Data&gt;</FORMAT>
<SAMPLE>P1=P_WkCord(1)</SAMPLE>
<SAMPLE>P_WkCord(2)=P2</SAMPLE>
<COMMENT>Return or set the work coordinate data (WK1CORD-WK8CORD).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>M_SlpPreStp</RSV_NAME>
<CATEGORY>6</CATEGORY>
<FORMAT>&lt;Numeric Variables&gt; = M_SlpPreStp</FORMAT>
<SAMPLE>M1=M_SlpPreStp</SAMPLE>
<SAMPLE>M_Outb(100)=M_SlpPreStp</SAMPLE>
<COMMENT>Returns the state of preliminary stopping near Position monitoring plane.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Abs</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = Abs(&lt;Equation&gt;)</FORMAT>
<SAMPLE>M1=Abs(-100)</SAMPLE>
<COMMENT>Returns the absolute value of a given value.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>ACos</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = ACos(&lt;Equation&gt;)</FORMAT>
<SAMPLE>MRad=ACos(0.6)</SAMPLE>
<COMMENT>Return the reverse-cosine value of the specified &lt; Equation &gt;.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Align</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = Align(&lt;Position&gt;)</FORMAT>
<SAMPLE>P2=Align(P1)</SAMPLE>
<COMMENT></COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Asc</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = Asc(&lt;Character String Expression&gt;)</FORMAT>
<SAMPLE>M1=Asc(&quot;A&quot;)</SAMPLE>
<COMMENT>Returns the character code of the first character in the string.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>ASin</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = ASin(&lt;Equation&gt;)</FORMAT>
<SAMPLE>MRad=ASin(-0.4)</SAMPLE>
<COMMENT>Return the reverse-sine value of the specified &lt; Equation &gt;.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Atn</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = Atn(&lt;Equation&gt;)</FORMAT>
<SAMPLE>M1=Atn(100/100)</SAMPLE>
<COMMENT>Calculates the arc tangent.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Atn2</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = Atn2(&lt;Equation 1&gt;, &lt;Equation 2&gt;)</FORMAT>
<SAMPLE>M1=Atn2(-100, 100)</SAMPLE>
<COMMENT>Calculates the arc tangent.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Bin$</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Character String Variable &gt; = Bin$(&lt;Equation&gt;)</FORMAT>
<SAMPLE>C1$=Bin$(&amp;B11111111)</SAMPLE>
<SAMPLE>C1$=Bin$(&amp;HFF)</SAMPLE>
<COMMENT>Value is converted to a binary string.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>CalArc</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable 4&gt; = CalArc(&lt;Position 1&gt;, &lt;Position 2&gt;, &lt;Position 3&gt;, &lt;Numeric Variable 1&gt;, &lt;Numeric Variable 2&gt;, &lt;Numeric Variable 3&gt;, &lt;Position Variables 1&gt;)</FORMAT>
<SAMPLE>M1=CalArc(P1, P2, P3, M10, M20, M30, P10)</SAMPLE>
<COMMENT>Provides information regarding the arc that contains the three specified points.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Chr$</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Character String Variable &gt; = Chr$(&lt;Equation&gt;)</FORMAT>
<SAMPLE>C1$=Chr$(&amp;H41)</SAMPLE>
<COMMENT>Returns the character that has the character code obtained from the specified equation.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>CInt</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = CInt(&lt;Equation&gt;)</FORMAT>
<SAMPLE>M1=CInt(1.5)</SAMPLE>
<COMMENT>Rounds the fractional part of an equation to convert the value into an integer.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>CkSum</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = CkSum(&lt;Character String&gt;, &lt;Equation 1&gt;, &lt;Equation 2&gt;)</FORMAT>
<SAMPLE>M1=CkSum(&quot;ABCDEFG&quot;, 1, 3)</SAMPLE>
<COMMENT>Calculates the checksum of the string.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Cos</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = Cos(&lt;Equation&gt;)</FORMAT>
<SAMPLE>M1=Cos(RAD(60))</SAMPLE>
<COMMENT>Gives the cosine.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Cvi</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = Cvi(&lt;Character String Expression&gt;)</FORMAT>
<SAMPLE>M1=Cvi(&quot;10ABC&quot;)</SAMPLE>
<COMMENT>Converts the character codes of the first two characters of a string into an integer.</COMMENT>
<COMMENT>M1 becomes &quot;&amp;H3031&quot; for the sample.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Cvs</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = Cvs(&lt;Character String Expression&gt;)</FORMAT>
<SAMPLE>M1=Cvs(&quot;FFFF&quot;)</SAMPLE>
<COMMENT>Converts the character codes of the first four characters of a string into a single precision real number.</COMMENT>
<COMMENT>M1 becomes &quot;12689.6&quot; for the sample.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Cvd</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = Cvd(&lt;Character String Expression&gt;)</FORMAT>
<SAMPLE>M1=Cvd(&quot;FFFFFFFF&quot;)</SAMPLE>
<COMMENT>Converts the character codes of the first eight characters of a string into a double precision real number.</COMMENT>
<COMMENT>M1 becomes &quot;3.52954+ E+30&quot; for the sample.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Deg</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = Deg(&lt;Equation&gt;)</FORMAT>
<SAMPLE>If Deg(P1.C) &lt; 171 OR Deg(P1.C) &gt; -150 Then *LABEL</SAMPLE>
<COMMENT>Converts the unit of angle measurement from radians (rad) into degrees (deg).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Dist</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; =  Dist(&lt;Position 1&gt;, &lt;Position 2&gt;)</FORMAT>
<SAMPLE>M1=Dist(P1,P2)</SAMPLE>
<COMMENT>Calculates the distance between two points (position variables).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Dot</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = Dot(&lt;Position1&gt;, &lt;Position2&gt;, &lt;Equation&gt;)</FORMAT>
<SAMPLE>MDot=Dot(PTeach, PCatch, 1)</SAMPLE>
<SAMPLE>MDot=Dot(PTeach, PCatch)</SAMPLE>
<COMMENT>Return the dot product result in specified &lt; position 1&gt; and &lt; position 2&gt;.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Exp</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = Exp(&lt;Equation&gt;)</FORMAT>
<SAMPLE>M1=Exp(2)</SAMPLE>
<COMMENT>Calculates exponential functions. (an equation that uses &quot;e&quot; as the base.)</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Fix</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = Fix(&lt;Equation&gt;)</FORMAT>
<SAMPLE>M1=Fix(5.5)</SAMPLE>
<COMMENT>Returns the integral portion of the equation.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Fram</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable 4&gt; = Fram(&lt;Numeric Variable 1&gt;, &lt;Numeric Variable 2&gt;, &lt;Numeric Variable 3&gt;)</FORMAT>
<SAMPLE>P10=Fram(P1, P2, P3)</SAMPLE>
<COMMENT>Calculates the position data that indicates a coordinate system (plane) specified by three position data.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Hex$</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Character String Variable &gt; = Hex$(&lt;Equation&gt;)</FORMAT>
<FORMAT>&lt;Character String Variable &gt; = Hex$(&lt;Equation&gt;, &lt;Number of output characters&gt;)</FORMAT>
<SAMPLE>C1$=Hex$(&amp;H41FF)</SAMPLE>
<SAMPLE>C2$=Hex$(&amp;H41FF, 2)</SAMPLE>
<COMMENT>Converts the value of an equation (Between -32768 to 32767) into hexadecimal string.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Int</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = Int(&lt;Equation&gt;)</FORMAT>
<SAMPLE>M1=Int(3.3)</SAMPLE>
<COMMENT>Returns the largest integer that does not exceed the value of the equation.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Inv</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = Inv(&lt;Position Variables&gt;)</FORMAT>
<SAMPLE>P1=Inv(P2)</SAMPLE>
<COMMENT>Obtains the position data of the inverse matrix of the position variable.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>JtoP</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = JtoP(&lt;Joint Variables&gt;)</FORMAT>
<SAMPLE>P1=JtoP(J1)</SAMPLE>
<COMMENT>Given joint data will be converted into position data.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Left$</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Character String Variable&gt; = Left$(&lt;Character String&gt;, &lt;Equation&gt;)</FORMAT>
<SAMPLE>C1$=Left$(&quot;ABC&quot;, 2)</SAMPLE>
<COMMENT>Obtains a string of the specified length starting from the left end.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Len</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt;=Len(&lt;Character String&gt;)</FORMAT>
<SAMPLE>M1=Len(&quot;ABCDEFG&quot;)</SAMPLE>
<COMMENT>Returns the length of the string.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Ln</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = Ln(&lt;Equation&gt;)</FORMAT>
<SAMPLE>M1=Ln(2)</SAMPLE>
<COMMENT>Returns the natural logarithm. (Base e.)</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Log</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = Log(&lt;Equation&gt;)</FORMAT>
<SAMPLE>M1=Log(2)</SAMPLE>
<COMMENT>Returns the common logarithm. (Base 10.)</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Max</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = Max(&lt;Equation 1&gt;, &lt;Equation 2&gt;, ...)</FORMAT>
<SAMPLE>M1=Max(2, 1, 3, 4, 10, 100)</SAMPLE>
<COMMENT>Obtains the maximum value.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Mid$</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Character String Variable &gt; = Mid$(&lt;Character String&gt;, &lt;Equation 2&gt;, &lt;Equation 3&gt;)</FORMAT>
<SAMPLE>C1$=Mid$(&quot;ABCDEFG&quot;, 3, 2)</SAMPLE>
<COMMENT>Returns a string of the specified length starting from the specified position of the string.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Min</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = Min(&lt;Equation 1&gt;, &lt;Equation 2&gt;, ......)</FORMAT>
<SAMPLE>M1=Min(2, 1, 3, 4, 10, 100)</SAMPLE>
<COMMENT>Obtains the minimum value.	</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Mirror$</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Character String Variable&gt; = Mirror$(&lt;Character String Expression&gt;)</FORMAT>
<SAMPLE>C1$=Mirror$(&quot;BJ&quot;)</SAMPLE>
<COMMENT>Inverts the bit string representing each character code of the string in binary,</COMMENT>
<COMMENT>and obtains the character-coded string. C1$ becomes &quot;RB&quot; for the sample.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Mki$</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Character String Variable &gt; = Mki$(&lt;Equation&gt;)</FORMAT>
<SAMPLE>C1$=Mki$(20299)</SAMPLE>
<COMMENT>Converts the value of an equation (integer) into a two-byte string.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Mks$</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Character String Variable&gt; = Mks$(&lt;Equation&gt;)</FORMAT>
<SAMPLE>C1$=Mks$(100.1)</SAMPLE>
<COMMENT>Converts the value of an equation (single-precision real number) into a four-byte string.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Mkd$</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Character String Variable &gt;=Mkd$(&lt;Equation&gt;)</FORMAT>
<SAMPLE>C1$=Mkd$(10000.1)</SAMPLE>
<COMMENT>Converts the value of an equation (double-precision real number) into a eight-byte string.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>PosCq</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = PosCq(&lt;Position Variables&gt;)</FORMAT>
<SAMPLE>M1=PosCq(P1)</SAMPLE>
<COMMENT>Checks whether the given position is within the movement range.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>PosMid</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = PosMid(&lt;Position Variables 1&gt;, &lt;Position Variables 2&gt;,&lt;Equation 1&gt;, &lt;Equation 2&gt;)</FORMAT>
<SAMPLE>P1=PosMid(P2, P3, 0, 0)</SAMPLE>
<COMMENT>Obtain the middle position data when a linear interpolation is performed between two given points.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>PtoJ</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Joint Variable&gt; = PtoJ(&lt;Position Variables&gt;)</FORMAT>
<SAMPLE>J1=PtoJ(P1)</SAMPLE>
<COMMENT>Converts the given position data into a joint data.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>PVSCal</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = PVSCal(&lt;Calibration No.&gt;,&lt;V/S X&gt;,&lt;V/S Y&gt;,&lt;V/S Theta&gt;])</FORMAT>
<FORMAT>&lt;Position Variables&gt; = PVSCal(&lt;Calibration No.&gt;,&lt;V/S X&gt;,&lt;V/S Y&gt;,&lt;V/S Theta&gt;,&lt;Reference position variable&gt;)</FORMAT>
<SAMPLE>P1=PVSCal(1,MX,MY,MC)</SAMPLE>
<SAMPLE>P1=PVSCal(1,MX,MY,MC,PV)</SAMPLE>
<COMMENT>Given vision sensor&apos;s image coordinate data will be converted into robot&apos;s world coordinate position data.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Rad</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = Rad(&lt;Equation&gt;)</FORMAT>
<SAMPLE>P1.C=Rad(90)</SAMPLE>
<COMMENT>Converts the unit of angle measurement from degrees (deg) into radians (rad).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Rdfl1</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Character String Variable&gt; = Rdfl1(&lt;Position Variables&gt;, &lt;Equation&gt;)</FORMAT>
<SAMPLE>C1$=Rdfl1(P1,1)</SAMPLE>
<COMMENT>Returns the structure flag of the specified position using character data &quot;R&quot;/&quot;L&quot;, &quot;A&quot;/&quot;B&quot;, and &quot;N&quot;/&quot;F&quot;.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Rdfl2</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = Rdfl2(&lt;Position Variables&gt;, &lt;Equation&gt;)</FORMAT>
<SAMPLE>M1=Rdfl2(P1, 6)</SAMPLE>
<COMMENT>Returns the multiple rotation information of the specified joint axis.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Rnd</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = Rnd(&lt;Equation&gt;)</FORMAT>
<SAMPLE>MRND=Rnd(0)</SAMPLE>
<COMMENT>Generates a random number.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Right$</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Character String Variable&gt; = Right$(&lt;Character String&gt;, &lt;Equation&gt;)</FORMAT>
<SAMPLE>C1$=Right$(&quot;ABCDEFG&quot;, 3)</SAMPLE>
<COMMENT>Obtains a string of the specified length starting from the right end.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Setfl1</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Position Variables&gt; = Setfl1(&lt;Position Variables&gt;, &lt;Character String&gt;)</FORMAT>
<SAMPLE>P2=Setfl1(P1, &quot;LBF&quot;)</SAMPLE>
<COMMENT>Changes the structure flag of the specified position using a string (such as &quot;RAN&quot;).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Setfl2</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Position Variables&gt;=Setfl2(&lt;Position Variables&gt;, &lt;Equation 1&gt;, &lt;Equation 2&gt;)</FORMAT>
<SAMPLE>P2=Setfl2(P1,6,1)</SAMPLE>
<COMMENT>Changes the multiple rotation data of the specified position.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>SetJnt</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;&lt;Joint Variable&gt;&gt; = SetJnt(&lt;J1 Axis&gt;)</FORMAT>
<FORMAT>&lt;&lt;Joint Variable&gt;&gt; = SetJnt(&lt;J1 Axis&gt;, &lt;J2 Axis&gt;)</FORMAT>
<FORMAT>&lt;&lt;Joint Variable&gt;&gt; = SetJnt(&lt;J1 Axis&gt;, &lt;J2 Axis&gt;, &lt;J3 Axis&gt;)</FORMAT>
<FORMAT>&lt;&lt;Joint Variable&gt;&gt; = SetJnt(&lt;J1 Axis&gt;, &lt;J2 Axis&gt;, &lt;J3 Axis&gt;, &lt;J4 Axis&gt;)</FORMAT>
<FORMAT>&lt;&lt;Joint Variable&gt;&gt; = SetJnt(&lt;J1 Axis&gt;, &lt;J2 Axis&gt;, &lt;J3 Axis&gt;, &lt;J4 Axis&gt;), &lt;J5 Axis&gt;))</FORMAT>
<FORMAT>&lt;&lt;Joint Variable&gt;&gt; = SetJnt(&lt;J1 Axis&gt;, &lt;J2 Axis&gt;, &lt;J3 Axis&gt;, &lt;J4 Axis&gt;), &lt;J5 Axis&gt;), &lt;J6 Axis&gt;))</FORMAT>
<FORMAT>&lt;&lt;Joint Variable&gt;&gt; = SetJnt(&lt;J1 Axis&gt;, &lt;J2 Axis&gt;, &lt;J3 Axis&gt;, &lt;J4 Axis&gt;), &lt;J5 Axis&gt;), &lt;J6 Axis&gt;), &lt;J7 Axis&gt;))</FORMAT>
<FORMAT>&lt;&lt;Joint Variable&gt;&gt; = SetJnt(&lt;J1 Axis&gt;, &lt;J2 Axis&gt;, &lt;J3 Axis&gt;, &lt;J4 Axis&gt;), &lt;J5 Axis&gt;), &lt;J6 Axis&gt;), &lt;J7 Axis&gt;), &lt;J8 Axis&gt;))</FORMAT>
<SAMPLE>J2=SetJnt(M0)</SAMPLE>
<SAMPLE>J2=SetJnt(M0, M10)</SAMPLE>
<SAMPLE>J2=SetJnt(M0, M10, M20)</SAMPLE>
<SAMPLE>J2=SetJnt(M0, M10, M20, M30)</SAMPLE>
<SAMPLE>J2=SetJnt(M0, M10, M20, M30, M40)</SAMPLE>
<SAMPLE>J2=SetJnt(M0, M10, M20, M30, M40, M50)</SAMPLE>
<SAMPLE>J2=SetJnt(M0, M10, M20, M30, M40, M50, M60)</SAMPLE>
<SAMPLE>J2=SetJnt(M0, M10, M20, M30, M40, M50, M60, M70)</SAMPLE>
<COMMENT>Sets the value to the joint variable.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>SetPos</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;&lt;Position Variable&gt;&gt; = SetPos(&lt;X Axis&gt;)</FORMAT>
<FORMAT>&lt;&lt;Position Variable&gt;&gt; = SetPos(&lt;X Axis&gt;, &lt;Y Axis&gt;)</FORMAT>
<FORMAT>&lt;&lt;Position Variable&gt;&gt; = SetPos(&lt;X Axis&gt;, &lt;Y Axis&gt;, &lt;Z Axis&gt;)</FORMAT>
<FORMAT>&lt;&lt;Position Variable&gt;&gt; = SetPos(&lt;X Axis&gt;, &lt;Y Axis&gt;, &lt;Z Axis&gt;, &lt;A Axis&gt;)</FORMAT>
<FORMAT>&lt;&lt;Position Variable&gt;&gt; = SetPos(&lt;X Axis&gt;, &lt;Y Axis&gt;, &lt;Z Axis&gt;, &lt;A Axis&gt;, &lt;B Axis&gt;)</FORMAT>
<FORMAT>&lt;&lt;Position Variable&gt;&gt; = SetPos(&lt;X Axis&gt;, &lt;Y Axis&gt;, &lt;Z Axis&gt;, &lt;A Axis&gt;, &lt;B Axis&gt;, &lt;C Axis&gt;)</FORMAT>
<FORMAT>&lt;&lt;Position Variable&gt;&gt; = SetPos(&lt;X Axis&gt;, &lt;Y Axis&gt;, &lt;Z Axis&gt;, &lt;A Axis&gt;, &lt;B Axis&gt;, &lt;C Axis&gt;, &lt;L1 Axis&gt;)</FORMAT>
<FORMAT>&lt;&lt;Position Variable&gt;&gt; = SetPos(&lt;X Axis&gt;, &lt;Y Axis&gt;, &lt;Z Axis&gt;, &lt;A Axis&gt;, &lt;B Axis&gt;, &lt;C Axis&gt;, &lt;L1 Axis&gt;, &lt;L2 Axis&gt;)</FORMAT>
<SAMPLE>P2=SetPos(P1.X)</SAMPLE>
<SAMPLE>P2=SetPos(P1.X, P1.Y)</SAMPLE>
<SAMPLE>P2=SetPos(P1.X, P1.Y, P1.Z)</SAMPLE>
<SAMPLE>P2=SetPos(P1.X, P1.Y, P1.Z, M10)</SAMPLE>
<SAMPLE>P2=SetPos(P1.X, P1.Y, P1.Z, M10, M20)</SAMPLE>
<SAMPLE>P2=SetPos(P1.X, P1.Y, P1.Z, M10, M20, M30)</SAMPLE>
<SAMPLE>P2=SetPos(P1.X, P1.Y, P1.Z, M10, M20, M30, 1)</SAMPLE>
<SAMPLE>P2=SetPos(P1.X, P1.Y, P1.Z, M10, M20, M30, 1, 2)</SAMPLE>
<COMMENT>Sets the value to the Position variable.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Sgn</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = Sgn(&lt;Equation&gt;)</FORMAT>
<SAMPLE>M2=Sgn(-12)</SAMPLE>
<COMMENT>Checks the sign of the equation.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Sin</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = Sin(&lt;Equation&gt;)</FORMAT>
<SAMPLE>M1=Sin(RAD(60))</SAMPLE>
<COMMENT>Calculates the sine.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>SplPos</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Pos Variable&gt; = SplPos(&lt;Spline Number&gt;, &lt;Path Point Number&gt;)</FORMAT>
<FORMAT>&lt;Pos Variable&gt; = SplPos(&lt;Spline Number&gt;, &lt;Path Point Number&gt;, &lt;Frame Conversion&gt;)</FORMAT>
<SAMPLE>P1 = SplPos(1,5)</SAMPLE>
<SAMPLE>P2 = SplPos(1,5,1)</SAMPLE>
<COMMENT>Acquires the path point corresponding to the path point number that is registered in the spline file specified by the spline number.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>SplSpd</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = SplSpd(&lt;Spline Number&gt;)</FORMAT>
<SAMPLE>M1 = SplSpd(1)</SAMPLE>
<COMMENT>Calculate the maximum speed that can be specified by the spline command based on information registered in the spline file specified by the spline number.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>SplECord</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Pos Variable&gt; = SplECord(&lt;Spline Number&gt;)</FORMAT>
<FORMAT>&lt;Pos Variable&gt; = SplECord(&lt;Spline Number&gt;, &lt;Frame Conversion&gt;)</FORMAT>
<SAMPLE>P1 = SplECord(1)</SAMPLE>
<SAMPLE>P2 = SplECord(1,1)</SAMPLE>
<COMMENT>Acquires the Ex-T Coordinate data that is registered in the spline file specified by the spline number.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Sqr</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = Sqr(&lt;Equation&gt;)</FORMAT>
<SAMPLE>M1=Sqr(2)</SAMPLE>
<COMMENT>Calculates the square root of an equation value.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>StrLwr</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Character String Variable&gt; = StrLwr(&lt;Character String&gt;)</FORMAT>
<SAMPLE>C1$=StrLwr(&quot;ABC&quot;)</SAMPLE>
<COMMENT>Convert a string to lower case.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>StrUpr</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Character String Variable&gt; = StrUpr(&lt;Character String&gt;)</FORMAT>
<SAMPLE>C1$=StrUpr(&quot;abc&quot;)</SAMPLE>
<COMMENT>Convert a string to upper case.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Strpos</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = Strpos(&lt;Character String 1&gt;, &lt;Character String 2&gt;)</FORMAT>
<SAMPLE>M1=Strpos(&quot;ABCDEFG&quot;, &quot;DEF&quot;)</SAMPLE>
<COMMENT>Searches for a specified string in a string.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Str$</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Character String Variable&gt; = Str$(&lt;Equation&gt;)</FORMAT>
<SAMPLE>C1$=Str$(123)</SAMPLE>
<COMMENT>Converts the value of the equation into a decimal string.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Tan</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = Tan(&lt;Equation&gt;)</FORMAT>
<SAMPLE>M1=Tan(RAD(60))</SAMPLE>
<COMMENT>Calculates the tangent.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>TrPos</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Position Variable&gt; = TrPos(&lt;Position Variables&gt;)</FORMAT>
<SAMPLE>P1=TrPos(P2)</SAMPLE>
<COMMENT>Acquire the coordinate position of a workpiece being tracked.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>TrWcur</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = TrWcur(&lt;Encoder Number&gt;, &lt;Position Variables&gt;, &lt;Encoder Value&gt;)</FORMAT>
<SAMPLE>P1=TrWcur(MENCNO%,PBPOS,MENC#)</SAMPLE>
<COMMENT>Obtain the current position of a workpiece.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Val</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = Val(&lt;Character String Expression&gt;)</FORMAT>
<SAMPLE>M1=Val(&quot;15&quot;)</SAMPLE>
<COMMENT>Converts the value in the string into a numerical value.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Zone</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = Zone(&lt;Position 1&gt;, &lt;Position 2&gt;, &lt;Position 3&gt;)</FORMAT>
<SAMPLE>M1=Zone(P1, P2, P3)</SAMPLE>
<COMMENT>Checks if the specified position is within the specified area (a rectangular solid defined by two points).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Zone2</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = Zone2(&lt;Position 1&gt;, &lt;Position 2&gt;, &lt;Position 3&gt;, &lt;Equation&gt;)</FORMAT>
<SAMPLE>M1=Zone2(P1, P2, P3, 50)</SAMPLE>
<COMMENT>Checks if the specified position is within the specified area (Cylindrical area defined by two points).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Zone3</RSV_NAME>
<CATEGORY>7</CATEGORY>
<FORMAT>&lt;Numeric Variable&gt; = Zone3(&lt;Position 1&gt;, &lt;Position 2&gt;, &lt;Position 3&gt;, &lt;Position 4&gt;, &lt;Equation W&gt;, &lt;Equation H&gt;, &lt;Equation L&gt;)</FORMAT>
<SAMPLE>M1=Zone3(P1, P2, P3, P4, 100, 100, 50)</SAMPLE>
<COMMENT>Checks if the specified position is within the specified area (The cube which consists of the three points).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Accel</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>Accel  </FORMAT>
<FORMAT>Accel  &lt;Accel rate&gt;</FORMAT>
<FORMAT>Accel  &lt;Accel rate&gt;, &lt;Decel rate&gt;</FORMAT>
<FORMAT>Accel  &lt;Accel rate&gt;, &lt;Decel rate&gt;, &lt;Accel rate when moving up&gt;</FORMAT>
<FORMAT>Accel  &lt;Accel rate&gt;, &lt;Decel rate&gt;, &lt;Accel rate when moving up&gt;, &lt;Decel rate when moving up&gt;</FORMAT>
<FORMAT>Accel  &lt;Accel rate&gt;, &lt;Decel rate&gt;, &lt;Accel rate when moving up&gt;, &lt;Decel rate when moving up&gt;, &lt;Accel rate when moving down&gt;</FORMAT>
<FORMAT>Accel  &lt;Accel rate&gt;, &lt;Decel rate&gt;, &lt;Accel rate when moving up&gt;, &lt;Decel rate when moving up&gt;, &lt;Accel rate when moving down&gt;, &lt;Decel rate when moving down&gt;</FORMAT>
<FORMAT>Accel  &lt;Accel rate&gt;, &lt;Decel rate&gt;, , , &lt;Accel rate when moving down&gt;, &lt;Decel rate when moving down&gt;</FORMAT>
<FORMAT>Accel  , , &lt;Accel rate when moving up&gt;, &lt;Decel rate when moving up&gt;</FORMAT>
<FORMAT>Accel  , , &lt;Accel rate when moving up&gt;, &lt;Decel rate when moving up&gt;, &lt;Accel rate when moving down&gt;, &lt;Decel rate when moving down&gt;</FORMAT>
<FORMAT>Accel  , , , , &lt;Accel rate when moving down&gt;, &lt;Decel rate when moving down&gt;</FORMAT>
<SAMPLE>Accel</SAMPLE>
<SAMPLE>Accel 50</SAMPLE>
<SAMPLE>Accel 50, 100</SAMPLE>
<SAMPLE>Accel 100, 100, 20</SAMPLE>
<SAMPLE>Accel 100, 100, 20, 20</SAMPLE>
<SAMPLE>Accel 100, 100, 100, 100, 20</SAMPLE>
<SAMPLE>Accel 100, 100, 100, 100, 20, 20</SAMPLE>
<SAMPLE>Accel 50, 50, , , 20, 20</SAMPLE>
<SAMPLE>Accel , , 50, 50</SAMPLE>
<SAMPLE>Accel , , 50, 50, 20, 20</SAMPLE>
<SAMPLE>Accel , , , , 20, 20</SAMPLE>
<COMMENT>Designate the robot&apos;s acceleration and deceleration speeds as a percentage (%).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Act</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Act  &lt;Priority No.&gt; = &lt;1/0&gt;</FORMAT>
<SAMPLE>Act 1=1</SAMPLE>
<COMMENT>This instruction specifies whether to allow or prohibit interrupt processing caused by signals, etc.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Base</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>Base  &lt;Base Conversion Data&gt;</FORMAT>
<FORMAT>Base  &lt;Base Coordinate Number&gt;</FORMAT>
<SAMPLE>Base (50, 100, 0, 0, 0, 90)</SAMPLE>
<SAMPLE>Base 1</SAMPLE>
<COMMENT>With this instruction, it is possible to move or rotate the robot coordinate system. Specify the base conversion data or the base coordinate number for this instruction.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>BrkLock</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>BrkLock  &lt;Argument&gt;</FORMAT>
<SAMPLE>BrkLock &amp;B111111</SAMPLE>
<SAMPLE>BrkLock 0</SAMPLE>
<SAMPLE>BrkLock M1</SAMPLE>
<COMMENT>Locking the robot&apos;s brake.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>CallP</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>CallP  &quot;&lt;Program name&gt;&quot;</FORMAT>
<FORMAT>CallP  &quot;&lt;Program name&gt;&quot;, &lt;Argument&gt;</FORMAT>
<FORMAT>CallP  &quot;&lt;Program name&gt;&quot;, &lt;Argument&gt;, &lt;Argument&gt;...</FORMAT>
<SAMPLE>CallP &quot;10&quot;</SAMPLE>
<SAMPLE>CallP &quot;10&quot;, M1</SAMPLE>
<SAMPLE>CallP &quot;10&quot;, M1, P1</SAMPLE>
<COMMENT>This instruction executes the specified program (by calling the program in a manner similar to using GoSub to call a subroutine)</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>CavChk Off</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>CavChk  On</FORMAT>
<FORMAT>CavChk  On, &lt;Robot Number&gt;</FORMAT>
<FORMAT>CavChk  On, 0, NOErr</FORMAT>
<FORMAT>CavChk  Off</FORMAT>
<FORMAT>CavChk  Off, &lt;Robot Number&gt;</FORMAT>
<SAMPLE>CavChk Off</SAMPLE>
<SAMPLE>CavChk Off, 2</SAMPLE>
<COMMENT>Set to enable/disable the collision avoidance function in automatic operation.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>CavChk On</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>CavChk  On</FORMAT>
<FORMAT>CavChk  On, &lt;Robot Number&gt;</FORMAT>
<FORMAT>CavChk  On, 0, NOErr</FORMAT>
<FORMAT>CavChk  Off</FORMAT>
<FORMAT>CavChk  Off, &lt;Robot Number&gt;</FORMAT>
<SAMPLE>CavChk On</SAMPLE>
<SAMPLE>CavChk On, 1</SAMPLE>
<SAMPLE>CavChk On, 0, NOErr</SAMPLE>
<COMMENT>Set to enable/disable the collision avoidance function in automatic operation.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>ChrSrch</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>ChrSrch  &lt;Character string array variable&gt;, &lt;Character string&gt;, &lt;Search result storage destination&gt;</FORMAT>
<SAMPLE>ChrSrch C1$(1), &quot;ROBOT&quot;, M1</SAMPLE>
<COMMENT>Searches the character string out of the character array.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Close</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Close  </FORMAT>
<FORMAT>Close  #&lt;File No.&gt;</FORMAT>
<FORMAT>Close  #&lt;File No.&gt;, #&lt;File No.&gt;...</FORMAT>
<SAMPLE>Close</SAMPLE>
<SAMPLE>Close #1</SAMPLE>
<SAMPLE>Close #1, #2</SAMPLE>
<COMMENT>Closes the designated file.(including communication lines)</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Clr</RSV_NAME>
<CATEGORY>2</CATEGORY>
<FORMAT>Clr  &lt;Type&gt;</FORMAT>
<SAMPLE>Clr 0</SAMPLE>
<SAMPLE>Clr 1</SAMPLE>
<SAMPLE>Clr 2</SAMPLE>
<SAMPLE>Clr 3</SAMPLE>
<COMMENT>This instruction clears general-purpose output signals, local numerical variables in a program, and numerical external variables.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Cmp Jnt</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>Cmp  Jnt, &lt;Axis designation&gt;</FORMAT>
<SAMPLE>Cmp Jnt, &amp;B11</SAMPLE>
<COMMENT>Start the soft control mode (compliance mode) of the specified axis in the JOINT coordinates system.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Cmp Pos</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>Cmp  Pos, &lt;Axis designation&gt;</FORMAT>
<SAMPLE>Cmp Pos, &amp;B011011</SAMPLE>
<COMMENT>Start the soft control mode (compliance mode) of the specified axis in the XYZ coordinates system.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Cmp Tool</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>Cmp Tool, &lt;Axis designation&gt;</FORMAT>
<SAMPLE>Cmp Tool, &amp;B011011</SAMPLE>
<COMMENT>Start the soft control mode (compliance mode) of the specified axis in the TOOL coordinates system.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Cmp Off</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>Cmp Off</FORMAT>
<SAMPLE>Cmp Off</SAMPLE>
<COMMENT>Release the soft control mode (compliance mode).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>CmpG</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>CmpG  &lt;X axis gain&gt;, , , , , , ,</FORMAT>
<FORMAT>CmpG  &lt;X axis gain&gt;, &lt;Y axis gain&gt;, , , , , ,</FORMAT>
<FORMAT>CmpG  &lt;X axis gain&gt;, &lt;Y axis gain&gt;, &lt;Z axis gain&gt;, , , , ,</FORMAT>
<FORMAT>CmpG  &lt;X axis gain&gt;, &lt;Y axis gain&gt;, &lt;Z axis gain&gt;, &lt;A axis gain&gt;, , , ,</FORMAT>
<FORMAT>CmpG  &lt;X axis gain&gt;, &lt;Y axis gain&gt;, &lt;Z axis gain&gt;, &lt;A axis gain&gt;, &lt;B axis gain&gt;, , ,</FORMAT>
<FORMAT>CmpG  &lt;X axis gain&gt;, &lt;Y axis gain&gt;, &lt;Z axis gain&gt;, &lt;A axis gain&gt;, &lt;B axis gain&gt;, &lt;C axis gain&gt;, ,</FORMAT>
<FORMAT>CmpG  &lt;J1 axis gain&gt;, , , , , , ,</FORMAT>
<FORMAT>CmpG  &lt;J1 axis gain&gt;, &lt;J2 axis gain&gt;, , , , , ,</FORMAT>
<FORMAT>CmpG  &lt;J1 axis gain&gt;, &lt;J2 axis gain&gt;, &lt;J3 axis gain&gt;, , , , ,</FORMAT>
<FORMAT>CmpG  &lt;J1 axis gain&gt;, &lt;J2 axis gain&gt;, &lt;J3 axis gain&gt;, &lt;J4 axis gain&gt;, , , ,</FORMAT>
<FORMAT>CmpG  &lt;J1 axis gain&gt;, &lt;J2 axis gain&gt;, &lt;J3 axis gain&gt;, &lt;J4 axis gain&gt;, &lt;J5 axis gain&gt;, , ,</FORMAT>
<FORMAT>CmpG  &lt;J1 axis gain&gt;, &lt;J2 axis gain&gt;, &lt;J3 axis gain&gt;, &lt;J4 axis gain&gt;, &lt;J5 axis gain&gt;, &lt;J6 axis gain&gt;, ,</FORMAT>
<SAMPLE>CmpG 0.5, , , , , , ,</SAMPLE>
<SAMPLE>CmpG 0.5, 0.5, , , , , ,</SAMPLE>
<SAMPLE>CmpG 0.5, 0.5, 0.5, , , , ,</SAMPLE>
<SAMPLE>CmpG 0.5, 0.5, 0.5, 0.5, , , ,</SAMPLE>
<SAMPLE>CmpG 0.5, 0.5, 0.5, 0.5, 0.5, , ,</SAMPLE>
<SAMPLE>CmpG 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, ,</SAMPLE>
<COMMENT>Specify the softness of robot control.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Cnt</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>Cnt  &lt;Continuous movement mode/acceleration/deceleration movement mode&gt;</FORMAT>
<FORMAT>Cnt  &lt;Continuous movement mode/acceleration/deceleration movement mode&gt;, &lt;Numeric value 1&gt;</FORMAT>
<FORMAT>Cnt  &lt;Continuous movement mode/acceleration/deceleration movement mode&gt;, &lt;Numeric value 1&gt;, &lt;Numeric value 2&gt;</FORMAT>
<SAMPLE>Cnt 0</SAMPLE>
<SAMPLE>Cnt 1, 300</SAMPLE>
<SAMPLE>Cnt 1, 100, 200</SAMPLE>
<COMMENT>Designates continuous movement control for interpolation. Shortening of the operating time can be performed by carrying out continuous movement.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>ColChk Off</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>ColChk  On</FORMAT>
<FORMAT>ColChk  On, NOErr</FORMAT>
<FORMAT>ColChk  Off</FORMAT>
<SAMPLE>ColChk Off</SAMPLE>
<COMMENT>Set to enable/disable the impact detection function in automatic operation.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>ColChk On</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>ColChk  On</FORMAT>
<FORMAT>ColChk  On, NOErr</FORMAT>
<FORMAT>ColChk  Off</FORMAT>
<SAMPLE>ColChk On</SAMPLE>
<SAMPLE>ColChk On, NOErr</SAMPLE>
<COMMENT>Set to enable/disable the impact detection function in automatic operation.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>ColLvl</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>ColLvl  &lt;J1 axis&gt;, , , , , , ,</FORMAT>
<FORMAT>ColLvl  &lt;J1 axis&gt;, &lt;J2 axis&gt;, , , , , ,</FORMAT>
<FORMAT>ColLvl  &lt;J1 axis&gt;, &lt;J2 axis&gt;, &lt;J3 axis&gt;, , , , ,</FORMAT>
<FORMAT>ColLvl  &lt;J1 axis&gt;, &lt;J2 axis&gt;, &lt;J3 axis&gt;, &lt;J4 axis&gt;, , , ,</FORMAT>
<FORMAT>ColLvl  &lt;J1 axis&gt;, &lt;J2 axis&gt;, &lt;J3 axis&gt;, &lt;J4 axis&gt;, &lt;J5 axis&gt;, , ,</FORMAT>
<FORMAT>ColLvl  &lt;J1 axis&gt;, &lt;J2 axis&gt;, &lt;J3 axis&gt;, &lt;J4 axis&gt;, &lt;J5 axis&gt;, &lt;J6 axis&gt;, ,</FORMAT>
<SAMPLE>ColLvl 50, , , , , , ,</SAMPLE>
<SAMPLE>ColLvl 50, 50, , , , , ,</SAMPLE>
<SAMPLE>ColLvl 50, 50, 50, , , , ,</SAMPLE>
<SAMPLE>ColLvl 50, 50, 50, 50, , , ,</SAMPLE>
<SAMPLE>ColLvl 50, 50, 50, 50, 50, , ,</SAMPLE>
<SAMPLE>ColLvl 50, 50, 50, 50, 50, 50, ,</SAMPLE>
<COMMENT>Set the detection level of the impact detection function in automatic operation.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Com On</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Com  On</FORMAT>
<FORMAT>Com(&lt;Communication Line No.&gt;)  On</FORMAT>
<SAMPLE>Com On</SAMPLE>
<SAMPLE>Com(1) On</SAMPLE>
<COMMENT>Allows interrupts from a communication line.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Com Off</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Com  Off</FORMAT>
<FORMAT>Com(&lt;Communication Line No.&gt;)  Off</FORMAT>
<SAMPLE>Com Off</SAMPLE>
<SAMPLE>Com(1) Off</SAMPLE>
<COMMENT>Prevents interrupts from a communication line.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Com Stop</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Com  Stop</FORMAT>
<FORMAT>Com&lt;Communication Line No.&gt;)  Stop</FORMAT>
<SAMPLE>Com Stop</SAMPLE>
<SAMPLE>Com(1) Stop</SAMPLE>
<COMMENT>Prohibits interrupts from a communication line.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Def Act</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Def  Act  &lt;Priority No.&gt;, &lt;Expression&gt;  &lt;Process&gt;</FORMAT>
<FORMAT>Def  Act  &lt;Priority No.&gt;, &lt;Expression&gt;  &lt;Process&gt; , &lt;Type&gt;</FORMAT>
<SAMPLE>Def Act 1, M_In(17)=1 GOSUB *LABEL</SAMPLE>
<SAMPLE>Def Act 1, M_In(17)=1 GOSUB *LABEL, S</SAMPLE>
<SAMPLE>Def Act 1, M_In(17)=1 GOSUB *LABEL, L</SAMPLE>
<COMMENT>This instruction defines the interrupt conditions for monitoring signals concurrently and performing interrupt processing during program execution, as well as the processing that will take place when an interrupt occurs.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Def Arch</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>Def  Arch  &lt;Arch number&gt;</FORMAT>
<FORMAT>Def  Arch  &lt;Arch number&gt;, &lt;upward movement increment&gt;</FORMAT>
<FORMAT>Def  Arch  &lt;Arch number&gt;, &lt;upward movement increment&gt;, &lt;downward movement increment&gt;</FORMAT>
<FORMAT>Def  Arch  &lt;Arch number&gt;, &lt;upward movement increment&gt;, &lt;downward movement increment&gt;, &lt;Upward evasion increment&gt;</FORMAT>
<FORMAT>Def  Arch  &lt;Arch number&gt;, &lt;upward movement increment&gt;, &lt;downward movement increment&gt;, &lt;Upward evasion increment&gt;, &lt;downward evasion increment&gt;</FORMAT>
<FORMAT>Def  Arch  &lt;Arch number&gt;, &lt;upward movement increment&gt;, &lt;downward movement increment&gt;, &lt;Upward evasion increment&gt;, &lt;downward evasion increment&gt;, &lt;interpolation type&gt;</FORMAT>
<FORMAT>Def  Arch  &lt;Arch number&gt;, &lt;upward movement increment&gt;, &lt;downward movement increment&gt;, &lt;Upward evasion increment&gt;, &lt;downward evasion increment&gt;, &lt;interpolation type&gt;, &lt;interpolation type1&gt;</FORMAT>
<FORMAT>Def  Arch  &lt;Arch number&gt;, &lt;upward movement increment&gt;, &lt;downward movement increment&gt;, &lt;Upward evasion increment&gt;, &lt;downward evasion increment&gt;, &lt;interpolation type&gt;, &lt;interpolation type1&gt;, &lt;interpolation type2&gt;</FORMAT>
<SAMPLE>Def Arch 1</SAMPLE>
<SAMPLE>Def Arch 1, 5</SAMPLE>
<SAMPLE>Def Arch 1, 5, 5</SAMPLE>
<SAMPLE>Def Arch 1, 5, 5, 20</SAMPLE>
<SAMPLE>Def Arch 1, 5, 5, 20, 20</SAMPLE>
<SAMPLE>Def Arch 1, 5, 5, 20, 20, 1</SAMPLE>
<SAMPLE>Def Arch 1, 5, 5, 20, 20, 1, 0</SAMPLE>
<SAMPLE>Def Arch 1, 5, 5, 20, 20, 1, 0, 0</SAMPLE>
<COMMENT>This instruction defines an arch shape for the arch motion movement corresponding to the Mva instruction.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Def Char</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Def  Char  &lt;Character string variable name&gt;</FORMAT>
<FORMAT>Def  Char  &lt;Character string variable name&gt;, &lt;Character string variable name&gt;...</FORMAT>
<SAMPLE>Def Char MESSAGE</SAMPLE>
<SAMPLE>Def Char MESSAGE, CMSG</SAMPLE>
<COMMENT>Declares a character string variable.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Def FN</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Def  FN &lt;Identification character&gt;&lt;Name&gt; = &lt;Function Definition Expression&gt;</FORMAT>
<FORMAT>Def  FN &lt;Identification character&gt;&lt;Name&gt;(&lt;Dummy Argument&gt;) = &lt;Function Definition Expression&gt;</FORMAT>
<FORMAT>Def  FN &lt;Identification character&gt;&lt;Name&gt;(&lt;Dummy Argument&gt;, &lt;Dummy Argument&gt;...) = &lt;Function Definition Expression&gt;</FORMAT>
<SAMPLE>Def FNMRoute=Sqr(2)</SAMPLE>
<SAMPLE>Def FNMDbl(MA)=MA + MA</SAMPLE>
<SAMPLE>Def FNpAdd(PA, PB)=PA + PB</SAMPLE>
<COMMENT>Defines a function and gives it name.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Def Gps</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Def Gps &lt;Watch number&gt;, &lt;Input number&gt;, &lt;Condition&gt; [, &lt;Mechanism number&gt;]</FORMAT>
<SAMPLE>Def Gps 1, 851, ON, 1</SAMPLE>
<SAMPLE>GpsChk On,1</SAMPLE>
<SAMPLE>Mov P1</SAMPLE>
<SAMPLE>GpsChk Off,1</SAMPLE>
<SAMPLE>P1 = P_Gps1(1)</SAMPLE>
<COMMENT>Defines the watch condition of the GPS function.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Def Inte</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Def  Inte  &lt;Numeric value variable name&gt;</FORMAT>
<FORMAT>Def  Inte  &lt;Numeric value variable name&gt;, &lt;Numeric value variable name&gt;...</FORMAT>
<SAMPLE>Def Inte WORK1</SAMPLE>
<SAMPLE>Def Inte WORK1, WORK2</SAMPLE>
<COMMENT>Use this instruction to declare numerical values.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Def Float</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Def  Float  &lt;Numeric value variable name&gt;</FORMAT>
<FORMAT>Def  Float  &lt;Numeric value variable name&gt;, &lt;Numeric value variable name&gt;...</FORMAT>
<SAMPLE>Def Float WORK1</SAMPLE>
<SAMPLE>Def Float WORK1, WORK2</SAMPLE>
<COMMENT>Use this instruction to declare numerical values.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Def Double</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Def  Double  &lt;Numeric value variable name&gt;</FORMAT>
<FORMAT>Def  Double  &lt;Numeric value variable name&gt;, &lt;Numeric value variable name&gt;...</FORMAT>
<SAMPLE>Def Double WORK1</SAMPLE>
<SAMPLE>Def Double WORK1, WORK2</SAMPLE>
<COMMENT>Use this instruction to declare numerical values.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Def IO</RSV_NAME>
<CATEGORY>2</CATEGORY>
<FORMAT>Def  IO  &lt;Input/output variable name&gt; = &lt;Type designation&gt;, &lt;Input/output bit No.&gt;</FORMAT>
<FORMAT>Def  IO  &lt;Input/output variable name&gt; = &lt;Type designation&gt;, &lt;Input/output bit No.&gt;, &lt;Mask information&gt;</FORMAT>
<SAMPLE>Def IO PORT1 = Bit, 6</SAMPLE>
<SAMPLE>Def IO PORT2 = Byte, 5, &amp;H0F</SAMPLE>
<COMMENT>Declares an input/output variable.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Def Jnt</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Def  Jnt  &lt;Joint variable name&gt;</FORMAT>
<FORMAT>Def  Jnt  &lt;Joint variable name&gt;, &lt;Joint variable name&gt;...</FORMAT>
<SAMPLE>Def Jnt SAFE</SAMPLE>
<SAMPLE>Def Jnt SAFE, WRIST</SAMPLE>
<COMMENT>This instruction declares joint type position variables.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Def Long</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Def  Long  &lt;Numeric value variable name&gt;</FORMAT>
<FORMAT>Def  Long  &lt;Numeric value variable name&gt;, &lt;Numeric value variable name&gt;...</FORMAT>
<SAMPLE>Def Long WORK1</SAMPLE>
<SAMPLE>Def Long WORK1, WORK2</SAMPLE>
<COMMENT>Use this instruction to declare numerical values.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Def Map</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Def Map &lt;Watch number&gt;, &lt;Input number&gt;, &lt;Condition&gt; [, &lt;Mechanism number&gt;], &lt;Lower position&gt;, &lt;Upper position&gt;, &lt;Steps&gt;, &lt;Sensitivity&gt;</FORMAT>
<SAMPLE>Def Map 3, 851, ON, 1, PC1, PC2, 20, 10</SAMPLE>
<SAMPLE>Mov PM1</SAMPLE>
<SAMPLE>GpsChk On,3</SAMPLE>
<SAMPLE>Mov PM2</SAMPLE>
<SAMPLE>GpsChk Off,3</SAMPLE>
<SAMPLE>M_Out(6011) = M_Map3(1)</SAMPLE>
<COMMENT>Defines the watch condition of the GPS function(Mapping function).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Def MoTrg</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Def  MoTrg  &lt;Mo-Trigger number&gt;, &lt;conditions&gt;</FORMAT>
<SAMPLE>Def MoTrg 1, P_Fbc.Z&lt;100</SAMPLE>
<SAMPLE>Def MoTrg 2, (P_Fbc.Z&lt;50) And (P_FsCurD.Z&gt;10)</SAMPLE>
<COMMENT>Use this instruction to declare Mo-Trigger.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Def Plt</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Def  Plt  &lt;Pallet No.&gt;, &lt;Start Point&gt;, &lt;End Point A&gt;, &lt;End Point B&gt;, &lt;Quantity A&gt;, &lt;Quantity B&gt;, &lt;Pallet Pattern&gt;</FORMAT>
<FORMAT>Def  Plt  &lt;Pallet No.&gt;, &lt;Start Point&gt;, &lt;End Point A&gt;, &lt;End Point B&gt;, &lt;Diagonal Point&gt;, &lt;Quantity A&gt;, &lt;Quantity B&gt;, &lt;Pallet Pattern&gt;</FORMAT>
<SAMPLE>Def Plt 1, P1, P2, P3, , 3, 4, 1</SAMPLE>
<SAMPLE>Def Plt 1, P1, P2, P3, P4, 3, 4, 1</SAMPLE>
<COMMENT>Defines the pallet. (3-point pallet, 4-point pallet)</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Def Pos</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Def  Pos  &lt;Position variable name&gt;</FORMAT>
<FORMAT>Def  Pos  &lt;Position variable name&gt;, &lt;Position variable name&gt;...</FORMAT>
<SAMPLE>Def Pos WORKSET</SAMPLE>
<SAMPLE>Def Pos WORKSET1, WORKSET2</SAMPLE>
<COMMENT>This instruction declares XYZ type position variables.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Dim</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Dim  &lt;Variable name&gt;(&lt;Eelement Value&gt;)</FORMAT>
<FORMAT>Dim  &lt;Variable name&gt;(&lt;Eelement Value&gt;, &lt;Eelement Value&gt;)</FORMAT>
<FORMAT>Dim  &lt;Variable name&gt;(&lt;Eelement Value&gt;, &lt;Eelement Value&gt;, &lt;Eelement Value&gt;)</FORMAT>
<FORMAT>Dim  &lt;Variable name&gt;(&lt;Eelement Value&gt;), &lt;Variable name&gt;(&lt;Eelement Value&gt;)...</FORMAT>
<FORMAT>Dim  &lt;Variable name&gt;(&lt;Eelement Value&gt;), &lt;Variable name&gt;(&lt;Eelement Value&gt;, &lt;Eelement Value&gt;)...</FORMAT>
<FORMAT>Dim  &lt;Variable name&gt;(&lt;Eelement Value&gt;), &lt;Variable name&gt;(&lt;Eelement Value&gt;, &lt;Eelement Value&gt;, &lt;Eelement Value&gt;)...</FORMAT>
<SAMPLE>Dim PDATA(10)</SAMPLE>
<SAMPLE>Dim MD6(2, 3)</SAMPLE>
<SAMPLE>Dim MD24(2, 3, 4)</SAMPLE>
<SAMPLE>Dim M1%(6), M2!(4)</SAMPLE>
<SAMPLE>Dim M1%(6), PD1(5, 5)</SAMPLE>
<SAMPLE>Dim M1%(6), PD2(5, 5, 5)</SAMPLE>
<COMMENT>Declares the quantity of elements in the array variable.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Dly</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Dly  &lt;Time&gt;</FORMAT>
<FORMAT>M_Out(1) = 1 Dly  &lt;Time&gt;</FORMAT>
<SAMPLE>Dly 30</SAMPLE>
<SAMPLE>M_Out(17)=1 Dly 0.5</SAMPLE>
<COMMENT>At a designated time, it causes a wait. / Designates an output time for a pulse.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>EBRead</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>EBRead #&lt;Vision sensor number&gt;, &lt;Tag name&gt;, &lt;Variable name&gt;</FORMAT>
<FORMAT>EBRead #&lt;Vision sensor number&gt;, &lt;Tag name&gt;, &lt;Variable name&gt;, &lt;Timeout&gt;</FORMAT>
<FORMAT>EBRead #&lt;Vision sensor number&gt;, &lt;Tag name&gt;, &lt;Variable name&gt;, &lt;Variable name&gt;...</FORMAT>
<FORMAT>EBRead #&lt;Vision sensor number&gt;, &lt;Tag name&gt;, &lt;Variable name&gt;, &lt;Variable name&gt;... , &lt;Timeout&gt;</FORMAT>
<FORMAT>EBRead #&lt;Vision sensor number&gt;, &quot;&quot;, &lt;Variable name&gt;</FORMAT>
<FORMAT>EBRead #&lt;Vision sensor number&gt;, &quot;&quot;, &lt;Variable name&gt;, &lt;Timeout&gt;</FORMAT>
<FORMAT>EBRead #&lt;Vision sensor number&gt;, &quot;&quot;, &lt;Variable name&gt;, &lt;Variable name&gt;...</FORMAT>
<FORMAT>EBRead #&lt;Vision sensor number&gt;, &quot;&quot;, &lt;Variable name&gt;, &lt;Variable name&gt;... , &lt;Timeout&gt;</FORMAT>
<FORMAT>EBRead #&lt;Vision sensor number&gt;, , &lt;Variable name&gt;</FORMAT>
<FORMAT>EBRead #&lt;Vision sensor number&gt;, , &lt;Variable name&gt;, &lt;Timeout&gt;</FORMAT>
<FORMAT>EBRead #&lt;Vision sensor number&gt;, , &lt;Variable name&gt;, &lt;Variable name&gt;...</FORMAT>
<FORMAT>EBRead #&lt;Vision sensor number&gt;, , &lt;Variable name&gt;, &lt;Variable name&gt;... , &lt;Timeout&gt;</FORMAT>
<SAMPLE>EBRead #1, &quot;Job.Robot.FormatString&quot;, M1</SAMPLE>
<SAMPLE>EBRead #1, &quot;Job.Robot.FormatString&quot;, M1, 10</SAMPLE>
<SAMPLE>EBRead #1, &quot;Job.Robot.FormatString&quot;, M1, C1$, P1</SAMPLE>
<SAMPLE>EBRead #1, &quot;Job.Robot.FormatString&quot;, M1, C1$, P1, 10</SAMPLE>
<SAMPLE>EBRead #1, &quot;&quot;, M1</SAMPLE>
<SAMPLE>EBRead #1, &quot;&quot;, M1, 10</SAMPLE>
<SAMPLE>EBRead #1, &quot;&quot;, M1, C1$, P1</SAMPLE>
<SAMPLE>EBRead #1, &quot;&quot;, M1, C1$, P1, 10</SAMPLE>
<SAMPLE>EBRead #1, , M1</SAMPLE>
<SAMPLE>EBRead #1, , M1, 10</SAMPLE>
<SAMPLE>EBRead #1, , M1, C1$, P1</SAMPLE>
<SAMPLE>EBRead #1, , M1, C1$, P1, 10</SAMPLE>
<COMMENT>The data specified by the tag name of the vision sensor is received.</COMMENT>
<COMMENT>The data received from the vision sensor is stored in the specified variable.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>EBWrite</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>EBWrite #&lt;Vision sensor number&gt;, &lt;Tag name&gt;, &lt;Write Data&gt;</FORMAT>
<FORMAT>EBWrite #&lt;Vision sensor number&gt;, &lt;Tag name&gt;, &lt;Write Data&gt;, &lt;Timeout&gt;</FORMAT>
<FORMAT>EBWrite #&lt;Vision sensor number&gt;, &quot;&quot;, &lt;Write Data&gt;</FORMAT>
<FORMAT>EBWrite #&lt;Vision sensor number&gt;, &quot;&quot;, &lt;Write Data&gt;, &lt;Timeout&gt;</FORMAT>
<FORMAT>EBWrite #&lt;Vision sensor number&gt;, , &lt;Write Data&gt;</FORMAT>
<FORMAT>EBWrite #&lt;Vision sensor number&gt;, , &lt;Write Data&gt;, &lt;Timeout&gt;</FORMAT>
<SAMPLE>EBWrite #1, &quot;Sample.Int&quot;, 1</SAMPLE>
<SAMPLE>EBWrite #1, &quot;Sample.Int&quot;, 1, 10</SAMPLE>
<SAMPLE>EBWrite #1, &quot;Sample.Int&quot;, M1</SAMPLE>
<SAMPLE>EBWrite #1, &quot;Sample.Int&quot;, M1, 10</SAMPLE>
<SAMPLE>EBWrite #1, &quot;Sample.String&quot;, &quot;Sample&quot;</SAMPLE>
<SAMPLE>EBWrite #1, &quot;Sample.String&quot;, &quot;Sample&quot;, 10</SAMPLE>
<SAMPLE>EBWrite #1, &quot;Sample.String&quot;, C1$</SAMPLE>
<SAMPLE>EBWrite #1, &quot;Sample.String&quot;, C1$, 10</SAMPLE>
<SAMPLE>EBWrite #1, &quot;&quot;, 1</SAMPLE>
<SAMPLE>EBWrite #1, &quot;&quot;, M1, 10</SAMPLE>
<SAMPLE>EBWrite #1, , &quot;Sample&quot;</SAMPLE>
<SAMPLE>EBWrite #1, , C1$, 10</SAMPLE>
<COMMENT>The tag name of the vision sensor is specified, and data is written.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>EHOpen</RSV_NAME>
<CATEGORY>5</CATEGORY>
<FORMAT>EHOpen  &lt;Hand No.&gt;, &lt;Speed&gt;, &lt;Force&gt;</FORMAT>
<FORMAT>EHOpen  &lt;Hand No.&gt;, &lt;Speed&gt;, &lt;Force&gt;, &lt;Zone ON position&gt;, &lt;Zone OFF position&gt;</FORMAT>
<SAMPLE>EHOpen 1, 30, 30</SAMPLE>
<SAMPLE>EHOpen 1, 30, 30, 1, 3</SAMPLE>
<COMMENT>Commands the Electric Hand to open.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>EHClose</RSV_NAME>
<CATEGORY>5</CATEGORY>
<FORMAT>EHClose  &lt;Hand No.&gt;, &lt;Speed&gt;, &lt;Force&gt;</FORMAT>
<FORMAT>EHClose  &lt;Hand No.&gt;, &lt;Speed&gt;, &lt;Force&gt;, &lt;Zone ON position&gt;, &lt;Zone OFF position&gt;</FORMAT>
<SAMPLE>EHOpen 1, 30, 30</SAMPLE>
<COMMENT>Commands the Electric Hand to close.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>EHMov</RSV_NAME>
<CATEGORY>5</CATEGORY>
<FORMAT>EHMov  &lt;Hand No.&gt;, &lt;Point No.&gt;, &lt;Speed&gt;</FORMAT>
<FORMAT>EHMov  &lt;Hand No.&gt;, &lt;Point No.&gt;, &lt;Speed&gt;, &lt;Relative amount&gt;</FORMAT>
<SAMPLE>EHMov 1, 1, 30</SAMPLE>
<SAMPLE>EHMov 1, 0, 30, 5</SAMPLE>
<COMMENT>Commands the Electric Hand to move to the specified position.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>EHHold</RSV_NAME>
<CATEGORY>5</CATEGORY>
<FORMAT>EHHold  &lt;Hand No.&gt;, &lt;Point No.&gt;, &lt;Speed&gt;, &lt;Force&gt;</FORMAT>
<SAMPLE>EHHold 1, 1, 30, 30</SAMPLE>
<COMMENT>Commands the Electric Hand to do positioning and holding.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>EHOrg</RSV_NAME>
<CATEGORY>5</CATEGORY>
<FORMAT>EHOrg  &lt;Hand No.&gt;</FORMAT>
<SAMPLE>EHOrg 1</SAMPLE>
<COMMENT>Commands the Electric Hand to return to the original position.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>EHStop</RSV_NAME>
<CATEGORY>5</CATEGORY>
<FORMAT>EHStop  &lt;Hand No.&gt;</FORMAT>
<SAMPLE>EHStop 1</SAMPLE>
<COMMENT>Commands the Electric Hand to stop.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>EHTbl</RSV_NAME>
<CATEGORY>5</CATEGORY>
<FORMAT>EHTbl  &lt;Hand No.&gt;, &lt;Table No.&gt;</FORMAT>
<SAMPLE>EHTbl 1, 2</SAMPLE>
<COMMENT>Commands the Electric Hand to do condition of specified table number.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>End</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>End</FORMAT>
<SAMPLE>End</SAMPLE>
<COMMENT>This instruction defines the final line of a program.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Error</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Error  &lt;Error No.&gt;</FORMAT>
<SAMPLE>Error 9000</SAMPLE>
<COMMENT>This instruction makes a program generate an error.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Fine</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>Fine  &lt;No. of pulses&gt;</FORMAT>
<FORMAT>Fine  &lt;No. of pulses&gt;, &lt;Axis No.&gt;</FORMAT>
<SAMPLE>Fine 300</SAMPLE>
<SAMPLE>Fine 100, 2</SAMPLE>
<COMMENT>This instruction specifies completion conditions of the robot&apos;s positioning. It is invalid during the smooth movement control (CNT 1).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>For</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>For  &lt;Counter&gt; = &lt;Default value&gt; To &lt;End Value&gt;</FORMAT>
<FORMAT>For  &lt;Counter&gt; = &lt;Default value&gt; To &lt;End Value&gt; Step &lt;Increment&gt;</FORMAT>
<FORMAT>Next</FORMAT>
<FORMAT>Next  &lt;Counter 1&gt;</FORMAT>
<SAMPLE>For M1=1 To 10</SAMPLE>
<SAMPLE>For M1=1 To 10 Step 1</SAMPLE>
<SAMPLE>Next</SAMPLE>
<SAMPLE>Next M1</SAMPLE>
<COMMENT>Repeatedly executes the program between the For statement and Next statement until the end conditions are satisfied.</COMMENT>
<END_NAME>Next</END_NAME>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Fsc Off</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>Fsc  On, &lt;Condition A&gt;, &lt;Condition B&gt;, &lt;Designation of the offset cancellation&gt;</FORMAT>
<FORMAT>Fsc  Off</FORMAT>
<SAMPLE>Fsc Off</SAMPLE>
<COMMENT>Effective/invalidity of the force control function to use the force sensor is specified.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Fsc On</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>Fsc  On, &lt;Condition A&gt;, &lt;Condition B&gt;, &lt;Designation of the offset cancellation&gt;</FORMAT>
<FORMAT>Fsc  Off</FORMAT>
<SAMPLE>Fsc On, 0, 2, 1</SAMPLE>
<COMMENT>Effective/invalidity of the force control function to use the force sensor is specified.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>FsCTrg</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>FsCTrg  &lt;Mo-Trigger number&gt;, &lt;Time required to switch&gt;, &lt;control characteristic number after switching&gt;</FORMAT>
<FORMAT>FsCTrg  &lt;Mo-Trigger number&gt;, &lt;Time required to switch&gt;, &lt;control characteristic number after switching&gt;, &lt;timeout&gt;, &lt;execution type&gt;</FORMAT>
<FORMAT>FsCTrg  &lt;Mo-Trigger number&gt;, &lt;Time required to switch&gt;, &lt;control characteristic number after switching&gt;, &lt;timeout&gt;, &lt;execution type&gt;, &lt;error&gt;</FORMAT>
<SAMPLE>FsCTrg 3, 200, 1</SAMPLE>
<SAMPLE>FsCTrg 1, 500, 5, 30, 1</SAMPLE>
<SAMPLE>FsCTrg 2, 300, -1, 20, 0, 1</SAMPLE>
<COMMENT>The control characteristic switching of the force control with Mo-Trigger is set.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>FsGChg</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>FsGChg  &lt;Starting position of switching gain&gt;, &lt;Time required to switch&gt;, &lt;Condition B after switching gain&gt;</FORMAT>
<SAMPLE>FsGChg 30, 200, 1</SAMPLE>
<COMMENT>The force control gain is changed while the interpolation is operating.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>FsLog Off</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>FsLog  On</FORMAT>
<FORMAT>FsLog  Off, &lt;Log file No.&gt;</FORMAT>
<SAMPLE>FsLog Off, 1</SAMPLE>
<COMMENT>Beginning/end of logging of the force control is specified.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>FsLog On</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>FsLog  On</FORMAT>
<FORMAT>FsLog  Off, &lt;Log file No.&gt;</FORMAT>
<SAMPLE>FsLog On</SAMPLE>
<COMMENT>Beginning/end of logging of the force control is specified.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>FsOutLog</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>FsOutLog  &lt;Log file No.&gt;</FORMAT>
<SAMPLE>FsOutLog 1</SAMPLE>
<COMMENT>The log file made by FsLog command is read by the FTP.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>FsTAlgo</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>FsTAlgo  &lt;Algorithm Number&gt;</FORMAT>
<FORMAT>FsTAlgo  &lt;Algorithm Number&gt;, &lt;Object Axis&gt;</FORMAT>
<SAMPLE>FsTAlgo 53</SAMPLE>
<SAMPLE>FsTAlgo 53, 3</SAMPLE>
<COMMENT>The algorithm and the object axis of the inspection used by the force inspection function is specified.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>FsTBat</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>FsTBat  &lt;Log File Number&gt;</FORMAT>
<FORMAT>FsTBat  &lt;Log File Number&gt;, &lt;Coordinates Axis&gt;, &lt;Start Log Position&gt;, &lt;End Log Position&gt;</FORMAT>
<FORMAT>FsTBat  &lt;Log File Number&gt;, &lt;Coordinates Axis&gt;, &lt;Start Log Position&gt;, &lt;End Log Position&gt;, &lt;Last Log Position&gt;, &lt;Tolerance&gt;</FORMAT>
<FORMAT>FsTBat  &lt;Log File Number&gt;, &lt;Coordinates Axis&gt;, &lt;Start Log Position&gt;, &lt;End Log Position&gt;, &lt;Last Log Position&gt;, &lt;Tolerance&gt;, &lt;Force Threshold&gt;, &lt;Direction&gt;, &lt;Condition&gt;</FORMAT>
<SAMPLE>FsTBat 1</SAMPLE>
<SAMPLE>FsTBat 1, 3, 20, 80</SAMPLE>
<SAMPLE>FsTBat 1, 3, 20, 80, 150, 1</SAMPLE>
<SAMPLE>FsTBat 1, 3, 20, 80, 150, 1, 2, 0, 1</SAMPLE>
<COMMENT>The force inspection function is executed by the batch processing by using the log data gathered by FsTest instruction.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>FsTCond</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>FsTCond仩&lt;Data Cycle&gt;, &lt;Behavior at NG&gt;</FORMAT>
<SAMPLE>FsTCond 0, 0</SAMPLE>
<COMMENT>The data cycle and the behavior of the force inspection function are set.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>FsTest Off</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>FsTest仩On</FORMAT>
<FORMAT>FsTest仩On, &lt;Interpolation progress rate&gt;</FORMAT>
<FORMAT>FsTest仩On, &lt;Interpolation progress rate&gt;, &lt;Force Threshold&gt;, &lt;Force Direction&gt;, &lt;Approval Condition&gt;</FORMAT>
<FORMAT>FsTest仩Off</FORMAT>
<FORMAT>FsTest仩Off, &lt;Interpolation progress rate&gt;</FORMAT>
<SAMPLE>FsTest Off</SAMPLE>
<SAMPLE>FsTest Off, 80</SAMPLE>
<COMMENT>Beginning/end of the force inspection function is specified.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>FsTest On</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>FsTest仩On</FORMAT>
<FORMAT>FsTest仩On, &lt;Interpolation progress rate&gt;</FORMAT>
<FORMAT>FsTest仩On, &lt;Interpolation progress rate&gt;, &lt;Force Threshold&gt;, &lt;Force Direction&gt;, &lt;Approval Condition&gt;</FORMAT>
<FORMAT>FsTest仩Off</FORMAT>
<FORMAT>FsTest仩Off, &lt;Interpolation progress rate&gt;</FORMAT>
<SAMPLE>FsTest On</SAMPLE>
<SAMPLE>FsTest On, 20</SAMPLE>
<SAMPLE>FsTest On, 20, 3, 0, 1</SAMPLE>
<COMMENT>Beginning/end of the force inspection function is specified.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>FsHndEst Off</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>FsHndEst On, &lt;Control mode&gt;</FORMAT>
<FORMAT>FsHndEst Off</FORMAT>
<SAMPLE>FsHndEst Off</SAMPLE>
<COMMENT>Beginning/end of the hand load estimation for force sensor is specified.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>FsHndEst On</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>FsHndEst On, &lt;Control mode&gt;</FORMAT>
<FORMAT>FsHndEst Off</FORMAT>
<SAMPLE>FsHndEst On,1</SAMPLE>
<COMMENT>Beginning/end of the hand load estimation for force sensor is specified.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>FsGetDat</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>FsGetDat &lt;data number&gt;</FORMAT>
<SAMPLE>FsGetDat 3</SAMPLE>
<COMMENT>Obtains the data of the force sensor calibration.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Next</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>For  &lt;Counter&gt; = &lt;Default value&gt; To &lt;End Value&gt;</FORMAT>
<FORMAT>For  &lt;Counter&gt; = &lt;Default value&gt; To &lt;End Value&gt; Step &lt;Increment&gt;</FORMAT>
<FORMAT>Next</FORMAT>
<FORMAT>Next  &lt;Counter 1&gt;</FORMAT>
<SAMPLE>For M1=1 To 10</SAMPLE>
<SAMPLE>For M1=1 To 10 Step 1</SAMPLE>
<SAMPLE>Next</SAMPLE>
<SAMPLE>Next M1</SAMPLE>
<COMMENT>Repeatedly executes the program between the For statement and Next statement until the end conditions are satisfied.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Step</RSV_NAME>
<CATEGORY>8</CATEGORY>
<FORMAT>For  &lt;Counter&gt; = &lt;Default value&gt; To &lt;End Value&gt;</FORMAT>
<FORMAT>For  &lt;Counter&gt; = &lt;Default value&gt; To &lt;End Value&gt; Step &lt;Increment&gt;</FORMAT>
<FORMAT>Next</FORMAT>
<FORMAT>Next  &lt;Counter 1&gt;</FORMAT>
<SAMPLE>For M1=1 To 10 Step 1</SAMPLE>
<SAMPLE>For M1=10 To 1 Step -1</SAMPLE>
<SAMPLE>Next</SAMPLE>
<SAMPLE>Next M1</SAMPLE>
<COMMENT>Repeatedly executes the program between the For statement and Next statement until the end conditions are satisfied.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>FPrm</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>FPrm  &lt;Dummy Argument&gt;</FORMAT>
<FORMAT>FPrm  &lt;Dummy Argument&gt;, &lt;Dummy Argument&gt;...</FORMAT>
<SAMPLE>FPrm M1</SAMPLE>
<SAMPLE>FPrm M1, P1</SAMPLE>
<COMMENT>Defines the order of the arguments, the type, and number for the main program that uses arguments in a sub program.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>GetM</RSV_NAME>
<CATEGORY>3</CATEGORY>
<FORMAT>GetM  &lt;Mechanism No.&gt;</FORMAT>
<SAMPLE>GetM 1</SAMPLE>
<COMMENT>Control right is acquired by specifying the mechanism number of the robot to be controlled.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>GoSub</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>GoSub  &lt;Call Destination&gt;</FORMAT>
<SAMPLE>GoSub *SUB1</SAMPLE>
<COMMENT>Calls up the subroutine at the designated label line.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Goto</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Goto  &lt;Branch Destination&gt;</FORMAT>
<SAMPLE>Goto *LOOP</SAMPLE>
<COMMENT>This instruction makes a program branch to the specified label line unconditionally.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>GpsChk Off</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>GpsChk &lt;ON / OFF&gt;, &lt;Watch number&gt;</FORMAT>
<SAMPLE>Def Map 3, 851, ON, 1, PC1, PC2, 20, 10</SAMPLE>
<SAMPLE>Mov PM1</SAMPLE>
<SAMPLE>GpsChk On,3</SAMPLE>
<SAMPLE>Mov PM2</SAMPLE>
<SAMPLE>GpsChk Off,3</SAMPLE>
<SAMPLE>M_Out(6011) = M_Map3(1)</SAMPLE>
<COMMENT>Starts/Stops the watch condition of the GPS function.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>GpsChk On</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>GpsChk &lt;ON / OFF&gt;, &lt;Watch number&gt;</FORMAT>
<SAMPLE>Def Map 3, 851, ON, 1, PC1, PC2, 20, 10</SAMPLE>
<SAMPLE>Mov PM1</SAMPLE>
<SAMPLE>GpsChk On,3</SAMPLE>
<SAMPLE>Mov PM2</SAMPLE>
<SAMPLE>GpsChk Off,3</SAMPLE>
<SAMPLE>M_Out(6011) = M_Map3(1)</SAMPLE>
<COMMENT>Starts/Stops the watch condition of the GPS function.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Hlt</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Hlt</FORMAT>
<SAMPLE>HLt</SAMPLE>
<COMMENT>Interrupts the execution of the program and movement of the robot, and stops.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>HOpen</RSV_NAME>
<CATEGORY>5</CATEGORY>
<FORMAT>HOpen  &lt;Hand No.&gt;</FORMAT>
<FORMAT>HOpen  &lt;Hand No.&gt;, &lt;Starting grasp force&gt;, &lt;Holding grasp force&gt;, &lt;Starting grasp force holding time&gt;</FORMAT>
<SAMPLE>HOpen 1</SAMPLE>
<SAMPLE>HOpen 1, 32, 20, 1</SAMPLE>
<COMMENT>Commands the hand to open.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>HClose</RSV_NAME>
<CATEGORY>5</CATEGORY>
<FORMAT>HClose  &lt;Hand No.&gt;</FORMAT>
<SAMPLE>HClose 1</SAMPLE>
<COMMENT>Commands the hand to close.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>If</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>If  &lt;Expression&gt;  Then  &lt;Process&gt;  </FORMAT>
<FORMAT>If  &lt;Expression&gt;  Then  &lt;Process&gt;  Else &lt;Process&gt;</FORMAT>
<FORMAT>[&lt;Process&gt;]</FORMAT>
<FORMAT>Else</FORMAT>
<FORMAT>[&lt;Process&gt;]</FORMAT>
<FORMAT>EndIf</FORMAT>
<SAMPLE>If M1&gt;10 Then</SAMPLE>
<SAMPLE>Else</SAMPLE>
<SAMPLE>EndIf</SAMPLE>
<COMMENT>A process is selected and executed according to the results of an expression.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Then</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>If  &lt;Expression&gt;  Then  &lt;Process&gt;  </FORMAT>
<FORMAT>If  &lt;Expression&gt;  Then  &lt;Process&gt;  Else &lt;Process&gt;</FORMAT>
<FORMAT>[&lt;Process&gt;]</FORMAT>
<FORMAT>Else</FORMAT>
<FORMAT>[&lt;Process&gt;]</FORMAT>
<FORMAT>EndIf</FORMAT>
<SAMPLE>If M1&gt;10 Then</SAMPLE>
<SAMPLE>Else</SAMPLE>
<SAMPLE>EndIf</SAMPLE>
<COMMENT>A process is selected and executed according to the results of an expression.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Else</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>If  &lt;Expression&gt;  Then  &lt;Process&gt;  </FORMAT>
<FORMAT>If  &lt;Expression&gt;  Then  &lt;Process&gt;  Else &lt;Process&gt;</FORMAT>
<FORMAT>[&lt;Process&gt;]</FORMAT>
<FORMAT>Else</FORMAT>
<FORMAT>[&lt;Process&gt;]</FORMAT>
<FORMAT>EndIf</FORMAT>
<SAMPLE>If M1&gt;10 Then</SAMPLE>
<SAMPLE>Else</SAMPLE>
<SAMPLE>EndIf</SAMPLE>
<COMMENT>A process is selected and executed according to the results of an expression.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>EndIf</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>If  &lt;Expression&gt;  Then  &lt;Process&gt;  </FORMAT>
<FORMAT>If  &lt;Expression&gt;  Then  &lt;Process&gt;  Else &lt;Process&gt;</FORMAT>
<FORMAT>[&lt;Process&gt;]</FORMAT>
<FORMAT>Else</FORMAT>
<FORMAT>[&lt;Process&gt;]</FORMAT>
<FORMAT>EndIf</FORMAT>
<SAMPLE>If M1&gt;10 Then</SAMPLE>
<SAMPLE>Else</SAMPLE>
<SAMPLE>EndIf</SAMPLE>
<COMMENT>A process is selected and executed according to the results of an expression.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Input</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Input  #&lt;File No.&gt;, &lt;Input data name&gt;</FORMAT>
<FORMAT>Input  #&lt;File No.&gt;, &lt;Input data name&gt;, &lt;Input data name&gt;...</FORMAT>
<SAMPLE>Input #1, M1</SAMPLE>
<SAMPLE>Input #1, M1, CABC$</SAMPLE>
<SAMPLE>Input #1, M1, P1</SAMPLE>
<COMMENT>Inputs data into a file (including communication lines).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>JOvrd</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>JOvrd  &lt;Designated override&gt;</FORMAT>
<SAMPLE>JOvrd 50</SAMPLE>
<COMMENT>Designates the override that is valid only during the robot&apos;s joint movements.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>JRC</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>JRC  &lt;[+]1/-1/0&gt;</FORMAT>
<FORMAT>JRC  &lt;[+]1/-1/0&gt;, &lt;Axis No&gt;</FORMAT>
<FORMAT>JRC  &lt;[+]&lt;Numeric Value&gt;/-&lt;Numeric Value&gt;/0&gt;</FORMAT>
<FORMAT>JRC  &lt;[+]&lt;Numeric Value&gt;/-&lt;Numeric Value&gt;/0&gt;, &lt;Axis No&gt;</FORMAT>
<SAMPLE>JRC 1</SAMPLE>
<SAMPLE>JRC 1, 2</SAMPLE>
<SAMPLE>JRC -2</SAMPLE>
<SAMPLE>JRC -2, 1</SAMPLE>
<COMMENT>This instruction rewrites the current coordinate values by adding/subtracting the value specified by a parameter to/from the current joint coordinate values of the specified axis.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>LoadSet</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>LoadSet  &lt;Hand condition No.&gt;, &lt;Workpiece condition No.&gt;</FORMAT>
<SAMPLE>LoadSet 1, 2</SAMPLE>
<COMMENT>This instruction specifies the condition of the hand/workpiece at execution of the OADL instruction.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Mov</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>Mov  &lt;Target Position&gt;</FORMAT>
<FORMAT>Mov  &lt;Target Position&gt;, &lt;Close Distance&gt;</FORMAT>
<FORMAT>Mov  &lt;Target Position&gt;, &lt;Close Distance&gt;  Type  &lt;Constants1&gt;, &lt;Constants1&gt;</FORMAT>
<FORMAT>Mov  &lt;Target Position&gt;, &lt;Close Distance&gt;  Type  &lt;Constants1&gt;, &lt;Constants1&gt;, &lt;Appended conditions&gt;</FORMAT>
<SAMPLE>Mov J1</SAMPLE>
<SAMPLE>Mov P1, 50.0</SAMPLE>
<SAMPLE>Mov P1, 50.0 Type 1, 0</SAMPLE>
<SAMPLE>Mov P4, 100.0 WTH M_Out(17)=1</SAMPLE>
<COMMENT>Using joint interpolation operation, moves from the current position to the destination position.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Type</RSV_NAME>
<CATEGORY>8</CATEGORY>
<FORMAT>Mov  &lt;Target Position&gt;, &lt;Close Distance&gt;  Type  &lt;Constants1&gt;, &lt;Constants1&gt;</FORMAT>
<FORMAT>Mov  &lt;Target Position&gt;, &lt;Close Distance&gt;  Type  &lt;Constants1&gt;, &lt;Constants1&gt;, &lt;Appended conditions&gt;</FORMAT>
<SAMPLE>Mov P1 Type 0, 0</SAMPLE>
<SAMPLE>Mov P1 Type 1, 0</SAMPLE>
<SAMPLE>Mov P1 Type 0, 1</SAMPLE>
<SAMPLE>Mov P1 Type 1, 1</SAMPLE>
<SAMPLE>Mov P1 Type 0, 2</SAMPLE>
<COMMENT>The movement type from current location to the movement purpose position is specified.</COMMENT>
<COMMENT>&lt;Constants1&gt;:0/1 = shortcut/detour</COMMENT>
<COMMENT>&lt;Constants2&gt;:0/1/2 = equivalent rotation/3-axis XYZ/singular point passage</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Mva</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>Mva  &lt;Target Position&gt;</FORMAT>
<FORMAT>Mva  &lt;Target Position&gt;, &lt;Arch number&gt;</FORMAT>
<SAMPLE>Mva P2, 1</SAMPLE>
<COMMENT>This instruction moves the robot from the current position to the target position with an arch movement (arch interpolation).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Mvc</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>Mvc  &lt;Start point&gt;, &lt;Transit point 1&gt;, &lt;Transit point 2&gt;</FORMAT>
<FORMAT>Mvc  &lt;Start point&gt;, &lt;Transit point 1&gt;, &lt;Transit point 2&gt;  &lt;Additional condition&gt;]</FORMAT>
<SAMPLE>Mvc P1, P2, P3</SAMPLE>
<SAMPLE>Mvc P1, P2, P3 Wth M_Out(17)=1</SAMPLE>
<COMMENT>Carries out 3D circular interpolation in the order of start point, transit point 1, transit point 2 and start point.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Mvr</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>Mvr  &lt;Start Point&gt;, &lt;Transit Point&gt;, &lt;End Point&gt;</FORMAT>
<FORMAT>Mvr  &lt;Start Point&gt;, &lt;Transit Point&gt;, &lt;End Point&gt;  Type  &lt;Constants 1&gt;, &lt;Constants 2&gt;</FORMAT>
<FORMAT>Mvr  &lt;Start Point&gt;, &lt;Transit Point&gt;, &lt;End Point&gt;  Type  &lt;Constants 1&gt;, &lt;Constants 2&gt;  &lt;Appended Condition&gt;</FORMAT>
<SAMPLE>Mvr P1, P2, P3</SAMPLE>
<SAMPLE>Mvr P1, P2, P3 Type 0, 1</SAMPLE>
<SAMPLE>Mvr P1, P2, P3 Type 0, 1 Wth M_Out(17)=1</SAMPLE>
<COMMENT>Carries out 3-dimensional circular interpolation movement from the start point to the end point via transit points.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Mvr2</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>Mvr2  &lt;Start Point&gt;, &lt;End Point&gt;, &lt;Reference point&gt;</FORMAT>
<FORMAT>Mvr2  &lt;Start Point&gt;, &lt;End Point&gt;, &lt;Reference point&gt;  Type  &lt;Constants 1&gt;, &lt;Constants 2&gt;</FORMAT>
<FORMAT>Mvr2  &lt;Start Point&gt;, &lt;End Point&gt;, &lt;Reference point&gt;  Type  &lt;Constants 1&gt;, &lt;Constants 2&gt;  &lt;Appended Condition&gt;</FORMAT>
<SAMPLE>Mvr2 P1, P2, P3</SAMPLE>
<SAMPLE>Mvr2 P1, P2, P3 Type 0, 1</SAMPLE>
<SAMPLE>Mvr2 P1, P2, P3 Type 0, 1 Wth M_Out(17)=1</SAMPLE>
<COMMENT>Carries out 3-dimensional circular interpolation motion from the start point to the end point on the arc composed of the start point, end point, and reference points.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Mvr3</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>Mvr3  &lt;Start Point&gt;, &lt;End Point&gt;, &lt;Center Point&gt;</FORMAT>
<FORMAT>Mvr3  &lt;Start Point&gt;, &lt;End Point&gt;, &lt;Center Point&gt;  Type  &lt;Constants 1&gt;AC&lt;Constants 2&gt;]</FORMAT>
<FORMAT>Mvr3  &lt;Start Point&gt;, &lt;End Point&gt;, &lt;Center Point&gt;  Type  &lt;Constants 1&gt;AC&lt;Constants 2&gt;  &lt;Appended Condition&gt;</FORMAT>
<SAMPLE>Mvr3 P1, P2, P3</SAMPLE>
<SAMPLE>Mvr3 P1, P2, P3 Type 0, 1</SAMPLE>
<SAMPLE>Mvr3 P1, P2, P3 Type 0, 1 Wth M_Out(17)=1</SAMPLE>
<COMMENT>Carries out 3-dimensional circular interpolation movement from the start point to the end point on the arc composed of the center point, start point and end point.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Mvs</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>Mvs  &lt;Movement Target Position&gt;</FORMAT>
<FORMAT>Mvs  &lt;Movement Target Position&gt;, &lt;Close Distance&gt;</FORMAT>
<FORMAT>Mvs  &lt;Movement Target Position&gt;, &lt;Close Distance&gt;  Type  &lt;Constants1&gt;, &lt;Constants2&gt;</FORMAT>
<FORMAT>Mvs  &lt;Movement Target Position&gt;, &lt;Close Distance&gt;  Type  &lt;Constants1&gt;, &lt;Constants2&gt;  &lt;Appended Condition&gt;</FORMAT>
<FORMAT>Mvs , &lt;Separation Distance&gt;</FORMAT>
<FORMAT>Mvs , &lt;Separation Distance&gt;  Type  &lt;Constants1&gt;, &lt;Constants2&gt;</FORMAT>
<FORMAT>Mvs , &lt;Separation Distance&gt;  Type  &lt;Constants1&gt;, &lt;Constants2&gt;  &lt;Appended Condition&gt;</FORMAT>
<SAMPLE>Mvs P1</SAMPLE>
<SAMPLE>Mvs P1, 50.0</SAMPLE>
<SAMPLE>Mvs P1, 50.0 Type 1, 0</SAMPLE>
<SAMPLE>Mvs P1, 50.0 Type 1, 0 Wth M_Out(17)=1</SAMPLE>
<SAMPLE>Mvs ,100</SAMPLE>
<SAMPLE>Mvs ,100 Type 1, 0</SAMPLE>
<SAMPLE>Mvs ,100 Type 1, 0 Wth M_Out(17)=1</SAMPLE>
<COMMENT>Carries out linear interpolation movement from the current position to the movement target position.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>EMvs</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>EMvs  &lt;Ex-T Coordinate Number&gt;, &lt;Movement Target Position&gt;</FORMAT>
<FORMAT>EMvs  &lt;Ex-T Coordinate Number&gt;, &lt;Movement Target Position&gt; Type  &lt;Constants1&gt;, &lt;Constants2&gt;</FORMAT>
<FORMAT>EMvs  &lt;Ex-T Coordinate Number&gt;, &lt;Movement Target Position&gt; Type  &lt;Constants1&gt;, &lt;Constants2&gt;  &lt;Appended Condition&gt;</FORMAT>
<SAMPLE>EMvs 1, P1</SAMPLE>
<SAMPLE>EMvs 3, (Plt 1, 5)</SAMPLE>
<SAMPLE>EMvs 2, P1 Wth M_Out(17)=1</SAMPLE>
<SAMPLE>EMvs 1, P4 WthIf M_In(18)=1, M_Out(20)=1</SAMPLE>
<COMMENT>Carries out linear interpolation movement along Ex-T from the current position to the movement target position.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>EMvc</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>EMvc  &lt;Ex-T Coordinate Number&gt;, &lt;Start point&gt;, &lt;Transit point 1&gt;, &lt;Transit point 2&gt;</FORMAT>
<FORMAT>EMvc  &lt;Ex-T Coordinate Number&gt;, &lt;Start point&gt;, &lt;Transit point 1&gt;, &lt;Transit point 2&gt;  &lt;Additional condition&gt;]</FORMAT>
<SAMPLE>EMvc 1, P1, P2, P3</SAMPLE>
<SAMPLE>EMvc 2, P1, J2, P3</SAMPLE>
<SAMPLE>EMvc 2, P1, P2, P3 Wth M_Out(17)=1</SAMPLE>
<SAMPLE>EMvc 4, P3, (Plt 1,5), P4 WthIf M_In(20)=1, M_Out(21)=1</SAMPLE>
<COMMENT>Carries out 3-dimensional circular interpolation movement along Ex-T in the order of start point, transit point 1, transit point 2 and start point.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>EMvr</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>EMvr  &lt;Ex-T Coordinate Number&gt;, &lt;Start Point&gt;, &lt;Transit Point&gt;, &lt;End Point&gt;</FORMAT>
<FORMAT>EMvr  &lt;Ex-T Coordinate Number&gt;, &lt;Start Point&gt;, &lt;Transit Point&gt;, &lt;End Point&gt;  Type  &lt;Constants 1&gt;, &lt;Constants 2&gt;</FORMAT>
<FORMAT>EMvr  &lt;Ex-T Coordinate Number&gt;, &lt;Start Point&gt;, &lt;Transit Point&gt;, &lt;End Point&gt;  Type  &lt;Constants 1&gt;, &lt;Constants 2&gt;  &lt;Appended Condition&gt;</FORMAT>
<SAMPLE>EMvr 1, P1, P2, P3</SAMPLE>
<SAMPLE>EMvr 2, P1, J2, P3</SAMPLE>
<SAMPLE>EMvr 2, P1, P2, P3 Wth M_Out(17)=1</SAMPLE>
<SAMPLE>EMvr 4, P3, (Plt 1,5), P4 WthIf M_In(20)=1, M_Out(21)=1</SAMPLE>
<COMMENT>Carries out 3-dimensional circular interpolation movement along Ex-T from the start point to the end point via transit points.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>EMvr2</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>EMvr2  &lt;Ex-T Coordinate Number&gt;, &lt;Start Point&gt;, &lt;End Point&gt;, &lt;Reference point&gt;</FORMAT>
<FORMAT>EMvr2  &lt;Ex-T Coordinate Number&gt;, &lt;Start Point&gt;, &lt;End Point&gt;, &lt;Reference point&gt;  Type  &lt;Constants 1&gt;, &lt;Constants 2&gt;</FORMAT>
<FORMAT>EMvr2  &lt;Ex-T Coordinate Number&gt;, &lt;Start Point&gt;, &lt;End Point&gt;, &lt;Reference point&gt;  Type  &lt;Constants 1&gt;, &lt;Constants 2&gt;  &lt;Appended Condition&gt;</FORMAT>
<SAMPLE>EMvr2 1, P1, P2, P3</SAMPLE>
<SAMPLE>EMvr2 2, P1, J2, P3</SAMPLE>
<SAMPLE>EMvr2 2, P1, P2, P3 Wth M_Out(17)=1</SAMPLE>
<SAMPLE>EMvr2 4, P3, (Plt 1,5), P4 WthIf M_In(20)=1, M_Out(21)=1</SAMPLE>
<COMMENT>Carries out 3-dimensional circular interpolation movement along Ex-T from the start point to the end point on the arc composed of the start point, end point, and reference points.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>EMvr3</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>EMvr3  &lt;Ex-T Coordinate Number&gt;, &lt;Start Point&gt;, &lt;End Point&gt;, &lt;Center Point&gt;</FORMAT>
<FORMAT>EMvr3  &lt;Ex-T Coordinate Number&gt;, &lt;Start Point&gt;, &lt;End Point&gt;, &lt;Center Point&gt;  Type  &lt;Constants 1&gt;, &lt;Constants 2&gt;]</FORMAT>
<FORMAT>EMvr3  &lt;Ex-T Coordinate Number&gt;, &lt;Start Point&gt;, &lt;End Point&gt;, &lt;Center Point&gt;  Type  &lt;Constants 1&gt;, &lt;Constants 2&gt;  &lt;Appended Condition&gt;</FORMAT>
<SAMPLE>EMvr3 1, P1, P2, P3</SAMPLE>
<SAMPLE>EMvr3 2, P1, J2, P3</SAMPLE>
<SAMPLE>EMvr3 2, P1, P2, P3 Wth M_Out(17)=1</SAMPLE>
<SAMPLE>EMvr3 4, P3, (Plt 1,5), P4 WthIf M_In(20)=1, M_Out(21)=1</SAMPLE>
<COMMENT>Carries out 3-dimensional circular interpolation movement along Ex-T from the start point to the end point on the arc composed of the center point, start point and end point.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>MvSpl</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>MvSpl  &lt;Spline Number&gt;, &lt;Designated Speed&gt;, &lt;Acceleration and Deceleration Distance&gt;</FORMAT>
<FORMAT>MvSpl  &lt;Spline Number&gt;, &lt;Designated Speed&gt;, &lt;Acceleration and Deceleration Distance&gt;, &lt;Frame Conversion&gt;</FORMAT>
<FORMAT>MvSpl  &lt;Spline Number&gt;, &lt;Designated Speed&gt;, &lt;Acceleration and Deceleration Distance&gt;, &lt;Frame Conversion&gt;, &lt;Posture Interpolation Type&gt;</FORMAT>
<FORMAT>MvSpl  &lt;Spline Number&gt;, &lt;Designated Speed&gt;, &lt;Acceleration and Deceleration Distance&gt;, &lt;Frame Conversion&gt;, &lt;Posture Interpolation Type&gt;, &lt;Filter Length&gt;</FORMAT>
<SAMPLE>MvSpl 1, 50, 30</SAMPLE>
<SAMPLE>MvSpl 1, 50, 30, 0</SAMPLE>
<SAMPLE>MvSpl 1, 50, 30, 1, 1</SAMPLE>
<SAMPLE>MvSpl 1, 50, 30, 2, 0, 120</SAMPLE>
<COMMENT>The spline interpolation is executed based on information registered in the spline file specified by the spline number.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>EMvSpl</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>EMvSpl  &lt;Ex-T Coordinate Number&gt;, &lt;Spline Number&gt;, &lt;Designated Speed&gt;, &lt;Acceleration and Deceleration Distance&gt;</FORMAT>
<FORMAT>EMvSpl  &lt;Ex-T Coordinate Number&gt;, &lt;Spline Number&gt;, &lt;Designated Speed&gt;, &lt;Acceleration and Deceleration Distance&gt;, &lt;Frame Conversion&gt;</FORMAT>
<FORMAT>EMvSpl  &lt;Ex-T Coordinate Number&gt;, &lt;Spline Number&gt;, &lt;Designated Speed&gt;, &lt;Acceleration and Deceleration Distance&gt;, &lt;Frame Conversion&gt;, &lt;Posture Interpolation Type&gt;</FORMAT>
<FORMAT>EMvSpl  &lt;Ex-T Coordinate Number&gt;, &lt;Spline Number&gt;, &lt;Designated Speed&gt;, &lt;Acceleration and Deceleration Distance&gt;, &lt;Frame Conversion&gt;, &lt;Posture Interpolation Type&gt;, &lt;Filter Length&gt;</FORMAT>
<SAMPLE>EMvSpl 1, 1, 50, 30</SAMPLE>
<SAMPLE>EMvSpl 1, 1, 50, 30, 0</SAMPLE>
<SAMPLE>EMvSpl 1, 1, 50, 30, 1, 1</SAMPLE>
<SAMPLE>EMvSpl 1, 1, 50, 30, 2, 0, 120</SAMPLE>
<COMMENT>The spline interpolation based on information registered in the spline file specified by the spline number executes along the Ex-T coordinate.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>MvTune</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>MvTune  &lt;Movement mode&gt;</FORMAT>
<SAMPLE>MvTune 1</SAMPLE>
<SAMPLE>MvTune 2</SAMPLE>
<SAMPLE>MvTune 3</SAMPLE>
<SAMPLE>MvTune 4</SAMPLE>
<COMMENT>The robot&apos;s performance improves when the movement mode of the robot is selected.</COMMENT>
<COMMENT>1:Standard mode</COMMENT>
<COMMENT>2:High-speed positioning mode</COMMENT>
<COMMENT>3:Trajectory priority mode</COMMENT>
<COMMENT>4:Vibration suppression mode</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Mxt</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>Mxt &lt;File No.&gt;, &lt;Reply position&gt;</FORMAT>
<FORMAT>Mxt &lt;File No.&gt;, &lt;Reply position&gt;, &lt;Filter time constant&gt;</FORMAT>
<SAMPLE>Mxt 1,1</SAMPLE>
<SAMPLE>Mxt 1,1,50</SAMPLE>
<COMMENT>The absolute position data is retrieved from an external source at each controller control time,and the robot is directly moved.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>NVClose</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>NVClose</FORMAT>
<FORMAT>NVClose #&lt;Vision sensor number&gt;</FORMAT>
<FORMAT>NVClose #&lt;Vision sensor number&gt;, [#&lt;Vision sensor number&gt;[,#&lt;Vision sensor number&gt;]]</FORMAT>
<SAMPLE>NVClose</SAMPLE>
<SAMPLE>NVClose #1</SAMPLE>
<SAMPLE>NVClose #1,#3</SAMPLE>
<COMMENT>Cuts the line with the specified vision sensor.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>NVIn</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>NVIn #&lt;Vision sensor number&gt;, [&lt;Vision program name&gt;], &lt;Recognition count cell&gt;, &lt;Start cell&gt;, &lt;End cell&gt;, &lt;Type&gt;, [&lt;Timeout&gt;]</FORMAT>
<FORMAT>NVIn #&lt;Vision sensor number&gt;, &quot;&quot;, &lt;Recognition count cell&gt;, &lt;Start cell&gt;, &lt;End cell&gt;, &lt;Type&gt;, [&lt;Timeout&gt;]</FORMAT>
<FORMAT>NVIn #&lt;Vision sensor number&gt;, [&lt;Vision program name&gt;], &lt;Recognition count cell&gt;, &lt;Start cell&gt;, &lt;End cell&gt;, &lt;Type&gt;</FORMAT>
<FORMAT>NVIn #&lt;Vision sensor number&gt;, &quot;&quot;, &lt;Recognition count cell&gt;, &lt;Start cell&gt;, &lt;End cell&gt;, &lt;Type&gt;</FORMAT>
<SAMPLE>NVIn #1,&quot;TEST&quot;,&quot;E76&quot;,&quot;J81&quot;,&quot;L84&quot;,0,10</SAMPLE>
<SAMPLE>NVIn #1,&quot;&quot;,&quot;E76&quot;,&quot;J81&quot;,&quot;L84&quot;,0,10</SAMPLE>
<SAMPLE>NVIn #1,&quot;TEST&quot;,&quot;E76&quot;,&quot;J81&quot;,&quot;L84&quot;,0</SAMPLE>
<SAMPLE>NVIn #1,&quot;&quot;,&quot;E76&quot;,&quot;J81&quot;,&quot;L84&quot;,0</SAMPLE>
<COMMENT>Receives the results of the recognition by the vision sensor.</COMMENT>
<COMMENT>The data received from the vision sensor is stored in the robot controller robot status variables.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>NVLoad</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>NVLoad #&lt;Vision sensor number&gt;, &lt;Vision program name&gt;</FORMAT>
<SAMPLE>NVLoad #1,&quot;TEST&quot;</SAMPLE>
<COMMENT>Loads the specified vision program into the vision sensor.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>NVOpen</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>NVOpen &quot;&lt;COM number&gt;&quot; AS #&lt;Vision sensor number&gt;</FORMAT>
<SAMPLE>NVOpen &quot;COM2:&quot; AS #1</SAMPLE>
<COMMENT>Connects with the specified vision sensor and logs on to that vision sensor.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>NVPst</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>NVPst #&lt;Vision sensor number&gt;, &lt;Vision program name&gt;, &lt;Recognition count cell&gt;, &lt;Start cell&gt;, &lt;End cell&gt;, &lt;Type&gt;, [&lt;Timeout&gt;]</FORMAT>
<FORMAT>NVPst #&lt;Vision sensor number&gt;, &lt;Vision program name&gt;, &lt;Recognition count cell&gt;, &lt;Start cell&gt;, &lt;End cell&gt;, &lt;Type&gt;</FORMAT>
<SAMPLE>NVPst #1,&quot;TEST&quot;,&quot;E76&quot;,&quot;J81&quot;,&quot;L84&quot;,0,10</SAMPLE>
<SAMPLE>NVPst #1,&quot;TEST&quot;,&quot;E76&quot;,&quot;J81&quot;,&quot;L84&quot;,0</SAMPLE>
<COMMENT>Starts the specified vision program and obtains the results.</COMMENT>
<COMMENT>The data received from the vision sensor is stored in the robot controller robot status variables.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>NVRun</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>NVRun #&lt;Vision sensor number&gt;, &lt;Vision program name&gt;</FORMAT>
<SAMPLE>NVRun #1,&quot;TEST&quot;</SAMPLE>
<COMMENT>Starts the specified vision program.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>NVTrg</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>NVTrg #&lt;Vision sensor number&gt;, &lt;Delay time&gt;, &lt;encoder 1 value read-out variable&gt;</FORMAT>
<FORMAT>NVTrg #&lt;Vision sensor number&gt;, &lt;Delay time&gt;, &lt;encoder 1 value read-out variable&gt;, &lt;encoder 2&gt;</FORMAT>
<FORMAT>NVTrg #&lt;Vision sensor number&gt;, &lt;Delay time&gt;, &lt;encoder 1 value read-out variable&gt;, &lt;encoder 2&gt;, &lt;encoder 3&gt;</FORMAT>
<FORMAT>NVTrg #&lt;Vision sensor number&gt;, &lt;Delay time&gt;, &lt;encoder 1 value read-out variable&gt;, &lt;encoder 2&gt;, &lt;encoder 3&gt;, &lt;encoder 4&gt;</FORMAT>
<FORMAT>NVTrg #&lt;Vision sensor number&gt;, &lt;Delay time&gt;, &lt;encoder 1 value read-out variable&gt;, &lt;encoder 2&gt;, &lt;encoder 3&gt;, &lt;encoder 4&gt;, &lt;encoder 5&gt;</FORMAT>
<FORMAT>NVTrg #&lt;Vision sensor number&gt;, &lt;Delay time&gt;, &lt;encoder 1 value read-out variable&gt;, &lt;encoder 2&gt;, &lt;encoder 3&gt;, &lt;encoder 4&gt;, &lt;encoder 5&gt;, &lt;encoder 6&gt;</FORMAT>
<FORMAT>NVTrg #&lt;Vision sensor number&gt;, &lt;Delay time&gt;, &lt;encoder 1 value read-out variable&gt;, &lt;encoder 2&gt;, &lt;encoder 3&gt;, &lt;encoder 4&gt;, &lt;encoder 5&gt;, &lt;encoder 6&gt;, &lt;encoder 7&gt;</FORMAT>
<FORMAT>NVTrg #&lt;Vision sensor number&gt;, &lt;Delay time&gt;, &lt;encoder 1 value read-out variable&gt;, &lt;encoder 2&gt;, &lt;encoder 3&gt;, &lt;encoder 4&gt;, &lt;encoder 5&gt;, &lt;encoder 6&gt;, &lt;encoder 7&gt;, &lt;encoder 8&gt;</FORMAT>
<SAMPLE>NVTrg #1,0,ME1#</SAMPLE>
<SAMPLE>NVTrg #1,0,ME1#,ME2#</SAMPLE>
<SAMPLE>NVTrg #1,0,ME1#,ME2#,ME3#</SAMPLE>
<SAMPLE>NVTrg #1,0,ME1#,ME2#,ME3#,ME4#</SAMPLE>
<SAMPLE>NVTrg #1,0,ME1#,ME2#,ME3#,ME4#,ME5#</SAMPLE>
<SAMPLE>NVTrg #1,0,ME1#,ME2#,ME3#,ME4#,ME5#,ME6#</SAMPLE>
<SAMPLE>NVTrg #1,0,ME1#,ME2#,ME3#,ME4#,ME5#,ME6#,ME7#</SAMPLE>
<SAMPLE>NVTrg #1,0,ME1#,ME2#,ME3#,ME4#,ME5#,ME6#,ME7#,ME8#</SAMPLE>
<COMMENT>Requests the specified vision program to capture an image and the value of an external encoder is read.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Oadl Off</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>Oadl  &lt;On/Off&gt;</FORMAT>
<SAMPLE>Oadl Off</SAMPLE>
<COMMENT>Automatically sets the optimum acceleration/deceleration according to the robot hand&apos;s load state (Optimum acceleration/deceleration control).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Oadl On</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>Oadl  &lt;On/Off&gt;</FORMAT>
<SAMPLE>Oadl On</SAMPLE>
<COMMENT>Automatically sets the optimum acceleration/deceleration according to the robot hand&apos;s load state (Optimum acceleration/deceleration control).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Off</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>&lt;Command&gt; Off</FORMAT>
<SAMPLE>Off</SAMPLE>
<COMMENT>Disable the function. </COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>On</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>&lt;Command&gt; On</FORMAT>
<SAMPLE>On</SAMPLE>
<COMMENT>Enable the function. </COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>On Com GoSub</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>On  Com  GoSub  &lt;Call Destination&gt;</FORMAT>
<FORMAT>On  Com(&lt;File No.&gt;)  GoSub &lt;Call Destination&gt;</FORMAT>
<SAMPLE>On Com GoSub *RECV</SAMPLE>
<SAMPLE>On Com(1) GoSub *RECV</SAMPLE>
<COMMENT>Defines the starting line of a branching subroutine when an interrupt is generated from a designated communication line.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>On GoSub</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>On  &lt;Terminology&gt;  GoSub  &lt;Expression&gt;</FORMAT>
<FORMAT>On  &lt;Terminology&gt;  GoSub  &lt;Expression&gt;, &lt;Call Destination&gt;...</FORMAT>
<SAMPLE>On M1 GoSub *SUB1</SAMPLE>
<SAMPLE>On M1 GoSub *SUB1, *SUB2</SAMPLE>
<COMMENT>Calls up the subroutine at the label corresponding to the value.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>On Goto</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>On  &lt;Expression&gt;  Goto  &lt;Branch Destination&gt;</FORMAT>
<FORMAT>On  &lt;Expression&gt;  Goto  &lt;Branch Destination&gt;, &lt;Branch Destination&gt;...</FORMAT>
<SAMPLE>On M1 Goto *SUB1</SAMPLE>
<SAMPLE>On M1 Goto *SUB1, *SUB2</SAMPLE>
<COMMENT>Branches to the line with the label that corresponds to the designated value.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Open</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Open  &quot;&lt;File Descriptor&gt;&quot;  As  [#]&lt;File No.&gt;</FORMAT>
<FORMAT>Open  &quot;&lt;File Descriptor&gt;&quot;  For  &lt;Mode&gt;  As [#]&lt;File No.&gt;</FORMAT>
<SAMPLE>Open &quot;COM1:&quot; As #1</SAMPLE>
<SAMPLE>Open &quot;temp.txt&quot; For Append As #1</SAMPLE>
<SAMPLE>Open &quot;temp.txt&quot; For Input As #1</SAMPLE>
<SAMPLE>Open &quot;temp.txt&quot; For Output As #1</SAMPLE>
<COMMENT>Open the file or communication lines.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Ovrd</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>Ovrd  &lt;Override&gt;</FORMAT>
<SAMPLE>Ovrd 50</SAMPLE>
<COMMENT>This instruction specifies the speed of the robot movement as a value in the range from 1 to 100%.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Plt</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Plt  &lt;Pallet No.&gt;, &lt;Grid No.&gt;</FORMAT>
<SAMPLE>PLACE = Plt 1, M1</SAMPLE>
<COMMENT>Calculates the position of grid in the pallet.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>PIChng</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>PIChng &lt;Palette No&gt;, &lt;Stacking Info No&gt;</FORMAT>
<FORMAT>PIChng &lt;Palette No&gt;, &lt;Stacking Info No&gt;, &lt;Work Size L&gt;, &lt;Work Size W&gt;, &lt;Work Size H&gt;</FORMAT>
<FORMAT>PIChng &lt;Palette No&gt;, &lt;Stacking Info No&gt;, &lt;Work Size L&gt;, &lt;Work Size W&gt;, &lt;Work Size H&gt;, &lt;Palette Size L&gt;, &lt;Palette Size W&gt;, &lt;Palette Size H&gt;</FORMAT>
<FORMAT>PIChng &lt;Palette No&gt;, &lt;Stacking Info No&gt;, &lt;Work Size L&gt;, &lt;Work Size W&gt;, &lt;Work Size H&gt;, &lt;Palette Size L&gt;, &lt;Palette Size W&gt;, &lt;Palette Size H&gt;, &lt;Space L&gt;, &lt;Space W&gt;</FORMAT>
<SAMPLE>PIChng 1, 1</SAMPLE>
<SAMPLE>PIChng 1, 1, 200, 300, 100</SAMPLE>
<SAMPLE>PIChng 2, 10, 200, 300, 100, 1200, 800, 100</SAMPLE>
<SAMPLE>PIChng 3, 50, 200, 300, 100, 1200, 800, 100, 3, 3</SAMPLE>
<COMMENT>Expand the stacking information to a variable.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Prec Off</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>Prec  &lt;On/Off&gt;</FORMAT>
<SAMPLE>Prec Off</SAMPLE>
<COMMENT>This instruction is used to improve the motion path tracking.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Prec On</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>Prec  &lt;On/Off&gt;</FORMAT>
<SAMPLE>Prec On</SAMPLE>
<COMMENT>This instruction is used to improve the motion path tracking.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Print</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Print  #&lt;File No.&gt;  , &lt;Expression&gt;</FORMAT>
<FORMAT>Print  #&lt;File No.&gt;  , &lt;Expression&gt;, &lt;Expression&gt;...</FORMAT>
<FORMAT>Print  #&lt;File No.&gt;  , &lt;Expression&gt;; &lt;Expression&gt;...</FORMAT>
<SAMPLE>Print #1, &quot;***Print TEST***&quot;</SAMPLE>
<SAMPLE>Print #1, &quot;MDATA=&quot;, MDATA</SAMPLE>
<SAMPLE>Print #1, &quot;***TEST &quot;; &quot;END***&quot;</SAMPLE>
<COMMENT>Outputs data into a file (including communication lines).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Priority</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Priority  &lt;Number of executed lines&gt;</FORMAT>
<FORMAT>Priority  &lt;Number of executed lines&gt;, &lt;Slot number&gt;</FORMAT>
<SAMPLE>Priority 3</SAMPLE>
<SAMPLE>Priority 4, 2</SAMPLE>
<COMMENT>This instruction specifies the priority (number of lines executed in priority) when programs are executed in multitask operation.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>RelM</RSV_NAME>
<CATEGORY>3</CATEGORY>
<FORMAT>RelM</FORMAT>
<SAMPLE>RelM</SAMPLE>
<COMMENT>It is used to release the mechanism obtained by the GetM instruction.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Rem</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Rem  </FORMAT>
<FORMAT>Rem  &lt;Comment&gt;</FORMAT>
<FORMAT>&apos;  </FORMAT>
<FORMAT>&apos;  &lt;Comment&gt;</FORMAT>
<SAMPLE>Rem</SAMPLE>
<SAMPLE>Rem ***MAIN PROGRAM***</SAMPLE>
<SAMPLE>&apos;</SAMPLE>
<SAMPLE>&apos; ***MAIN PROGRAM***</SAMPLE>
<COMMENT>Uses the following character strings as comments.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Reset Err</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Reset Err</FORMAT>
<SAMPLE>If M_ERR=1 Then Reset Err</SAMPLE>
<COMMENT>This instruction resets an error generated in the robot controller.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Return</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Return</FORMAT>
<FORMAT>Return &lt;Return Designation No.&gt;</FORMAT>
<SAMPLE>Return</SAMPLE>
<SAMPLE>Return 0</SAMPLE>
<SAMPLE>Return 1</SAMPLE>
<COMMENT>When returning from a normal subroutine returns to the next line after the GoSub.</COMMENT>
<COMMENT>When returning from an interrupt processing subroutine, returns either to the line where the interrupt was generated, or to the next line.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Select</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Select  &lt;Condition&gt;</FORMAT>
<FORMAT>Case  &lt;Expression&gt;</FORMAT>
<FORMAT>[&lt;Process&gt;]</FORMAT>
<FORMAT>Break</FORMAT>
<FORMAT>..</FORMAT>
<FORMAT>Default</FORMAT>
<FORMAT>[&lt;Process&gt;]</FORMAT>
<FORMAT>Break</FORMAT>
<FORMAT>End  Select</FORMAT>
<SAMPLE>Select MCNT</SAMPLE>
<SAMPLE>Case Is &lt;= 10</SAMPLE>
<SAMPLE>Break</SAMPLE>
<SAMPLE>Case 11</SAMPLE>
<SAMPLE>Case 12 To 18</SAMPLE>
<SAMPLE>Default</SAMPLE>
<SAMPLE>End Select</SAMPLE>
<COMMENT>Executes one of multiple statement blocks according to the condition expression value.</COMMENT>
<END_NAME>End Select</END_NAME>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Case</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Select  &lt;Condition&gt;</FORMAT>
<FORMAT>Case  &lt;Expression&gt;</FORMAT>
<FORMAT>[&lt;Process&gt;]</FORMAT>
<FORMAT>Break</FORMAT>
<FORMAT>..</FORMAT>
<FORMAT>Default</FORMAT>
<FORMAT>[&lt;Process&gt;]</FORMAT>
<FORMAT>Break</FORMAT>
<FORMAT>End  Select</FORMAT>
<SAMPLE>Select MCNT</SAMPLE>
<SAMPLE>Case Is &lt;= 10</SAMPLE>
<SAMPLE>Break</SAMPLE>
<SAMPLE>Case 11</SAMPLE>
<SAMPLE>Case 12 To 18</SAMPLE>
<SAMPLE>Default</SAMPLE>
<SAMPLE>End Select</SAMPLE>
<COMMENT>Executes one of multiple statement blocks according to the condition expression value.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Is</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Select  &lt;Condition&gt;</FORMAT>
<FORMAT>Case  &lt;Expression&gt;</FORMAT>
<FORMAT>[&lt;Process&gt;]</FORMAT>
<FORMAT>Break</FORMAT>
<FORMAT>..</FORMAT>
<FORMAT>Default</FORMAT>
<FORMAT>[&lt;Process&gt;]</FORMAT>
<FORMAT>Break</FORMAT>
<FORMAT>End  Select</FORMAT>
<SAMPLE>Select MCNT</SAMPLE>
<SAMPLE>Case Is &lt;= 10</SAMPLE>
<SAMPLE>Break</SAMPLE>
<SAMPLE>Case 11</SAMPLE>
<SAMPLE>Case 12 To 18</SAMPLE>
<SAMPLE>Default</SAMPLE>
<SAMPLE>End Select</SAMPLE>
<COMMENT>Executes one of multiple statement blocks according to the condition expression value.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>SplWrt</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>SplWrt &lt;Spline Number&gt;, &lt;File Name&gt;</FORMAT>
<FORMAT>SplWrt &lt;Spline Number&gt;, &lt;File Name&gt;, &lt;Operation Mode&gt;</FORMAT>
<FORMAT>SplWrt &lt;Spline Number&gt;, &lt;File Name&gt;, &lt;Operation Mode&gt;, &lt;Spline Cancel Angle&gt;</FORMAT>
<FORMAT>SplWrt &lt;Spline Number&gt;, &lt;File Name&gt;, &lt;Operation Mode&gt;, &lt;Spline Cancel Angle&gt;, &lt;Block Length Ratio&gt;</FORMAT>
<FORMAT>SplWrt &lt;Spline Number&gt;, &lt;File Name&gt;, &lt;Operation Mode&gt;, &lt;Spline Cancel Angle&gt;, &lt;Block Length Ratio&gt;, &lt;Ex-T Coordinate Number&gt;</FORMAT>
<FORMAT>SplWrt &lt;Spline Number&gt;, &lt;File Name&gt;, &lt;Operation Mode&gt;, &lt;Spline Cancel Angle&gt;, &lt;Block Length Ratio&gt;, &lt;Ex-T Coordinate Number&gt;, &lt;File Version&gt;</FORMAT>
<SAMPLE>SplWrt 1, &quot;01.csv&quot;</SAMPLE>
<SAMPLE>SplWrt 2, &quot;02.csv&quot;, 1</SAMPLE>
<SAMPLE>SplWrt 3, &quot;03.csv&quot;, 0, 100</SAMPLE>
<SAMPLE>SplWrt 4, &quot;04.csv&quot;, 0, 120, 10</SAMPLE>
<SAMPLE>SplWrt 5, &quot;05.csv&quot;, 0, 120, 8, 1</SAMPLE>
<SAMPLE>SplWrt 6, &quot;06.csv&quot;, 0, 120, 8, 1, 2</SAMPLE>
<COMMENT>A spline file is created based on the path point information which was registered with the specified file.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>SplFWrt</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>SplFWrt &lt;Spline Number&gt;, &lt;Position 1&gt;, &lt;Position 2&gt;, &lt;Position 3&gt;, &lt;Position 4&gt;, &lt;Position 5&gt;, &lt;Position 6&gt;</FORMAT>
<SAMPLE>SplWrt 3, 乬03.csv乭, 0, 100</SAMPLE>
<COMMENT>Frame transformation coordinate data is registered with the specified spline file.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>To</RSV_NAME>
<CATEGORY>8</CATEGORY>
<FORMAT>Select  &lt;Condition&gt;</FORMAT>
<FORMAT>Case  &lt;Numerical value&gt; To &lt;Numerical value&gt;</FORMAT>
<FORMAT>[&lt;Process&gt;]</FORMAT>
<FORMAT>Break</FORMAT>
<FORMAT>..</FORMAT>
<FORMAT>Default</FORMAT>
<FORMAT>[&lt;Process&gt;]</FORMAT>
<FORMAT>Break</FORMAT>
<FORMAT>End  Select</FORMAT>
<SAMPLE>Select MCNT</SAMPLE>
<SAMPLE>Case Is &lt;= 10</SAMPLE>
<SAMPLE>Break</SAMPLE>
<SAMPLE>Case 11</SAMPLE>
<SAMPLE>Case 12 To 18</SAMPLE>
<SAMPLE>Default</SAMPLE>
<SAMPLE>End Select</SAMPLE>
<COMMENT>Executes one of multiple statement blocks according to the condition expression value.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Break</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Select  &lt;Condition&gt;</FORMAT>
<FORMAT>Case  &lt;Expression&gt;</FORMAT>
<FORMAT>[&lt;Process&gt;]</FORMAT>
<FORMAT>Break</FORMAT>
<FORMAT>..</FORMAT>
<FORMAT>Default</FORMAT>
<FORMAT>[&lt;Process&gt;]</FORMAT>
<FORMAT>Break</FORMAT>
<FORMAT>End  Select</FORMAT>
<SAMPLE>Select MCNT</SAMPLE>
<SAMPLE>Case Is &lt;= 10</SAMPLE>
<SAMPLE>Break</SAMPLE>
<SAMPLE>Case 11</SAMPLE>
<SAMPLE>Case 12 To 18</SAMPLE>
<SAMPLE>Default</SAMPLE>
<SAMPLE>End Select</SAMPLE>
<COMMENT>Executes one of multiple statement blocks according to the condition expression value.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Default</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Select  &lt;Condition&gt;</FORMAT>
<FORMAT>Case  &lt;Expression&gt;</FORMAT>
<FORMAT>[&lt;Process&gt;]</FORMAT>
<FORMAT>Break</FORMAT>
<FORMAT>..</FORMAT>
<FORMAT>Default</FORMAT>
<FORMAT>[&lt;Process&gt;]</FORMAT>
<FORMAT>Break</FORMAT>
<FORMAT>End  Select</FORMAT>
<SAMPLE>Select MCNT</SAMPLE>
<SAMPLE>Case Is &lt;= 10</SAMPLE>
<SAMPLE>Break</SAMPLE>
<SAMPLE>Case 11</SAMPLE>
<SAMPLE>Case 12 To 18</SAMPLE>
<SAMPLE>Default</SAMPLE>
<SAMPLE>End Select</SAMPLE>
<COMMENT>Executes one of multiple statement blocks according to the condition expression value.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>End Select</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Select  &lt;Condition&gt;</FORMAT>
<FORMAT>Case  &lt;Expression&gt;</FORMAT>
<FORMAT>[&lt;Process&gt;]</FORMAT>
<FORMAT>Break</FORMAT>
<FORMAT>..</FORMAT>
<FORMAT>Default</FORMAT>
<FORMAT>[&lt;Process&gt;]</FORMAT>
<FORMAT>Break</FORMAT>
<FORMAT>End  Select</FORMAT>
<SAMPLE>Select MCNT</SAMPLE>
<SAMPLE>Case Is &lt;= 10</SAMPLE>
<SAMPLE>Break</SAMPLE>
<SAMPLE>Case 11</SAMPLE>
<SAMPLE>Case 12 To 18</SAMPLE>
<SAMPLE>Default</SAMPLE>
<SAMPLE>End Select</SAMPLE>
<COMMENT>Executes one of multiple statement blocks according to the condition expression value.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Servo On</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>Servo  &lt;On/Off&gt;</FORMAT>
<SAMPLE>Servo On</SAMPLE>
<COMMENT>Controls the On and Off of the servo motor power.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Servo Off</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>Servo  &lt;On/Off&gt;</FORMAT>
<SAMPLE>Servo Off</SAMPLE>
<COMMENT>Controls the On and Off of the servo motor power.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>SetCalFrm</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>SetCalFrm  &lt;Position 1&gt;, &lt;Position 2&gt;, &lt;Position 3&gt;, &lt;Position 4&gt;, &lt;Position 5&gt;, &lt;Position 6&gt;</FORMAT>
<SAMPLE>SetCalFrm P1, P2, P3, P4, P5, P6</SAMPLE>
<COMMENT>The reference and correction coordinate used by the frame conversion are set.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>SetMoTrg</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>SetMoTrg  &lt;Mo-Trigger number&gt;</FORMAT>
<SAMPLE>SetMoTrg 1</SAMPLE>
<SAMPLE>SetMoTrg 0</SAMPLE>
<COMMENT>Specify the Effective or invalidity of Mo-Trigger.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Skip</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Skip</FORMAT>
<SAMPLE>Mov P1 WthIf M_In(17)=1, Skip</SAMPLE>
<COMMENT>Transfers control of the program to the next line.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Spd</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>Spd  &lt;Designated Speed&gt;</FORMAT>
<FORMAT>Spd  M_NSpd (Optimum speed control mode)</FORMAT>
<SAMPLE>Spd 100</SAMPLE>
<SAMPLE>Spd M_NSpd</SAMPLE>
<COMMENT>Designates the speed for the robot&apos;s linear and circular movements.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>SpdOpt Off</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>SpdOpt &lt;On/Off&gt;</FORMAT>
<SAMPLE>SpdOpt Off</SAMPLE>
<COMMENT>Designates the speed for the robot&apos;s linear and circular movements.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>SpdOpt On</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>SpdOpt &lt;On/Off&gt;</FORMAT>
<SAMPLE>SpdOpt On</SAMPLE>
<COMMENT>Designates the speed for the robot&apos;s linear and circular movements.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Title</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Title  &quot;&lt;Character String&gt;&quot;</FORMAT>
<SAMPLE>Title &quot;ROBOT Loader Program&quot;</SAMPLE>
<COMMENT>Appends the title to the program.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Tool</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>Tool  &lt;Tool Conversion Data&gt;</FORMAT>
<SAMPLE>Tool (100, 0, 100, 0, 0, 0)</SAMPLE>
<COMMENT>Designates the tool conversion data.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Torq</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>Torq  &lt;Axis No.&gt;, &lt;Torque Limitation Rate&gt;</FORMAT>
<SAMPLE>Torq 3, 10</SAMPLE>
<COMMENT>Designates the torque limit for each axis.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>TrBase</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>TrBase &lt;Reference position data&gt;</FORMAT>
<FORMAT>TrBase &lt;Reference position data&gt;, &lt;Encoder number&gt;</FORMAT>
<SAMPLE>TrBase P0</SAMPLE>
<SAMPLE>TrBase P0,MENC#</SAMPLE>
<COMMENT>Specify the workpiece coordinate system origin and the logic number of an external encoder used in tracking operation.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>TrClr</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>TrClr</FORMAT>
<FORMAT>TrClr [&lt;Buffer number&gt;]</FORMAT>
<SAMPLE>TrClr</SAMPLE>
<SAMPLE>TrClr 1</SAMPLE>
<COMMENT>Clears the tracking data buffer.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Trk Off</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Trk On, &lt;Measurement position data&gt;, &lt;Encoder data&gt;</FORMAT>
<FORMAT>Trk On, &lt;Measurement position data&gt;, &lt;Encoder data&gt;, &lt;Reference position data&gt;</FORMAT>
<FORMAT>Trk On, &lt;Measurement position data&gt;, &lt;Encoder data&gt;, &lt;Reference position data&gt;, &lt;Encoder number&gt;</FORMAT>
<FORMAT>Trk Off</FORMAT>
<SAMPLE>Trk Off</SAMPLE>
<COMMENT>The robot works while following to the movement of the conveyor.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Trk On</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Trk On, &lt;Measurement position data&gt;, &lt;Encoder data&gt;</FORMAT>
<FORMAT>Trk On, &lt;Measurement position data&gt;, &lt;Encoder data&gt;, &lt;Reference position data&gt;</FORMAT>
<FORMAT>Trk On, &lt;Measurement position data&gt;, &lt;Encoder data&gt;, &lt;Reference position data&gt;, &lt;Encoder number&gt;</FORMAT>
<FORMAT>Trk Off</FORMAT>
<SAMPLE>Trk On,P1,MENC#</SAMPLE>
<SAMPLE>Trk On,P1,MENC#,P0</SAMPLE>
<SAMPLE>Trk On,P1,MENC#,P0,MENCNO%</SAMPLE>
<COMMENT>The robot works while following to the movement of the conveyor.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>TrkArc</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>TrkArc &lt;Condition number&gt;, &lt;Encoder number&gt;, &lt;Circular arc position 1&gt;, &lt;Circular arc position 2&gt;, &lt;Circular arc position 3&gt;</FORMAT>
<SAMPLE>TrkArc 1, 1, P_107(1), P_108(1), P_109(1)</SAMPLE>
<COMMENT>Conveyor information for a circular arc tracking is set.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>TrkChk</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>TrkChk &lt;Condition number&gt; , &lt;Starting position&gt; , &lt;Waiting position&gt; , &lt;Branch Destination&gt;</FORMAT>
<FORMAT>TrkChk &lt;Condition number&gt; , &lt;Starting position&gt; , , &lt;Branch Destination&gt;</FORMAT>
<SAMPLE>TrkChk 1, P1, PWAIT, *LTRST</SAMPLE>
<SAMPLE>TrkChk 1, P1, , *LTRST</SAMPLE>
<COMMENT>This command checks the workpiece state of specified &lt;Condition number&gt;.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>TrkMv Off</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>TrkMv仩On, &lt;Tracking upper position&gt; [, &lt;Interrupt number&gt;, &lt;Call Destination&gt;]</FORMAT>
<FORMAT>TrkMv仩On, &lt;Tracking upper position&gt;</FORMAT>
<FORMAT>TrkMv仩Off</FORMAT>
<SAMPLE>TrkMv Off</SAMPLE>
<COMMENT>This command collectively executes the interrupt processing, the tracking starting, and move to the tracking upper position.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>TrkMv On</RSV_NAME>
<CATEGORY>0</CATEGORY>
<FORMAT>TrkMv仩On, &lt;Tracking upper position&gt; [, &lt;Interrupt number&gt;, &lt;Call Destination&gt;]</FORMAT>
<FORMAT>TrkMv仩On, &lt;Tracking upper position&gt;</FORMAT>
<FORMAT>TrkMv仩Off</FORMAT>
<SAMPLE>TrkMv On, PGTUP, 1, *S91STOP</SAMPLE>
<SAMPLE>TrkMv On, PGTUP</SAMPLE>
<COMMENT>This command collectively executes the interrupt processing, the tracking starting, and move to the tracking upper position.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>TrkWait</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>TrkWait [&lt;Branch Destination&gt;]</FORMAT>
<FORMAT>TrkWait</FORMAT>
<SAMPLE>TrkWait *LBFCHK</SAMPLE>
<SAMPLE>TrkWait</SAMPLE>
<COMMENT>This command is waited for until the workpiece enters the range.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>TrkFine Off</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>TrkFine On</FORMAT>
<FORMAT>TrkFine Off</FORMAT>
<SAMPLE>TrkFine Off</SAMPLE>
<COMMENT>The accuracy of the tracking function improves</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>TrkFine On</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>TrkFine On</FORMAT>
<FORMAT>TrkFine Off</FORMAT>
<SAMPLE>TrkFine On</SAMPLE>
<COMMENT>The accuracy of the tracking function improves</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>TrkTrg</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>TrkTrg #&lt;Vision number&gt;, &lt;SKIP input number&gt;, &lt;encoder 1 value read-out variable&gt;</FORMAT>
<FORMAT>TrkTrg #&lt;Vision number&gt;, &lt;SKIP input number&gt;, &lt;encoder 1 value read-out variable&gt;, &lt;enc. 2&gt;</FORMAT>
<FORMAT>TrkTrg #&lt;Vision number&gt;, &lt;SKIP input number&gt;, &lt;encoder 1 value read-out variable&gt;, &lt;enc. 2&gt;, &lt;enc. 3&gt;</FORMAT>
<FORMAT>TrkTrg #&lt;Vision number&gt;, &lt;SKIP input number&gt;, &lt;encoder 1 value read-out variable&gt;, &lt;enc. 2&gt;, &lt;enc. 3&gt;, &lt;enc. 4&gt;</FORMAT>
<FORMAT>TrkTrg #&lt;Vision number&gt;, &lt;SKIP input number&gt;, &lt;encoder 1 value read-out variable&gt;, &lt;enc. 2&gt;, &lt;enc. 3&gt;, &lt;enc. 4&gt;, &lt;enc. 5&gt;</FORMAT>
<FORMAT>TrkTrg #&lt;Vision number&gt;, &lt;SKIP input number&gt;, &lt;encoder 1 value read-out variable&gt;, &lt;enc. 2&gt;, &lt;enc. 3&gt;, &lt;enc. 4&gt;, &lt;enc. 5&gt;, &lt;enc. 6&gt;</FORMAT>
<FORMAT>TrkTrg #&lt;Vision number&gt;, &lt;SKIP input number&gt;, &lt;encoder 1 value read-out variable&gt;, &lt;enc. 2&gt;, &lt;enc. 3&gt;, &lt;enc. 4&gt;, &lt;enc. 5&gt;, &lt;enc. 6&gt;, &lt;enc. 7&gt;</FORMAT>
<FORMAT>TrkTrg #&lt;Vision number&gt;, &lt;SKIP input number&gt;, &lt;encoder 1 value read-out variable&gt;, &lt;enc. 2&gt;, &lt;enc. 3&gt;, &lt;enc. 4&gt;, &lt;enc. 5&gt;, &lt;enc. 6&gt;, &lt;enc. 7&gt;, &lt;enc. 8&gt;</FORMAT>
<SAMPLE>TrkTrg #1,2,ME1#</SAMPLE>
<SAMPLE>TrkTrg #1,2,ME1#,ME2#</SAMPLE>
<SAMPLE>TrkTrg #1,2,ME1#,ME2#,ME3#</SAMPLE>
<SAMPLE>TrkTrg #1,2,ME1#,ME2#,ME3#,ME4#</SAMPLE>
<SAMPLE>TrkTrg #1,2,ME1#,ME2#,ME3#,ME4#,ME5#</SAMPLE>
<SAMPLE>TrkTrg #1,2,ME1#,ME2#,ME3#,ME4#,ME5#,ME6#</SAMPLE>
<SAMPLE>TrkTrg #1,2,ME1#,ME2#,ME3#,ME4#,ME5#,ME6#,ME7#</SAMPLE>
<SAMPLE>TrkTrg #1,2,ME1#,ME2#,ME3#,ME4#,ME5#,ME6#,ME7#,ME8#</SAMPLE>
<COMMENT>Requests the specified vision program to capture an image and the value of an external encoder is read.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>TrOut</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>TrOut &lt;Output number&gt;, &lt;encoder 1 value read-out variable&gt;</FORMAT>
<FORMAT>TrOut &lt;Output number&gt;, &lt;encoder 1 value read-out variable&gt;, &lt;encoder 2&gt;</FORMAT>
<FORMAT>TrOut &lt;Output number&gt;, &lt;encoder 1 value read-out variable&gt;, &lt;encoder 2&gt;, &lt;encoder 3&gt;</FORMAT>
<FORMAT>TrOut &lt;Output number&gt;, &lt;encoder 1 value read-out variable&gt;, &lt;encoder 2&gt;, &lt;encoder 3&gt;, &lt;encoder 4&gt;</FORMAT>
<FORMAT>TrOut &lt;Output number&gt;, &lt;encoder 1 value read-out variable&gt;, &lt;encoder 2&gt;, &lt;encoder 3&gt;, &lt;encoder 4&gt;, &lt;encoder 5&gt;</FORMAT>
<FORMAT>TrOut &lt;Output number&gt;, &lt;encoder 1 value read-out variable&gt;, &lt;encoder 2&gt;, &lt;encoder 3&gt;, &lt;encoder 4&gt;, &lt;encoder 5&gt;, &lt;encoder 6&gt;</FORMAT>
<FORMAT>TrOut &lt;Output number&gt;, &lt;encoder 1 value read-out variable&gt;, &lt;encoder 2&gt;, &lt;encoder 3&gt;, &lt;encoder 4&gt;, &lt;encoder 5&gt;, &lt;encoder 6&gt;, &lt;encoder 7&gt;</FORMAT>
<FORMAT>TrOut &lt;Output number&gt;, &lt;encoder 1 value read-out variable&gt;, &lt;encoder 2&gt;, &lt;encoder 3&gt;, &lt;encoder 4&gt;, &lt;encoder 5&gt;, &lt;encoder 6&gt;, &lt;encoder 7&gt;, &lt;encoder 8&gt;</FORMAT>
<SAMPLE>TrOut 11,ME1#</SAMPLE>
<SAMPLE>TrOut 20,ME1#,ME2#</SAMPLE>
<SAMPLE>TrOut 25,ME1#,ME2#,ME3#</SAMPLE>
<SAMPLE>TrOut 6000,ME1#,ME2#,ME3#,ME4#</SAMPLE>
<SAMPLE>TrOut 8,ME1#,ME2#,ME3#,ME4#,ME5#</SAMPLE>
<SAMPLE>TrOut 15,ME1#,ME2#,ME3#,ME4#,ME5#,ME6#</SAMPLE>
<SAMPLE>TrOut 23,ME1#,ME2#,ME3#,ME4#,ME5#,ME6#,ME7#</SAMPLE>
<SAMPLE>TrOut 31,ME1#,ME2#,ME3#,ME4#,ME5#,ME6#,ME7#,ME8#</SAMPLE>
<COMMENT>The specified general-purpose output signal is turned on and the value of an external encoder is read.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>TrRd</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>TrRd &lt;Position data&gt;, &lt;Encoder data&gt;</FORMAT>
<FORMAT>TrRd &lt;Position data&gt;, &lt;Encoder data&gt;, &lt;Model number&gt;</FORMAT>
<FORMAT>TrRd &lt;Position data&gt;, &lt;Encoder data&gt;, &lt;Model number&gt;, &lt;Buffer number&gt;</FORMAT>
<FORMAT>TrRd &lt;Position data&gt;, &lt;Encoder data&gt;, &lt;Model number&gt;, &lt;Buffer number&gt;, &lt;Encoder number&gt;</FORMAT>
<FORMAT>TrRd &lt;Position data&gt;, &lt;Encoder data&gt;, &lt;Model number&gt;, &lt;Buffer number&gt;, &lt;Encoder number&gt;, &lt;Pixel position&gt;</FORMAT>
<SAMPLE>TrRd P1,MENC#</SAMPLE>
<SAMPLE>TrRd P1,MENC#,MK%</SAMPLE>
<SAMPLE>TrRd P1,MENC#,MK%,1</SAMPLE>
<SAMPLE>TrRd P1,MENC#,MK%,1,MENCNO%</SAMPLE>
<SAMPLE>TrRd P1,MENC#,MK%,1,MENCNO%, Pixel</SAMPLE>
<COMMENT>Read position data for tracking operation, encoder data and so on from the data buffer.</COMMENT>
<COMMENT>After that, the value is written in the specified variable.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>TrWrt</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>TrWrt &lt;Position data&gt;, &lt;Encoder data&gt;</FORMAT>
<FORMAT>TrWrt &lt;Position data&gt;, &lt;Encoder data&gt;, &lt;Model number&gt;</FORMAT>
<FORMAT>TrWrt &lt;Position data&gt;, &lt;Encoder data&gt;, &lt;Model number&gt;, &lt;Buffer number&gt;</FORMAT>
<FORMAT>TrWrt &lt;Position data&gt;, &lt;Encoder data&gt;, &lt;Model number&gt;, &lt;Buffer number&gt;, &lt;Encoder number&gt;</FORMAT>
<FORMAT>TrWrt &lt;Position data&gt;, &lt;Encoder data&gt;, &lt;Model number&gt;, &lt;Buffer number&gt;, &lt;Encoder number&gt;, &lt;Pixel position&gt;</FORMAT>
<SAMPLE>TrWrt P1,MENC#</SAMPLE>
<SAMPLE>TrWrt P1,MENC#,MK%</SAMPLE>
<SAMPLE>TrWrt P1,MENC#,MK%,1</SAMPLE>
<SAMPLE>TrWrt P1,MENC#,MK%,1,MENCNO%</SAMPLE>
<SAMPLE>TrWrt P1,MENC#,MK%,1,MENCNO%, Pixel</SAMPLE>
<COMMENT>Write position data for tracking operation, encoder data and so on in the data buffer.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>V3Calc</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>V3Calc #&lt;Vision sensor number&gt;</FORMAT>
<FORMAT>V3Calc #&lt;Vision sensor number&gt; [,&lt;Storage Number&gt;]</FORMAT>
<SAMPLE>V3Calc #1</SAMPLE>
<SAMPLE>V3Calc #1,5</SAMPLE>
<COMMENT>Demand the execution of the calibration measurement.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>V3Calib</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>V3Calib #&lt;Vision sensor number&gt;, &lt;PostureID&gt;</FORMAT>
<FORMAT>V3Calib #&lt;Vision sensor number&gt;, &lt;PostureID&gt;, &lt;Storage Number&gt;</FORMAT>
<FORMAT>V3Calib #&lt;Vision sensor number&gt;, &lt;PostureID&gt;, &lt;Storage Number&gt;, &lt;Mechanical I/F coordinates&gt;</FORMAT>
<SAMPLE>V3Calib #1,3</SAMPLE>
<SAMPLE>V3Calib #1,6 ,2</SAMPLE>
<SAMPLE>V3Calib #1,2 ,7 ,PMif</SAMPLE>
<COMMENT>Transmit information for the calibration.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>V3Close</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>V3Close</FORMAT>
<FORMAT>V3Close #&lt;Vision sensor number&gt;</FORMAT>
<FORMAT>V3Close #&lt;Vision sensor number&gt;, #&lt;Vision sensor number&gt;[,#&lt;Vision sensor number&gt;]</FORMAT>
<SAMPLE>V3Close</SAMPLE>
<SAMPLE>V3Close #1</SAMPLE>
<SAMPLE>V3Close #1,#3</SAMPLE>
<COMMENT>Cuts the line with the specified MELFA-3D vision.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>V3Open</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>V3Open &quot;&lt;COM number&gt;&quot; AS #&lt;Vision sensor number&gt;</FORMAT>
<SAMPLE>V3Open &quot;COM2:&quot; AS #1</SAMPLE>
<COMMENT>Connects with the specified MELFA-3D Vision sensor.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>V3Run</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>V3Run #&lt;Vision sensor number&gt;, &lt;Job Name&gt;, &lt;Work Area ID&gt;, &lt;Measurement flag&gt;, &lt;Recognition flag&gt;</FORMAT>
<FORMAT>V3Run #&lt;Vision sensor number&gt;, &lt;Job Name&gt;, &lt;Work Area ID&gt;, &lt;Measurement flag&gt;, &lt;Recognition flag&gt;, &lt;Target number&gt;</FORMAT>
<FORMAT>V3Run #&lt;Vision sensor number&gt;, &lt;Job Name&gt;, &lt;Work Area ID&gt;, &lt;Measurement flag&gt;, &lt;Recognition flag&gt;, &lt;Target number&gt;, &lt;Storage Number&gt;</FORMAT>
<FORMAT>V3Run #&lt;Vision sensor number&gt;, &lt;Job Name&gt;, &lt;Work Area ID&gt;, &lt;Measurement flag&gt;, &lt;Recognition flag&gt;, &lt;Target number&gt;, &lt;Storage Number&gt;, &lt;Mechanical I/F coordinates&gt;</FORMAT>
<SAMPLE>V3Run #1,&quot;TEST&quot;,1,1,0</SAMPLE>
<SAMPLE>V3Run #1,&quot;TEST&quot;,2,1,1,2</SAMPLE>
<SAMPLE>V3Run #1,&quot;TEST&quot;,3,1,1,3,9</SAMPLE>
<SAMPLE>V3Run #1,&quot;TEST&quot;,3,1,1,3,9,PMif</SAMPLE>
<COMMENT>Demand the execution of the job that specifies it for MELFA-3D Vision.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Wait</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Wait  &lt;Numeric variable&gt; = &lt;Numeric constant&gt;</FORMAT>
<SAMPLE>Wait M_In(1)=1</SAMPLE>
<COMMENT>Waits for the variable to reach the designated value.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>While</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>While  &lt;Loop Condition&gt;</FORMAT>
<FORMAT>..</FORMAT>
<FORMAT>WEnd</FORMAT>
<SAMPLE>While M1&gt;=-5</SAMPLE>
<SAMPLE>  M1=-(M1+1)</SAMPLE>
<SAMPLE>WEnd</SAMPLE>
<COMMENT>The program between the While statement and WEnd statement is repeated until the loop conditions are satisfied.</COMMENT>
<END_NAME>WEnd</END_NAME>
</TEMPLATE>
<TEMPLATE><RSV_NAME>WEnd</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>While  &lt;Loop Condition&gt;</FORMAT>
<FORMAT>..</FORMAT>
<FORMAT>WEnd</FORMAT>
<SAMPLE>While M1&gt;=-5</SAMPLE>
<SAMPLE>  M1=-(M1+1)</SAMPLE>
<SAMPLE>WEnd</SAMPLE>
<COMMENT>The program between the While statement and WEnd statement is repeated until the loop conditions are satisfied.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>Wth</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>Wth  &lt;Process&gt;</FORMAT>
<SAMPLE>Mov P1 Wth M_Out(17)=1 Dly 2</SAMPLE>
<COMMENT>A process is added to the interpolation motion.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>WthIf</RSV_NAME>
<CATEGORY>1</CATEGORY>
<FORMAT>WthIf  &lt;Additional Condition&gt;, &lt;Process&gt;</FORMAT>
<SAMPLE>Mov P1 WthIf M_In(17)=1, Hlt</SAMPLE>
<COMMENT>A process is conditionally added to the interpolation motion command.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>XClr</RSV_NAME>
<CATEGORY>4</CATEGORY>
<FORMAT>XClr  &lt;Slot No.&gt;</FORMAT>
<SAMPLE>XClr 2</SAMPLE>
<COMMENT>This instruction cancels the program selection status of the specified task slot from within a program.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>XLoad</RSV_NAME>
<CATEGORY>4</CATEGORY>
<FORMAT>XLoad  &lt;Slot No.&gt;, &lt;Program Name&gt;</FORMAT>
<SAMPLE>XLoad 2, &quot;10&quot;</SAMPLE>
<COMMENT>This instruction commands the specified program to be loaded into the specified task slot from within a program.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>XRst</RSV_NAME>
<CATEGORY>4</CATEGORY>
<FORMAT>XRst  &lt;Slot No.&gt;</FORMAT>
<SAMPLE>XRst 2</SAMPLE>
<COMMENT>This instruction returns the program control to the first line if the program of the specified task slot is paused by a command within the program (program reset).</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>XRun</RSV_NAME>
<CATEGORY>4</CATEGORY>
<FORMAT>XRun  &lt;Slot No.&gt;</FORMAT>
<FORMAT>XRun  &lt;Slot No.&gt;, &quot;&lt;Program Name&gt;&quot;</FORMAT>
<FORMAT>XRun  &lt;Slot No.&gt;, &quot;&lt;Program Name&gt;&quot;, &lt;Operation Mode&gt;</FORMAT>
<SAMPLE>XRun 2</SAMPLE>
<SAMPLE>XRun 2, &quot;1&quot;</SAMPLE>
<SAMPLE>XRun 3, &quot;2&quot;, 1</SAMPLE>
<COMMENT>This instruction executes concurrently the specified programs from within a program.</COMMENT>
</TEMPLATE>
<TEMPLATE><RSV_NAME>XStp</RSV_NAME>
<CATEGORY>4</CATEGORY>
<FORMAT>XStp  &lt;Slot No.&gt;</FORMAT>
<SAMPLE>XStp 2</SAMPLE>
<COMMENT>This instruction pauses the execution of the program in the specified task slot from within a program.</COMMENT>
</TEMPLATE>
</COMMAND>
